import{_ as r,X as a,Y as i,a1 as l,Z as e,$ as o,a2 as t,a0 as s,F as c}from"./framework-68dd73a2.js";const h={},d=e("h1",{id:"springboot官方api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#springboot官方api","aria-hidden":"true"},"#"),o(" SpringBoot官方API")],-1),p=e("div",{class:"hint-container warning"},[e("p",{class:"hint-container-title"},"注意"),e("p",null,"本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。")],-1),_={href:"https://docs.spring.io/spring-boot/docs/current/api/index.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://spring.io/projects/spring-boot",target:"_blank",rel:"noopener noreferrer"},u={href:"https://springcloud.cc/spring-boot.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://doc.yonyoucloud.com/doc/wiki/project/java-course/index.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.ibm.com/docs/zh/was/8.5.5?topic=cj-java-virtual-machine-settings",target:"_blank",rel:"noopener noreferrer"},b={href:"https://ost.51cto.com/posts/4050",target:"_blank",rel:"noopener noreferrer"},k=s('<hr><h3 id="分割线" tabindex="-1"><a class="header-anchor" href="#分割线" aria-hidden="true">#</a> 分割线</h3><hr><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>以上就是我关于 <em>SpringBoot官方API</em> 知识点的整理与总结的全部内容，希望对你有帮助。。。。。。。</strong></p></div><h3 id="扩展知识" tabindex="-1"><a class="header-anchor" href="#扩展知识" aria-hidden="true">#</a> 扩展知识</h3><ul><li>什么是跨域</li></ul>',6),x=e("p",null,"跨域问题主要发生在浏览器环境中，当满足以下条件之一时，就会发生跨域访问：",-1),v={href:"http://domain1.com",target:"_blank",rel:"noopener noreferrer"},S={href:"http://domain2.com",target:"_blank",rel:"noopener noreferrer"},P={href:"http://domain1.com:3000",target:"_blank",rel:"noopener noreferrer"},w={href:"http://domain1.com",target:"_blank",rel:"noopener noreferrer"},N={href:"https://domain1.com",target:"_blank",rel:"noopener noreferrer"},O={href:"http://sub.domain1.xn--comhttp-bs4l",target:"_blank",rel:"noopener noreferrer"},B=e("hr",null,null,-1),I=e("h3",{id:"原创",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#原创","aria-hidden":"true"},"#"),o(" 原创")],-1),j=e("hr",null,null,-1),C=e("p",null,[e("strong",null,"此博客为涎涎 2023年05月21日 原创，若您转载，请标明出处以尊重他人劳动成果")],-1);function J(T,V){const n=c("ExternalLinkIcon");return a(),i("div",null,[l(" more "),d,p,e("ol",null,[e("li",null,[e("a",_,[o("spring-boot英文版API"),t(n)])]),e("li",null,[e("a",m,[o("Spring英文官网"),t(n)])]),e("li",null,[e("a",u,[o("SpringBoot中文API"),t(n)])]),e("li",null,[e("a",f,[o("Java 课程 COOL"),t(n)])]),e("li",null,[e("a",g,[o("Java 虚拟机设置"),t(n)])]),e("li",null,[e("a",b,[o("Java虚拟机之内存区域和垃圾收集"),t(n)])])]),k,e("blockquote",null,[x,e("ol",null,[e("li",null,[o("域名不同：当浏览器中执行的Web应用程序从一个域（例如"),e("a",v,[o("http://domain1.com"),t(n)]),o("）加载资源，但尝试访问另一个域（例如"),e("a",S,[o("http://domain2.com"),t(n)]),o("）的资源时，就会出现跨域访问问题。")]),e("li",null,[o("域名相同但端口不同：即使两个域名相同，但端口不同（例如http://domain1.com:8080和"),e("a",P,[o("http://domain1.com:3000"),t(n)]),o("），浏览器也会视为不同的域，出现跨域问题。")]),e("li",null,[o("协议不同：当浏览器中执行的Web应用程序从一个使用HTTP协议的域（例如"),e("a",w,[o("http://domain1.com"),t(n)]),o("）加载资源，但尝试访问使用HTTPS协议的域（例如"),e("a",N,[o("https://domain1.com"),t(n)]),o("）时，也会发生跨域访问问题。")]),e("li",null,[o("子域不同：即使两个域名是同一个顶级域名，但子域不同（例如"),e("a",O,[o("http://sub.domain1.com和http"),t(n)]),o("😕/domain1.com），浏览器也会视为不同的域，出现跨域问题。 跨域问题主要受到浏览器的同源策略（Same-Origin Policy）的限制，该策略是一种安全机制，防止恶意网站利用跨域请求进行信息获取或执行未经授权的操作。如果需要在跨域情况下进行资源访问，需要采取相应的跨域解决方案，如CORS（Cross-Origin Resource Sharing）、JSONP（JSON with Padding）或代理服务器等。")])])]),B,I,j,C])}const y=r(h,[["render",J],["__file","springboot1.html.vue"]]);export{y as default};
