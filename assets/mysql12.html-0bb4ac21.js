import{_ as n,X as s,Y as a,a1 as t,a0 as p}from"./framework-68dd73a2.js";const o={},e=p(`<h1 id="mysql-关系型数据库事务及其简单示例" tabindex="-1"><a class="header-anchor" href="#mysql-关系型数据库事务及其简单示例" aria-hidden="true">#</a> Mysql_关系型数据库事务及其简单示例</h1><div class="hint-container warning"><p class="hint-container-title">注意</p><p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p></div><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h3><blockquote><p>MySQL事务是一组被视为一个逻辑单元的SQL操作， 这些操作要么全部成功执行，要么全部回滚到初始状态，以保证数据库的一致性和完整性。</p></blockquote><ul><li>在MySQL中，事务是通过以下方式进行管理：</li></ul><ol><li><p>开始事务：通过使用<code>START TRANSACTION</code>或<code>BEGIN</code>语句来显式地开始一个事务。或者，可以将MySQL的自动提交模式（默认模式）更改为手动提交模式，这样每个SQL语句都将成为一个独立的事务。</p></li><li><p>执行事务操作：在事务中执行一系列的SQL操作，包括插入、更新、删除等。这些操作可以通过执行多个SQL语句或者执行存储过程、函数等来实现。</p></li><li><p>提交事务：如果所有的操作都成功完成，并且没有发生错误，可以通过使用<code>COMMIT</code>语句来提交事务。这将使事务中的所有修改永久保存到数据库中，并释放相关的锁资源。</p></li><li><p>回滚事务：如果在事务执行过程中发生了错误或者需要撤销事务的修改，可以使用<code>ROLLBACK</code>语句来回滚事务。这将撤销事务中的所有修改，并恢复到事务开始前的状态。</p></li></ol><ul><li>MySQL事务具有以下特性：</li></ul><ol><li><p>原子性（Atomicity）：事务中的所有操作要么全部成功执行，要么全部回滚，不存在部分执行的情况。</p></li><li><p>一致性（Consistency）：事务的执行不会破坏数据库的一致性约束，数据库始终保持有效的状态。</p></li><li><p>隔离性（Isolation）：并发事务之间相互隔离，每个事务在执行过程中感知不到其他事务对数据库的修改。MySQL提供了多个隔离级别，如读未提交（Read Uncommitted）、读已提交（Read Committed）、可重复读（Repeatable Read）和串行化（Serializable）。</p></li><li><p>持久性（Durability）：一旦事务提交，其对数据库的修改将永久保存，即使发生系统故障也不会丢失。</p></li></ol><blockquote><p>事务的使用可以确保数据库操作的完整性和一致性， 尤其在并发访问数据库时非常重要。通过合理地使用事务， 可以避免数据丢失、数据不一致和并发冲突等问题，提供可靠的数据操作机制。</p></blockquote><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><blockquote><p>假设有一个银行账户表（<code>accounts</code>），其中包含账户号（<code>account_number</code>） 和余额（<code>balance</code>）两个字段。现在我们需要进行转账操作， 将一笔金额从一个账户转移到另一个账户，同时确保操作的原子性和一致性。</p></blockquote><ul><li>在MySQL中，我们可以使用事务来实现这个转账操作。下面是一个简单的示例：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransactionExample</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 假设数据库连接信息</span>
        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/mydatabase&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 开启事务</span>
            connection<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 执行转账操作</span>
            <span class="token function">transferFunds</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;789012&quot;</span><span class="token punctuation">,</span> <span class="token number">100.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 提交事务</span>
            connection<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;转账成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 出现异常，回滚事务</span>
            connection<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;转账失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">transferFunds</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">,</span> <span class="token class-name">String</span> fromAccount<span class="token punctuation">,</span> <span class="token class-name">String</span> toAccount<span class="token punctuation">,</span> <span class="token keyword">double</span> amount<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 从账户扣除金额</span>
        <span class="token function">updateBalance</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> fromAccount<span class="token punctuation">,</span> <span class="token operator">-</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 向账户添加金额</span>
        <span class="token function">updateBalance</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> toAccount<span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">updateBalance</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">,</span> <span class="token class-name">String</span> account<span class="token punctuation">,</span> <span class="token keyword">double</span> amount<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 更新账户余额</span>
        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;UPDATE accounts SET balance = balance + ? WHERE account_number = ?&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">PreparedStatement</span> statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            statement<span class="token punctuation">.</span><span class="token function">setDouble</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
            statement<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> account<span class="token punctuation">)</span><span class="token punctuation">;</span>
            statement<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在上面的示例中，我们使用了<code>Connection</code>对象的<code>setAutoCommit(false)</code> 方法将自动提交模式切换为手动提交模式，开启了一个事务。在转账过程中， 如果发生异常，会触发异常处理代码，其中会回滚事务（<code>connection.rollback()</code>）， 并打印出转账失败的消息。如果没有异常，会提交事务（<code>connection.commit()</code>）， 并打印出转账成功的消息。</p></blockquote><blockquote><p>通过使用事务，我们确保了从一个账户扣除金额和向另一个账户添加金额这两个操作要么同时成功， 要么同时失败，避免了出现数据不一致的情况。如果在执行转账过程中发生任何异常， 事务会回滚，恢复到事务开始前的状态，保证了操作的原子性和一致性。</p></blockquote><hr><h3 id="分割线" tabindex="-1"><a class="header-anchor" href="#分割线" aria-hidden="true">#</a> 分割线</h3><hr><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>以上就是我关于 <em>Mysql_关系型数据库事务及其简单示例</em> 知识点的整理与总结的全部内容，希望对你有帮助。。。。。。。</strong></p></div>`,19);function c(l,i){return s(),a("div",null,[t(" more "),e])}const k=n(o,[["render",c],["__file","mysql12.html.vue"]]);export{k as default};
