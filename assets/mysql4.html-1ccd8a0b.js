const i=JSON.parse(`{"key":"v-78fc8937","path":"/zh/programBlog/Database/MySql/mysql4.html","title":"MySQL-数据库介绍与安装","lang":"zh-CN","frontmatter":{"title":"MySQL-数据库介绍与安装","icon":"page","order":4,"author":"涎涎","date":"2019-08-26T14:20:46.000Z","isOriginal":true,"permalinkPattern":"programBlog/Database/MySql/mysql4.html","category":["MySql"],"tag":["MySql"],"head":[["meta",{"name":"keywords","content":"MySQL-数据库介绍与安装"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/Database/MySql/mysql4.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"MySQL-数据库介绍与安装"}],["meta",{"property":"og:description","content":"4-MySQL-数据库介绍与安装.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 数据库基础知识 数据库介绍 什么是数据库 数据库是按照一定的数据结构来组织、存储和管理数据的仓库 数据库的发展史 最早的数据库 通过大量的分类、比较和表格绘制的机器运行数百万穿孔卡片来进行数据的处理，其运行结果在纸上打印出来或者制成新的穿孔卡片。 数据库发展 当时计算机开始广泛地应用于数据管理，对数据的共享提出了越来越高的要求，传统的文件系统已经不能满足人们的需要。能够统一管理和共享数据的数据库管理系统(DBMS)应动而生 数据库管理系统DBMS 是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，简称DBMS 它对数据库统一的管理和控制，以保证数据库的安全性和完整性。 数据库管理系统是数据库系统的核心，是管理数据库的软件。 我们一般说的数据库，就是指DBMS：数据库管理系统 常见的数据库 Oracle 运行稳定，可移植性高，功能齐全，性能超群！适用于大型企业领域。 DB2 速度快、可靠性好，适于海量数据，恢复性极强。适用于大中型企业领域。 MySQL 开源，体积小，速度快。适用于于中小型企业领域。 SQL Server 全面，效率高，界面友好，操作容易，但是不跨平台。适用于中小型企业领域。 专业术语 表 具有有固定的列数和任意的行数 列 一个数据项Field字段 行 一条记录 row 数据库 数据库是一些关联表的集合 主键 主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。 外键 外键用于关联两个表 索引 使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。 MySQL数据库 Mysql介绍 MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度 并提高了灵活性。 Mysql是开源的，所以你不需要支付额外的费用。 Mysql支持大型的数据库。可以处理拥有上千万条记录的大型数据库。 Mysql使用标准的SQL数据语言形式。 Mysql可以允许于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Pytho、Java、PHP、Eiffel、Ruby和Tcl等。 Mysql安装 windows安装 下载地址 https://dev.mysql.com/downloads/mysql/ 常用数据库命令 Mysql数据库分为两种 系统数据库(数据库服务器自带的.自带的4个) information_schema 存储数据库对象信息 如用户表信息.列信息。根除.字符.分区 里面的内容我们不能动。 performance_schema 存储数据库服务器性能参数信息 mysql 存储数据库用户权限信息 sys 通过这个库可以快速的了解系统的元数据信息 用户数据库 用户自己创建数据库，一个项目用一个数据库 创建数据库 create database 数据库名称 删除数据库 drop database 数据库名称 查看数据库 show databases; 使用数据库 use 数据库名; 连接Navicat 更改加密方式 alter user 'root'@'localhost' identified by 'password' password expire never; alter user 'root'@'localhost' identified with mysql_native_password by 'password'; flush privileges; 软件获取 字符集 字符集的由来 计算机只能识别二进制代码无论是计算机程序还是数据，最终都会转换成二进制，计算机才能认识。 为了计算机不只能做科学计算，也能处理文字信息。人们想出了给每一个文字符号编码以便于计算识别处理的办法 ，这就是计算机字符集的由来。 我 00001 人 00010 ASSCII 一套文字符及其编码比较规则的集合。 20世纪60年代初。美国标准化组织ANSI发布了第一个字符集。ASCII后来又进一步成了国际标准ISO-646 各大字符集 自ASCII后。为了处理不同的文字。各大计算机公司。各国，标准化政府，组织先后发明了几百种字符集。 ISO-8859 GB2312-80 GBK BIG5 这些五花八门的字符集从收录的字符集到编码规则各不相同，给计算机软件开发和移植带来了很大困难。 一个软件要在使用不同文字的国家和地区发布，必须得要做本地化开发。 基于这个原因，要统一字符编码。 unicode 为了统一字符编码，国际标准化组织ISO的一些成员国于1984年发起制定了新的国际字符集标准。容纳全世界各种语言，文字，和 符号。最后这个标准ISO-10646 ISO-10646发布后，遭到了美国计算机公司的反对。 1988年，Xerox公司提议制定了新的以16位编码人统一字符集，并联合不Apple,IBM,SUM,Microsoft等公司成立了Unicode技术委员会，专门负责收集，整理，和编码，于1991年推出了Unicode1.0 都是为了字符编码统一问题，ISO和Unicode协会推出了连个不同人标准，这显然是不利的，后来双方开始谈判。1991年10月达成协议。ISO将Unicode收编，起了个名BMP。 Unicode是用0至65535之间的数字来表示所有字符 其中0至127这128个数字的字符仍然跟ASCII完全一样 UTF-16 怎么把0至65535这些数字转化成01串保存到计算机中 于是出现了UTF(unicode transformation format). UTF-16比较好理解，就是任何字符对应的数字都用两个字节来保存。 但是很显然如果都是英文字母这做有点浪费，明明用一个字节都表示一个字符为啥整两个啊 UTF-8 于是有个UTF-8 这里的8非常容易误导人，8不是指一个字节 当用UTF-8时表示一个字符是可变的，有可能是用一个字节表示一个字符，也可能是两个，三个。。反正是根据字符对应的数字大小来确定。 汉字的一些常见字符集 GB2312 GB13000 GBK GB18030 MySql的存储引擎 什么是存储引擎 MySQL中的数据用各种不同的技术存储在文件(或者内存)中。这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。通过选择不同的技术，你能够获得额外的或者功能，从而改善你的应用的整体功能。 不同的存储引擎性能是不一样的 存储引擎分类 MYISAM 它不支持事务，也不支持外键，尤其是访问速度快，对事务完整性没有要求或者以SELECT、INSERT为主的应用基本都可以使用这个引擎来创建表。 每个MylSAM在磁盘上存储成3个文件，其中文件名和表名相同，但是扩展名分别为： .frm(存储表定义) MYD(MYData,存储数据) MYI(MYIndex,存储索引) INNODB InnoDB存储引擎提供了具有提交、回滚和崩溃恢复能力的事务安全，但是对比MylSAM的存储引擎，InnoDB写的处理效率差一些并且会占用更多的磁盘空间以保留数据和索引。 MEMORY memory使用存在内存中的内容来创建表。每个memory表实际对应一个磁盘文件，格式是.frm memory类型的表访问非常快，因为它到数据是放在内存中的，并且默认使用HASH索引，但是一旦服务器关闭，表中的数据就会丢失，但表还会继续存在。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-13T03:33:51.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"MySql"}],["meta",{"property":"article:published_time","content":"2019-08-26T14:20:46.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-13T03:33:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL-数据库介绍与安装\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-26T14:20:46.000Z\\",\\"dateModified\\":\\"2023-06-13T03:33:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"4-MySQL-数据库介绍与安装.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 数据库基础知识 数据库介绍 什么是数据库 数据库是按照一定的数据结构来组织、存储和管理数据的仓库 数据库的发展史 最早的数据库 通过大量的分类、比较和表格绘制的机器运行数百万穿孔卡片来进行数据的处理，其运行结果在纸上打印出来或者制成新的穿孔卡片。 数据库发展 当时计算机开始广泛地应用于数据管理，对数据的共享提出了越来越高的要求，传统的文件系统已经不能满足人们的需要。能够统一管理和共享数据的数据库管理系统(DBMS)应动而生 数据库管理系统DBMS 是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，简称DBMS 它对数据库统一的管理和控制，以保证数据库的安全性和完整性。 数据库管理系统是数据库系统的核心，是管理数据库的软件。 我们一般说的数据库，就是指DBMS：数据库管理系统 常见的数据库 Oracle 运行稳定，可移植性高，功能齐全，性能超群！适用于大型企业领域。 DB2 速度快、可靠性好，适于海量数据，恢复性极强。适用于大中型企业领域。 MySQL 开源，体积小，速度快。适用于于中小型企业领域。 SQL Server 全面，效率高，界面友好，操作容易，但是不跨平台。适用于中小型企业领域。 专业术语 表 具有有固定的列数和任意的行数 列 一个数据项Field字段 行 一条记录 row 数据库 数据库是一些关联表的集合 主键 主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。 外键 外键用于关联两个表 索引 使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。 MySQL数据库 Mysql介绍 MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度 并提高了灵活性。 Mysql是开源的，所以你不需要支付额外的费用。 Mysql支持大型的数据库。可以处理拥有上千万条记录的大型数据库。 Mysql使用标准的SQL数据语言形式。 Mysql可以允许于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Pytho、Java、PHP、Eiffel、Ruby和Tcl等。 Mysql安装 windows安装 下载地址 https://dev.mysql.com/downloads/mysql/ 常用数据库命令 Mysql数据库分为两种 系统数据库(数据库服务器自带的.自带的4个) information_schema 存储数据库对象信息 如用户表信息.列信息。根除.字符.分区 里面的内容我们不能动。 performance_schema 存储数据库服务器性能参数信息 mysql 存储数据库用户权限信息 sys 通过这个库可以快速的了解系统的元数据信息 用户数据库 用户自己创建数据库，一个项目用一个数据库 创建数据库 create database 数据库名称 删除数据库 drop database 数据库名称 查看数据库 show databases; 使用数据库 use 数据库名; 连接Navicat 更改加密方式 alter user 'root'@'localhost' identified by 'password' password expire never; alter user 'root'@'localhost' identified with mysql_native_password by 'password'; flush privileges; 软件获取 字符集 字符集的由来 计算机只能识别二进制代码无论是计算机程序还是数据，最终都会转换成二进制，计算机才能认识。 为了计算机不只能做科学计算，也能处理文字信息。人们想出了给每一个文字符号编码以便于计算识别处理的办法 ，这就是计算机字符集的由来。 我 00001 人 00010 ASSCII 一套文字符及其编码比较规则的集合。 20世纪60年代初。美国标准化组织ANSI发布了第一个字符集。ASCII后来又进一步成了国际标准ISO-646 各大字符集 自ASCII后。为了处理不同的文字。各大计算机公司。各国，标准化政府，组织先后发明了几百种字符集。 ISO-8859 GB2312-80 GBK BIG5 这些五花八门的字符集从收录的字符集到编码规则各不相同，给计算机软件开发和移植带来了很大困难。 一个软件要在使用不同文字的国家和地区发布，必须得要做本地化开发。 基于这个原因，要统一字符编码。 unicode 为了统一字符编码，国际标准化组织ISO的一些成员国于1984年发起制定了新的国际字符集标准。容纳全世界各种语言，文字，和 符号。最后这个标准ISO-10646 ISO-10646发布后，遭到了美国计算机公司的反对。 1988年，Xerox公司提议制定了新的以16位编码人统一字符集，并联合不Apple,IBM,SUM,Microsoft等公司成立了Unicode技术委员会，专门负责收集，整理，和编码，于1991年推出了Unicode1.0 都是为了字符编码统一问题，ISO和Unicode协会推出了连个不同人标准，这显然是不利的，后来双方开始谈判。1991年10月达成协议。ISO将Unicode收编，起了个名BMP。 Unicode是用0至65535之间的数字来表示所有字符 其中0至127这128个数字的字符仍然跟ASCII完全一样 UTF-16 怎么把0至65535这些数字转化成01串保存到计算机中 于是出现了UTF(unicode transformation format). UTF-16比较好理解，就是任何字符对应的数字都用两个字节来保存。 但是很显然如果都是英文字母这做有点浪费，明明用一个字节都表示一个字符为啥整两个啊 UTF-8 于是有个UTF-8 这里的8非常容易误导人，8不是指一个字节 当用UTF-8时表示一个字符是可变的，有可能是用一个字节表示一个字符，也可能是两个，三个。。反正是根据字符对应的数字大小来确定。 汉字的一些常见字符集 GB2312 GB13000 GBK GB18030 MySql的存储引擎 什么是存储引擎 MySQL中的数据用各种不同的技术存储在文件(或者内存)中。这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。通过选择不同的技术，你能够获得额外的或者功能，从而改善你的应用的整体功能。 不同的存储引擎性能是不一样的 存储引擎分类 MYISAM 它不支持事务，也不支持外键，尤其是访问速度快，对事务完整性没有要求或者以SELECT、INSERT为主的应用基本都可以使用这个引擎来创建表。 每个MylSAM在磁盘上存储成3个文件，其中文件名和表名相同，但是扩展名分别为： .frm(存储表定义) MYD(MYData,存储数据) MYI(MYIndex,存储索引) INNODB InnoDB存储引擎提供了具有提交、回滚和崩溃恢复能力的事务安全，但是对比MylSAM的存储引擎，InnoDB写的处理效率差一些并且会占用更多的磁盘空间以保留数据和索引。 MEMORY memory使用存在内存中的内容来创建表。每个memory表实际对应一个磁盘文件，格式是.frm memory类型的表访问非常快，因为它到数据是放在内存中的，并且默认使用HASH索引，但是一旦服务器关闭，表中的数据就会丢失，但表还会继续存在。"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1686627231000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":9}]},"readingTime":{"minutes":7.73,"words":2318},"filePathRelative":"zh/programBlog/Database/MySql/4-MySQL-数据库介绍与安装.md","localizedDate":"2019年8月26日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--4-MySQL--t49l34di90exvhxnqutg200iyl7a.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4-MySQL-数据库介绍与安装.md</a></h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<ul>\\n<li>数据库基础知识\\n<ul>\\n<li>\\n<p>数据库介绍</p>\\n<ul>\\n<li>什么是数据库\\n<ul>\\n<li>数据库是按照一定的数据结构来组织、存储和管理数据的仓库</li>\\n</ul>\\n</li>\\n<li>数据库的发展史\\n<ul>\\n<li>最早的数据库\\n<ul>\\n<li>通过大量的分类、比较和表格绘制的机器运行数百万穿孔卡片来进行数据的处理，其运行结果在纸上打印出来或者制成新的穿孔卡片。</li>\\n</ul>\\n</li>\\n<li>数据库发展\\n<ul>\\n<li>当时计算机开始广泛地应用于数据管理，对数据的共享提出了越来越高的要求，传统的文件系统已经不能满足人们的需要。能够统一管理和共享数据的数据库管理系统(DBMS)应动而生</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>数据库管理系统DBMS\\n<ul>\\n<li>是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库，简称DBMS</li>\\n<li>它对数据库统一的管理和控制，以保证数据库的安全性和完整性。</li>\\n<li>数据库管理系统是数据库系统的核心，是管理数据库的软件。</li>\\n<li>我们一般说的数据库，就是指DBMS：数据库管理系统</li>\\n</ul>\\n</li>\\n<li>常见的数据库\\n<ul>\\n<li>Oracle\\n<ul>\\n<li>运行稳定，可移植性高，功能齐全，性能超群！适用于大型企业领域。</li>\\n</ul>\\n</li>\\n<li>DB2\\n<ul>\\n<li>速度快、可靠性好，适于海量数据，恢复性极强。适用于大中型企业领域。</li>\\n</ul>\\n</li>\\n<li>MySQL\\n<ul>\\n<li>开源，体积小，速度快。适用于于中小型企业领域。</li>\\n</ul>\\n</li>\\n<li>SQL Server\\n<ul>\\n<li>全面，效率高，界面友好，操作容易，但是不跨平台。适用于中小型企业领域。</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>专业术语</p>\\n<ul>\\n<li>\\n<p>表</p>\\n<ul>\\n<li>具有有固定的列数和任意的行数</li>\\n</ul>\\n<figure><img src=\\"/assets/MySql_4_1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n</li>\\n<li>\\n<p>列</p>\\n<ul>\\n<li>一个数据项Field字段</li>\\n</ul>\\n</li>\\n<li>\\n<p>行</p>\\n<ul>\\n<li>一条记录 row</li>\\n</ul>\\n</li>\\n<li>\\n<p>数据库</p>\\n<ul>\\n<li>数据库是一些关联表的集合</li>\\n</ul>\\n</li>\\n<li>\\n<p>主键</p>\\n<ul>\\n<li>主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。</li>\\n</ul>\\n</li>\\n<li>\\n<p>外键</p>\\n<ul>\\n<li>外键用于关联两个表</li>\\n</ul>\\n</li>\\n<li>\\n<p>索引</p>\\n<ul>\\n<li>使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>MySQL数据库</p>\\n<ul>\\n<li>Mysql介绍\\n<ul>\\n<li>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度 并提高了灵活性。</li>\\n<li>Mysql是开源的，所以你不需要支付额外的费用。</li>\\n<li>Mysql支持大型的数据库。可以处理拥有上千万条记录的大型数据库。</li>\\n<li>Mysql使用标准的SQL数据语言形式。</li>\\n<li>Mysql可以允许于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Pytho、Java、PHP、Eiffel、Ruby和Tcl等。</li>\\n</ul>\\n</li>\\n<li>Mysql安装\\n<ul>\\n<li>windows安装\\n<ul>\\n<li>\\n<p>下载地址</p>\\n<ul>\\n<li><a href=\\"https://dev.mysql.com/downloads/mysql/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://dev.mysql.com/downloads/mysql/</a></li>\\n</ul>\\n<figure><img src=\\"/assets/MySql_4_2.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_3.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_4.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_5.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_6.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_7.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_8.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_9.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_10.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_11.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_12.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_13.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_14.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_15.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_16.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_17.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_18.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_19.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_20.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_21.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_22.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>常用数据库命令</p>\\n<ul>\\n<li>\\n<p>Mysql数据库分为两种</p>\\n<ul>\\n<li>系统数据库(数据库服务器自带的.自带的4个)\\n<ul>\\n<li>information_schema\\n<ul>\\n<li>存储数据库对象信息</li>\\n<li>如用户表信息.列信息。根除.字符.分区</li>\\n<li>里面的内容我们不能动。</li>\\n</ul>\\n</li>\\n<li>performance_schema\\n<ul>\\n<li>存储数据库服务器性能参数信息</li>\\n</ul>\\n</li>\\n<li>mysql\\n<ul>\\n<li>存储数据库用户权限信息</li>\\n</ul>\\n</li>\\n<li>sys\\n<ul>\\n<li>通过这个库可以快速的了解系统的元数据信息</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>用户数据库\\n<ul>\\n<li>用户自己创建数据库，一个项目用一个数据库</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>创建数据库</p>\\n<ul>\\n<li>create database 数据库名称</li>\\n</ul>\\n</li>\\n<li>\\n<p>删除数据库</p>\\n<ul>\\n<li>drop database 数据库名称</li>\\n</ul>\\n</li>\\n<li>\\n<p>查看数据库</p>\\n<ul>\\n<li>show databases;</li>\\n</ul>\\n</li>\\n<li>\\n<p>使用数据库</p>\\n<ul>\\n<li>use 数据库名;</li>\\n</ul>\\n<figure><img src=\\"/assets/MySql_4_23.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_24.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_25.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_26.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_27.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_28.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_29.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_30.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_31.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_32.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_33.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_34.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_35.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/MySql_4_36.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>连接Navicat</p>\\n<ul>\\n<li>更改加密方式\\n<ul>\\n<li>alter user 'root'@'localhost' identified by 'password' password expire never;</li>\\n<li>alter user 'root'@'localhost' identified with mysql_native_password by 'password';</li>\\n<li>flush privileges;</li>\\n</ul>\\n</li>\\n<li>软件获取</li>\\n</ul>\\n<figure><img src=\\"/assets/MySql_4_37.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n</li>\\n<li>\\n<p>字符集</p>\\n<ul>\\n<li>字符集的由来\\n<ul>\\n<li>计算机只能识别二进制代码无论是计算机程序还是数据，最终都会转换成二进制，计算机才能认识。</li>\\n<li>为了计算机不只能做科学计算，也能处理文字信息。人们想出了给每一个文字符号编码以便于计算识别处理的办法 ，这就是计算机字符集的由来。</li>\\n<li>我 00001</li>\\n<li>人 00010</li>\\n</ul>\\n</li>\\n<li>ASSCII\\n<ul>\\n<li>一套文字符及其编码比较规则的集合。\\n<ul>\\n<li>20世纪60年代初。美国标准化组织ANSI发布了第一个字符集。ASCII后来又进一步成了国际标准ISO-646</li>\\n</ul>\\n</li>\\n<li>各大字符集\\n<ul>\\n<li>自ASCII后。为了处理不同的文字。各大计算机公司。各国，标准化政府，组织先后发明了几百种字符集。\\n<ul>\\n<li>ISO-8859</li>\\n<li>GB2312-80</li>\\n<li>GBK</li>\\n<li>BIG5</li>\\n</ul>\\n</li>\\n<li>这些五花八门的字符集从收录的字符集到编码规则各不相同，给计算机软件开发和移植带来了很大困难。</li>\\n<li>一个软件要在使用不同文字的国家和地区发布，必须得要做本地化开发。</li>\\n<li>基于这个原因，要统一字符编码。</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>unicode\\n<ul>\\n<li>为了统一字符编码，国际标准化组织ISO的一些成员国于1984年发起制定了新的国际字符集标准。容纳全世界各种语言，文字，和 符号。最后这个标准ISO-10646</li>\\n<li>ISO-10646发布后，遭到了美国计算机公司的反对。</li>\\n<li>1988年，Xerox公司提议制定了新的以16位编码人统一字符集，并联合不Apple,IBM,SUM,Microsoft等公司成立了Unicode技术委员会，专门负责收集，整理，和编码，于1991年推出了Unicode1.0</li>\\n<li>都是为了字符编码统一问题，ISO和Unicode协会推出了连个不同人标准，这显然是不利的，后来双方开始谈判。1991年10月达成协议。ISO将Unicode收编，起了个名BMP。</li>\\n<li>Unicode是用0至65535之间的数字来表示所有字符</li>\\n<li>其中0至127这128个数字的字符仍然跟ASCII完全一样</li>\\n</ul>\\n</li>\\n<li>UTF-16\\n<ul>\\n<li>怎么把0至65535这些数字转化成01串保存到计算机中</li>\\n<li>于是出现了UTF(unicode transformation format).</li>\\n<li>UTF-16比较好理解，就是任何字符对应的数字都用两个字节来保存。</li>\\n<li>但是很显然如果都是英文字母这做有点浪费，明明用一个字节都表示一个字符为啥整两个啊</li>\\n</ul>\\n</li>\\n<li>UTF-8\\n<ul>\\n<li>于是有个UTF-8</li>\\n<li>这里的8非常容易误导人，8不是指一个字节</li>\\n<li>当用UTF-8时表示一个字符是可变的，有可能是用一个字节表示一个字符，也可能是两个，三个。。反正是根据字符对应的数字大小来确定。</li>\\n</ul>\\n</li>\\n<li>汉字的一些常见字符集\\n<ul>\\n<li>GB2312</li>\\n<li>GB13000</li>\\n<li>GBK</li>\\n<li>GB18030</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>MySql的存储引擎</p>\\n<ul>\\n<li>什么是存储引擎\\n<ul>\\n<li>MySQL中的数据用各种不同的技术存储在文件(或者内存)中。这些技术中的每一种技术都使用不同的存储机制、索引技巧、锁定水平并且最终提供广泛的不同的功能和能力。通过选择不同的技术，你能够获得额外的或者功能，从而改善你的应用的整体功能。</li>\\n<li>不同的存储引擎性能是不一样的</li>\\n</ul>\\n</li>\\n<li>存储引擎分类\\n<ul>\\n<li>MYISAM\\n<ul>\\n<li>它不支持事务，也不支持外键，尤其是访问速度快，对事务完整性没有要求或者以SELECT、INSERT为主的应用基本都可以使用这个引擎来创建表。</li>\\n<li>每个MylSAM在磁盘上存储成3个文件，其中文件名和表名相同，但是扩展名分别为：\\n<ul>\\n<li>.frm(存储表定义)</li>\\n<li>MYD(MYData,存储数据)</li>\\n<li>MYI(MYIndex,存储索引)</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>INNODB\\n<ul>\\n<li>InnoDB存储引擎提供了具有提交、回滚和崩溃恢复能力的事务安全，但是对比MylSAM的存储引擎，InnoDB写的处理效率差一些并且会占用更多的磁盘空间以保留数据和索引。</li>\\n</ul>\\n</li>\\n<li>MEMORY\\n<ul>\\n<li>memory使用存在内存中的内容来创建表。每个memory表实际对应一个磁盘文件，格式是.frm</li>\\n<li>memory类型的表访问非常快，因为它到数据是放在内存中的，并且默认使用HASH索引，但是一旦服务器关闭，表中的数据就会丢失，但表还会继续存在。</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{i as data};
