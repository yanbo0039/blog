import{_ as n,X as o,Y as r,a1 as p,Z as e,$ as a,a2 as c,a0 as s,F as i}from"./framework-68dd73a2.js";const d={},h={id:"_194-java重写-覆盖-与-重载的区别-md",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#_194-java重写-覆盖-与-重载的区别-md","aria-hidden":"true"},"#",-1),_={href:"http://xn--mcrqz306fv4utoc.md",target:"_blank",rel:"noopener noreferrer"},m=s('<div class="hint-container warning"><p class="hint-container-title">注意</p><p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p></div><blockquote><p>重写（rewrite） | 覆盖（override）:对从父类中继承来的方法进行改造</p><p>​ 条件：基于继承关系</p><p>​ 当子类覆盖或重写父类的方法之后，调用方法时，将调用子类自有覆盖之后的方法</p><p>​</p><p>​ 原则：</p><p>​ 1.方法名一致</p><p>​ 2.参数列表一致（参数个数一致、参数类型一致、参数顺序一致）</p><p>​ 3.返回值类型一致</p><p>​ 4.子类的方法修饰符权限 &gt;= 父类的方法修饰符权限</p><p>---------------------------------------------------------</p><p>重载（overload）:基于同一类，调用同一方法名，传入不同的参数，实现同一功能</p><p>​ 条件：基于同一类</p><p>​</p><p>​ 原则：</p><p>​ 1.方法名一致</p><p>​ 2.参数列表不一致（参数个数不一致、参数类型不一致、参数顺序不一致）</p><p>​ 3.返回值类型可以一致，可以不一致</p></blockquote><hr><h3 id="分割线" tabindex="-1"><a class="header-anchor" href="#分割线" aria-hidden="true">#</a> 分割线</h3><hr><div class="hint-container info"><p class="hint-container-title">相关信息</p><p><strong>以上就是我关于 <em>Java重写（覆盖）与 重载的区别</em> 知识点的整理与总结的全部内容，希望对你有帮助。。。。。。。</strong></p></div>',6);function v(f,u){const t=i("ExternalLinkIcon");return o(),r("div",null,[p(" more "),e("h1",h,[l,a(" 194-Java重写（覆盖）与 "),e("a",_,[a("重载的区别.md"),c(t)])]),m])}const k=n(d,[["render",v],["__file","java194.html.vue"]]);export{k as default};
