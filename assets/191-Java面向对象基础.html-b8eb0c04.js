const n=JSON.parse('{"key":"v-a9b28bde","path":"/zh/programBlog/ServerSideLanguage/Java/191-Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80.html","title":"Java面向对象基础","lang":"zh-CN","frontmatter":{"title":"Java面向对象基础","icon":"page","order":191,"author":"涎涎","date":"2023-01-03T19:14:57.000Z","isOriginal":true,"category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java面向对象基础"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/191-Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java面向对象基础"}],["meta",{"property":"og:description","content":"191-Java面向对象基础.md 概念 \\t 抽象（抽取共有的特质） \\t对象（object） --------------------&gt; 类（class） \\t \\t\\t\\t\\t 具体化 | 实例化（new） \\t类（class）-----------------------&gt; 对象（Object） \\t \\t \\t面向对象的三大特性：封装、继承、多态 \\t \\t------------------------------------------------------------------------------- \\t1.分析对象Object（计算机）： \\t\\t 属性：品牌、显示器、主机、键盘、鼠标、颜色 \\t\\t 行为：开机、关机 \\t\\t || \\t\\t || \\t\\t || \\t\\t || \\t\\t \\\\/ 2.根据对象分析，编程代码中的类Class \\t 属性（全局变量、成员变量）：品牌brand、显示器monitor、主机case、键盘keyboard、鼠标mouse、颜色color \\t\\t 行为（成员方法）：开机turnOn()、关机turnOff() \\t------------------------------------------------------------------------------- \\t------------------------------------------------------------------------------- \\t1.分析对象Object（灯）： \\t\\t 属性：灯丝、灯罩、灯座 \\t\\t 行为：开灯、关灯、调亮、调亮 \\t\\t || \\t\\t || \\t\\t || \\t\\t || \\t\\t \\\\/ 2.根据对象分析，编程代码中的类Class \\t 属性（全局变量、成员变量）：灯丝filament、灯罩lampshade、灯座lampholder \\t\\t 行为（成员方法）：开灯on()、关灯off()、调亮lighten()、调暗dim() \\t------------------------------------------------------------------------------- \\t \\t \\t类的定义： \\t\\t &lt;修饰符&gt; class 类名 \\t\\t { \\t\\t \\t\\t//类的成员 \\t\\t \\t\\t成员变量; \\t\\t \\t\\t成员方法; \\t\\t \\t\\t嵌套类（内部类）; \\t\\t } \\t\\t \\t\\t 修饰符:public &lt;default&gt; \\t\\t \\t\\t 类名：帕斯卡(pascal)规则命名，首字母大写，其余单词的首字母大写，例如HelloWorld \\t\\t \\t\\t 注意： \\t\\t \\t1.一个*.java源文件中仅允许存在一个public修饰的类 \\t\\t \\t2.public修饰的类的名称必须与*.java源文件名称大小写一致 \\t\\t \\t \\t 类是创建对象的模板，对象是类的实例 \\t \\t 创建对象： \\t \\t 类名 对象名 = new 构造器(); \\t \\t \\t 构造器（构造方法/构造器/构造函数，Constructor） \\t\\t\\t1.具有与类相同的名称 \\t\\t\\t2.不含返回值类型 \\t\\t\\t3.不能在方法中用return语句返回一个值 \\t\\t\\t4. 一般访问权限为public \\t\\t \\t\\t 在一个类中，具有上述特征的方法就是构造器。 \\t 构造器的作用： \\t\\t\\t1.完成对象的创建，即完成对象的实例化。XiyoujiRole sunwukong = new XiyoujiRole(); \\t\\t\\t2.一般使用构造器来完成对成员变量的初始化。XiyoujiRole tangSeng = new XiyoujiRole(\\"唐僧\\", \\"无\\", \\"☆☆☆☆☆\\", \\"★★★★★\\"); 注意： 1.默认带无参构造函数 2.当定义带参数构造函数时，默认无参构造函数失效了，需要显示定义出来"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-21T13:47:22.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-01-03T19:14:57.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T13:47:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java面向对象基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-03T19:14:57.000Z\\",\\"dateModified\\":\\"2023-05-21T13:47:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"191-Java面向对象基础.md 概念 \\t 抽象（抽取共有的特质） \\t对象（object） --------------------&gt; 类（class） \\t \\t\\t\\t\\t 具体化 | 实例化（new） \\t类（class）-----------------------&gt; 对象（Object） \\t \\t \\t面向对象的三大特性：封装、继承、多态 \\t \\t------------------------------------------------------------------------------- \\t1.分析对象Object（计算机）： \\t\\t 属性：品牌、显示器、主机、键盘、鼠标、颜色 \\t\\t 行为：开机、关机 \\t\\t || \\t\\t || \\t\\t || \\t\\t || \\t\\t \\\\/ 2.根据对象分析，编程代码中的类Class \\t 属性（全局变量、成员变量）：品牌brand、显示器monitor、主机case、键盘keyboard、鼠标mouse、颜色color \\t\\t 行为（成员方法）：开机turnOn()、关机turnOff() \\t------------------------------------------------------------------------------- \\t------------------------------------------------------------------------------- \\t1.分析对象Object（灯）： \\t\\t 属性：灯丝、灯罩、灯座 \\t\\t 行为：开灯、关灯、调亮、调亮 \\t\\t || \\t\\t || \\t\\t || \\t\\t || \\t\\t \\\\/ 2.根据对象分析，编程代码中的类Class \\t 属性（全局变量、成员变量）：灯丝filament、灯罩lampshade、灯座lampholder \\t\\t 行为（成员方法）：开灯on()、关灯off()、调亮lighten()、调暗dim() \\t------------------------------------------------------------------------------- \\t \\t \\t类的定义： \\t\\t &lt;修饰符&gt; class 类名 \\t\\t { \\t\\t \\t\\t//类的成员 \\t\\t \\t\\t成员变量; \\t\\t \\t\\t成员方法; \\t\\t \\t\\t嵌套类（内部类）; \\t\\t } \\t\\t \\t\\t 修饰符:public &lt;default&gt; \\t\\t \\t\\t 类名：帕斯卡(pascal)规则命名，首字母大写，其余单词的首字母大写，例如HelloWorld \\t\\t \\t\\t 注意： \\t\\t \\t1.一个*.java源文件中仅允许存在一个public修饰的类 \\t\\t \\t2.public修饰的类的名称必须与*.java源文件名称大小写一致 \\t\\t \\t \\t 类是创建对象的模板，对象是类的实例 \\t \\t 创建对象： \\t \\t 类名 对象名 = new 构造器(); \\t \\t \\t 构造器（构造方法/构造器/构造函数，Constructor） \\t\\t\\t1.具有与类相同的名称 \\t\\t\\t2.不含返回值类型 \\t\\t\\t3.不能在方法中用return语句返回一个值 \\t\\t\\t4. 一般访问权限为public \\t\\t \\t\\t 在一个类中，具有上述特征的方法就是构造器。 \\t 构造器的作用： \\t\\t\\t1.完成对象的创建，即完成对象的实例化。XiyoujiRole sunwukong = new XiyoujiRole(); \\t\\t\\t2.一般使用构造器来完成对成员变量的初始化。XiyoujiRole tangSeng = new XiyoujiRole(\\"唐僧\\", \\"无\\", \\"☆☆☆☆☆\\", \\"★★★★★\\"); 注意： 1.默认带无参构造函数 2.当定义带参数构造函数时，默认无参构造函数失效了，需要显示定义出来"},"headers":[],"git":{"createdTime":1684145400000,"updatedTime":1684676842000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":2}]},"readingTime":{"minutes":12.37,"words":3712},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/191-Java面向对象基础.md","localizedDate":"2023年1月3日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--191-Java-kg1n062arnl8q9f6xsczg6a.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">191-Java面向对象基础.md</a></h1>\\n<h4> 概念</h4>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>           \\t      抽象（抽取共有的特质）\\n\\n\\t对象（object） --------------------&gt;  类（class）\\n\\n\\t\\n\\n\\t\\t\\t\\t 具体化 | 实例化（new）\\n\\n\\t类（class）-----------------------&gt; 对象（Object）\\n\\n\\t\\n\\n\\t\\n\\n\\t面向对象的三大特性：封装、继承、多态\\n\\n\\t\\n\\n\\t-------------------------------------------------------------------------------\\n\\n\\t1.分析对象Object（计算机）：\\n\\n\\t\\t  属性：品牌、显示器、主机、键盘、鼠标、颜色\\n\\n\\t\\t  行为：开机、关机\\n\\n\\t\\t     ||\\n\\n\\t\\t     ||\\n\\n\\t\\t     ||\\n\\n\\t\\t     ||\\n\\n\\t\\t     \\\\/\\n\\n    2.根据对象分析，编程代码中的类Class\\n\\n    \\t 属性（全局变量、成员变量）：品牌brand、显示器monitor、主机case、键盘keyboard、鼠标mouse、颜色color\\n\\n\\t\\t 行为（成员方法）：开机turnOn()、关机turnOff()\\n\\n\\t-------------------------------------------------------------------------------\\n\\n\\t-------------------------------------------------------------------------------\\n\\n\\t1.分析对象Object（灯）：\\n\\n\\t\\t  属性：灯丝、灯罩、灯座\\n\\n\\t\\t  行为：开灯、关灯、调亮、调亮\\n\\n\\t\\t     ||\\n\\n\\t\\t     ||\\n\\n\\t\\t     ||\\n\\n\\t\\t     ||\\n\\n\\t\\t     \\\\/\\n\\n    2.根据对象分析，编程代码中的类Class\\n\\n    \\t   属性（全局变量、成员变量）：灯丝filament、灯罩lampshade、灯座lampholder\\n\\n\\t\\t  行为（成员方法）：开灯on()、关灯off()、调亮lighten()、调暗dim()\\n\\n\\t-------------------------------------------------------------------------------\\n\\n\\t\\n\\n\\t\\n\\n\\t类的定义：\\n\\n\\t\\t   &lt;修饰符&gt;  class 类名\\n\\n\\t\\t   {\\n\\n\\t\\t   \\t\\t//类的成员\\n\\n\\t\\t   \\t\\t成员变量;\\n\\n\\t\\t   \\t\\t成员方法;\\n\\n\\t\\t   \\t\\t嵌套类（内部类）;\\n\\n\\t\\t   }\\n\\n\\t\\t   \\n\\n\\t\\t   修饰符:public &lt;default&gt;\\n\\n\\t\\t   \\n\\n\\t\\t    类名：帕斯卡(pascal)规则命名，首字母大写，其余单词的首字母大写，例如HelloWorld\\n\\n\\t\\t    \\n\\n\\t\\t  注意：\\n\\n\\t\\t \\t1.一个*.java源文件中仅允许存在一个public修饰的类\\n\\n\\t\\t \\t2.public修饰的类的名称必须与*.java源文件名称大小写一致\\n\\n\\t\\t \\t\\n\\n\\n\\n\\t    类是创建对象的模板，对象是类的实例\\n\\n\\t    \\n\\n\\t    创建对象：\\n\\n\\t \\t   类名   对象名  = new 构造器();\\n\\n\\n\\n\\t \\t   \\n\\n\\t    构造器（构造方法/构造器/构造函数，Constructor）\\n\\n\\t\\t\\t1.具有与类相同的名称\\n\\n\\t\\t\\t2.不含返回值类型\\n\\n\\t\\t\\t3.不能在方法中用return语句返回一个值\\n\\n\\t\\t\\t4. 一般访问权限为public\\n\\n\\t\\t  \\n\\n\\t\\t         在一个类中，具有上述特征的方法就是构造器。\\n\\n   \\n\\n\\t   构造器的作用：\\n\\n\\t\\t\\t1.完成对象的创建，即完成对象的实例化。XiyoujiRole sunwukong = new XiyoujiRole();\\n\\n\\t\\t\\t2.一般使用构造器来完成对成员变量的初始化。XiyoujiRole tangSeng = new XiyoujiRole(\\"唐僧\\", \\"无\\", \\"☆☆☆☆☆\\", \\"★★★★★\\");\\n\\n\\n\\n               注意：\\n\\n           1.默认带无参构造函数\\n\\n           2.当定义带参数构造函数时，默认无参构造函数失效了，需要显示定义出来\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
