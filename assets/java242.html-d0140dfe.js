const t=JSON.parse('{"key":"v-81001668","path":"/zh/programBlog/ServerSideLanguage/Java/java242.html","title":"Java多线程编程-线程同步_死锁","lang":"zh-CN","frontmatter":{"title":"Java多线程编程-线程同步_死锁","icon":"page","order":242,"author":"涎涎","date":"2023-01-17T18:58:36.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java242.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java多线程编程-线程同步_死锁"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java242.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java多线程编程-线程同步_死锁"}],["meta",{"property":"og:description","content":"242-Java多线程编程-线程同步_死锁.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 示例代码 package com.tencent.chapter04.死锁; public class DeadLockDemo { \\tpublic static void main(String[] args) { \\t\\tThread_1 t1 = new Thread_1(); \\t\\tt1.start(); \\t\\t \\t\\tThread_2 t2 = new Thread_2(); \\t\\tt2.start(); \\t} \\t } class Thread_1 extends Thread { \\t@Override \\tpublic void run() { \\t\\t \\t\\twhile(true) \\t\\t{ \\t\\t\\tsynchronized (\\"a\\") { \\t\\t\\t\\t \\t\\t\\t\\tSystem.out.println(\\"Thread_1拿到了a锁\\"); \\t\\t\\t\\t \\t\\t\\t\\tsynchronized (\\"b\\") { \\t\\t\\t\\t\\t \\t\\t\\t\\t\\tSystem.out.println(\\"Thread_1拿到了b锁\\"); \\t\\t\\t\\t} \\t\\t\\t} \\t\\t} \\t} } class Thread_2 extends Thread { \\t@Override \\tpublic void run() { \\t\\t \\t\\twhile(true) \\t\\t{ \\t\\t\\tsynchronized (\\"b\\") { \\t\\t\\t\\t \\t\\t\\t\\tSystem.out.println(\\"Thread_2拿到了b锁\\"); \\t\\t\\t\\t \\t\\t\\t\\tsynchronized (\\"a\\") { \\t\\t\\t\\t\\t \\t\\t\\t\\t\\tSystem.out.println(\\"Thread_2拿到了a锁\\"); \\t\\t\\t\\t} \\t\\t\\t} \\t\\t} \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-02T05:58:29.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-01-17T18:58:36.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-02T05:58:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java多线程编程-线程同步_死锁\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-17T18:58:36.000Z\\",\\"dateModified\\":\\"2023-06-02T05:58:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"242-Java多线程编程-线程同步_死锁.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 示例代码 package com.tencent.chapter04.死锁; public class DeadLockDemo { \\tpublic static void main(String[] args) { \\t\\tThread_1 t1 = new Thread_1(); \\t\\tt1.start(); \\t\\t \\t\\tThread_2 t2 = new Thread_2(); \\t\\tt2.start(); \\t} \\t } class Thread_1 extends Thread { \\t@Override \\tpublic void run() { \\t\\t \\t\\twhile(true) \\t\\t{ \\t\\t\\tsynchronized (\\"a\\") { \\t\\t\\t\\t \\t\\t\\t\\tSystem.out.println(\\"Thread_1拿到了a锁\\"); \\t\\t\\t\\t \\t\\t\\t\\tsynchronized (\\"b\\") { \\t\\t\\t\\t\\t \\t\\t\\t\\t\\tSystem.out.println(\\"Thread_1拿到了b锁\\"); \\t\\t\\t\\t} \\t\\t\\t} \\t\\t} \\t} } class Thread_2 extends Thread { \\t@Override \\tpublic void run() { \\t\\t \\t\\twhile(true) \\t\\t{ \\t\\t\\tsynchronized (\\"b\\") { \\t\\t\\t\\t \\t\\t\\t\\tSystem.out.println(\\"Thread_2拿到了b锁\\"); \\t\\t\\t\\t \\t\\t\\t\\tsynchronized (\\"a\\") { \\t\\t\\t\\t\\t \\t\\t\\t\\t\\tSystem.out.println(\\"Thread_2拿到了a锁\\"); \\t\\t\\t\\t} \\t\\t\\t} \\t\\t} \\t} }"},"headers":[],"git":{"createdTime":1684701424000,"updatedTime":1685685509000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":4}]},"readingTime":{"minutes":1.11,"words":332},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/242-Java多线程编程-线程同步_死锁.md","localizedDate":"2023年1月17日","excerpt":"<!-- more -->\\n<h1> 242-Java多线程编程-线程同步_死锁.md</h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<h4> 示例代码</h4>\\n<div class=\\"language-Java line-numbers-mode\\" data-ext=\\"Java\\"><pre class=\\"language-Java\\"><code>package com.tencent.chapter04.死锁;\\n\\npublic class DeadLockDemo {\\n\\n\\tpublic static void main(String[] args) {\\n\\t\\tThread_1 t1 = new Thread_1();\\n\\t\\tt1.start();\\n\\t\\t\\n\\t\\tThread_2 t2 = new Thread_2();\\n\\t\\tt2.start();\\n\\t}\\n\\t\\n}\\nclass Thread_1 extends Thread\\n{\\n\\t@Override\\n\\tpublic void run() {\\n\\t\\t\\n\\t\\twhile(true)\\n\\t\\t{\\n\\t\\t\\tsynchronized (\\"a\\") {\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tSystem.out.println(\\"Thread_1拿到了a锁\\");\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tsynchronized (\\"b\\") {\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tSystem.out.println(\\"Thread_1拿到了b锁\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nclass Thread_2 extends Thread\\n{\\n\\t@Override\\n\\tpublic void run() {\\n\\t\\t\\n\\t\\twhile(true)\\n\\t\\t{\\n\\t\\t\\tsynchronized (\\"b\\") {\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tSystem.out.println(\\"Thread_2拿到了b锁\\");\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tsynchronized (\\"a\\") {\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\tSystem.out.println(\\"Thread_2拿到了a锁\\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
