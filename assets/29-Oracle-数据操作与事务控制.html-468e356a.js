const n=JSON.parse('{"key":"v-304af8d0","path":"/zh/programBlog/Database/Oracle/29-Oracle-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6.html","title":"Oracle-数据操作与事务控制","lang":"zh-CN","frontmatter":{"title":"Oracle-数据操作与事务控制","icon":"page","order":29,"author":"涎涎","date":"2019-08-07T09:59:07.000Z","isOriginal":true,"category":["Oracle"],"tag":["Oracle"],"head":[["meta",{"name":"keywords","content":"Oracle-数据操作与事务控制"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/Database/Oracle/29-Oracle-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E4%B8%8E%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Oracle-数据操作与事务控制"}],["meta",{"property":"og:description","content":"29-Oracle数据操作与事务控制.md 数据操作语言 Data Manipulation Language ,简称DML，主要用来实现对数据库表中的数据进行操作。 数据操作语言主要包括如下几种： 增加行数据：使用INSERT语句实现 修改行数据：使用UPDATE语句实现 删除行数据：使用DELETE语句实现 合并行数据：按照指定条件合并两个表的数据，使用MERGE语句实现 事务处理语言 事务(Transaction)概念 事务：也称工作单元，是由一个或多个SQL语句所组成的操作序列，这些SQL语句作为一个完整的工作单元，要么全部执行成功，要么全部执行失败。在数据库中，通过事务来保证数据的一致性。 事务处理语言：Transaction Process Language ,简称TPL，主要用来对组成事务的DML语句的操作结果进行确认或取消。确认也就是使DML操作生效，使用提交(COMMIT)命令实现；取消也就是使DML操作失效，使用回滚(ROLLBACK)命令实现。 通过事务的使用，能防止数据库中出现数据不一致现象。如两个银行账户进行转账，涉及到两条更新操作，这两条更新操作只允许全部成功或失败，否则数据会出现不一致的现象。 事务组成 在数据库中，事务由一组相关的DML或SELECT语句，加上一个TPL语句（COMMIT、ROLLBACK）或一个DDL语句(CREATE、ALTER、DROP、TRUNCATE等)或一个DCL（GRANT、REVOKE）语句。 例：如下语句组成两个事务。 INSERT…. UPDATE…. DELETE…. SELECT…. INSERT… COMMIT;-- 前6条语句，组成第1个事务 UPDATE… DELETE…. CREATE… ;--后3条语句，组成第2个事务 事务特性 事务特征可用四个字母的缩写表示：即ACID 原子性（Atomicity） 事务就像“原子”一样，不可被分割，组成事务的DML操作语句要么全成功，要么全失败，不可能出现部分成功部分失败的情况。 一致性（Consistency） 一旦事务完成，不管是成功的，还是失败的，整个系统处于数据一致的状态。 隔离性（Isolation） 一个事务的执行不会被另一个事务所干扰。比如两个人同时从一个账户从取钱，通过事务的隔离性确保账户余额的正确性。 持久性（Durability） 也称为永久性，指事务一旦提交，对数据的改变就是永久的，不可以再被回滚。 事务结束 显示结束 提交(COMMIT)：使用COMMIT命令实现，以成功的方式结束事务，组成事务的DML语句操作全部生效。 回滚(ROLLBACK)：使用ROLLBACK命令实现，以失败的方式结束事务，组成事务的DML语句操作全部被取消。 隐式结束 隐式提交：当下列任意一种情况发生时，会发生隐式提交 执行一个DDL(CREATE、ALTER、DROP、TRUNCATE、RENAME）语句； 执行一个DCL(GRANT、REVOKE)语句； 从SQL*Plus正常退出（即使用EXIT或QUIT命令退出）； 隐式回滚：当下列任意一种情况发生时，会发生隐式回滚 从SQL*Plus中强行退出 客户端连接到服务器端异常中断 系统崩溃 事务开启 事务自动开启于上一个事务结束后，执行的第一个DML语句。 例如： …. COMMIT; --结束一个事务； SELECT…. INSERT…. --开启一个事务 UPDATE…. DELETE…. SELECT…. INSERT… COMMIT; --结束一个事务 UPDATE… --开启一个事务 DELETE…. ROLLBACK… ;--结束一个事务 设置保存点 设置保存点：如果在一个事务内，想要回滚到指定位置，不是回滚到事务的起始点，可以通过保存点(SAVEPOINT)来实现。 SAVEPOINT savepointname；--定义一个保存点语句； ROLLBACK TO savepointname;--回滚到指定保存点 注意：如上两条语句不结束事务的执行。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-21T13:47:22.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Oracle"}],["meta",{"property":"article:published_time","content":"2019-08-07T09:59:07.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T13:47:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Oracle-数据操作与事务控制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-07T09:59:07.000Z\\",\\"dateModified\\":\\"2023-05-21T13:47:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"29-Oracle数据操作与事务控制.md 数据操作语言 Data Manipulation Language ,简称DML，主要用来实现对数据库表中的数据进行操作。 数据操作语言主要包括如下几种： 增加行数据：使用INSERT语句实现 修改行数据：使用UPDATE语句实现 删除行数据：使用DELETE语句实现 合并行数据：按照指定条件合并两个表的数据，使用MERGE语句实现 事务处理语言 事务(Transaction)概念 事务：也称工作单元，是由一个或多个SQL语句所组成的操作序列，这些SQL语句作为一个完整的工作单元，要么全部执行成功，要么全部执行失败。在数据库中，通过事务来保证数据的一致性。 事务处理语言：Transaction Process Language ,简称TPL，主要用来对组成事务的DML语句的操作结果进行确认或取消。确认也就是使DML操作生效，使用提交(COMMIT)命令实现；取消也就是使DML操作失效，使用回滚(ROLLBACK)命令实现。 通过事务的使用，能防止数据库中出现数据不一致现象。如两个银行账户进行转账，涉及到两条更新操作，这两条更新操作只允许全部成功或失败，否则数据会出现不一致的现象。 事务组成 在数据库中，事务由一组相关的DML或SELECT语句，加上一个TPL语句（COMMIT、ROLLBACK）或一个DDL语句(CREATE、ALTER、DROP、TRUNCATE等)或一个DCL（GRANT、REVOKE）语句。 例：如下语句组成两个事务。 INSERT…. UPDATE…. DELETE…. SELECT…. INSERT… COMMIT;-- 前6条语句，组成第1个事务 UPDATE… DELETE…. CREATE… ;--后3条语句，组成第2个事务 事务特性 事务特征可用四个字母的缩写表示：即ACID 原子性（Atomicity） 事务就像“原子”一样，不可被分割，组成事务的DML操作语句要么全成功，要么全失败，不可能出现部分成功部分失败的情况。 一致性（Consistency） 一旦事务完成，不管是成功的，还是失败的，整个系统处于数据一致的状态。 隔离性（Isolation） 一个事务的执行不会被另一个事务所干扰。比如两个人同时从一个账户从取钱，通过事务的隔离性确保账户余额的正确性。 持久性（Durability） 也称为永久性，指事务一旦提交，对数据的改变就是永久的，不可以再被回滚。 事务结束 显示结束 提交(COMMIT)：使用COMMIT命令实现，以成功的方式结束事务，组成事务的DML语句操作全部生效。 回滚(ROLLBACK)：使用ROLLBACK命令实现，以失败的方式结束事务，组成事务的DML语句操作全部被取消。 隐式结束 隐式提交：当下列任意一种情况发生时，会发生隐式提交 执行一个DDL(CREATE、ALTER、DROP、TRUNCATE、RENAME）语句； 执行一个DCL(GRANT、REVOKE)语句； 从SQL*Plus正常退出（即使用EXIT或QUIT命令退出）； 隐式回滚：当下列任意一种情况发生时，会发生隐式回滚 从SQL*Plus中强行退出 客户端连接到服务器端异常中断 系统崩溃 事务开启 事务自动开启于上一个事务结束后，执行的第一个DML语句。 例如： …. COMMIT; --结束一个事务； SELECT…. INSERT…. --开启一个事务 UPDATE…. DELETE…. SELECT…. INSERT… COMMIT; --结束一个事务 UPDATE… --开启一个事务 DELETE…. ROLLBACK… ;--结束一个事务 设置保存点 设置保存点：如果在一个事务内，想要回滚到指定位置，不是回滚到事务的起始点，可以通过保存点(SAVEPOINT)来实现。 SAVEPOINT savepointname；--定义一个保存点语句； ROLLBACK TO savepointname;--回滚到指定保存点 注意：如上两条语句不结束事务的执行。"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684145400000,"updatedTime":1684676842000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":2}]},"readingTime":{"minutes":5.52,"words":1656},"filePathRelative":"zh/programBlog/Database/Oracle/29-Oracle-数据操作与事务控制.md","localizedDate":"2019年8月7日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--29-Oracle-3c6n56bv9dhto1obgx4lg0ax6l1od.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">29-Oracle数据操作与事务控制.md</a></h1>\\n<ul>\\n<li>\\n<p>数据操作语言</p>\\n<ul>\\n<li>\\n<p>Data Manipulation Language ,简称<strong>DML</strong>，主要用来实现对数据库表中的数据进行操作。</p>\\n</li>\\n<li>\\n<p>数据操作语言主要包括如下几种：</p>\\n<ul>\\n<li>增加行数据：使用INSERT语句实现</li>\\n<li>修改行数据：使用UPDATE语句实现</li>\\n<li>删除行数据：使用DELETE语句实现</li>\\n<li>合并行数据：按照指定条件合并两个表的数据，使用MERGE语句实现</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>事务处理语言</p>\\n<ul>\\n<li>事务(Transaction)概念\\n<ul>\\n<li>\\n<p>事务：也称工作单元，是由一个或多个SQL语句所组成的操作序列，这些SQL语句作为一个完整的工作单元，要么全部执行成功，要么全部执行失败。在数据库中，通过事务来保证数据的一致性。</p>\\n</li>\\n<li>\\n<p>事务处理语言：Transaction Process Language ,简称TPL，主要用来对组成事务的DML语句的操作结果进行确认或取消。确认也就是使DML操作生效，使用提交(COMMIT)命令实现；取消也就是使DML操作失效，使用回滚(ROLLBACK)命令实现。</p>\\n</li>\\n<li>\\n<p>通过事务的使用，能防止数据库中出现数据不一致现象。如两个银行账户进行转账，涉及到两条更新操作，这两条更新操作只允许全部成功或失败，否则数据会出现不一致的现象。</p>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>事务组成</p>\\n<ul>\\n<li>在数据库中，事务由一组相关的DML或SELECT语句，加上一个TPL语句（COMMIT、ROLLBACK）或一个<a href=\\"https://www.cnblogs.com/qianqian528/p/7794838.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">DDL</a>语句(CREATE、ALTER、DROP、TRUNCATE等)或一个<a href=\\"https://blog.csdn.net/qq_34869143/article/details/72844524\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">DCL</a>（GRANT、REVOKE）语句。</li>\\n<li>例：如下语句组成两个事务。\\n<ul>\\n<li>INSERT….</li>\\n<li>UPDATE….</li>\\n<li>DELETE….</li>\\n<li>SELECT….</li>\\n<li>INSERT…</li>\\n<li>COMMIT;-- 前6条语句，组成第1个事务</li>\\n<li>UPDATE…</li>\\n<li>DELETE….</li>\\n<li>CREATE… ;--后3条语句，组成第2个事务</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>事务特性</p>\\n<ul>\\n<li>事务特征可用四个字母的缩写表示：即ACID\\n<ul>\\n<li>原子性（Atomicity）\\n<ul>\\n<li>事务就像“原子”一样，不可被分割，组成事务的DML操作语句要么全成功，要么全失败，不可能出现部分成功部分失败的情况。</li>\\n</ul>\\n</li>\\n<li>一致性（Consistency）\\n<ul>\\n<li>一旦事务完成，不管是成功的，还是失败的，整个系统处于数据一致的状态。</li>\\n</ul>\\n</li>\\n<li>隔离性（Isolation）\\n<ul>\\n<li>一个事务的执行不会被另一个事务所干扰。比如两个人同时从一个账户从取钱，通过事务的隔离性确保账户余额的正确性。</li>\\n</ul>\\n</li>\\n<li>持久性（Durability）\\n<ul>\\n<li>也称为永久性，指事务一旦提交，对数据的改变就是永久的，不可以再被回滚。</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>事务结束</p>\\n<ul>\\n<li>显示结束\\n<ul>\\n<li>提交(COMMIT)：使用COMMIT命令实现，以成功的方式结束事务，组成事务的DML语句操作全部生效。</li>\\n<li>回滚(ROLLBACK)：使用ROLLBACK命令实现，以失败的方式结束事务，组成事务的DML语句操作全部被取消。</li>\\n</ul>\\n</li>\\n<li>隐式结束\\n<ul>\\n<li>\\n<p>隐式提交：当下列任意一种情况发生时，会发生隐式提交</p>\\n<ul>\\n<li>执行一个DDL(CREATE、ALTER、DROP、TRUNCATE、RENAME）语句；</li>\\n<li>执行一个DCL(GRANT、REVOKE)语句；</li>\\n<li>从SQL*Plus正常退出（即使用EXIT或QUIT命令退出）；</li>\\n</ul>\\n</li>\\n<li>\\n<p>隐式回滚：当下列任意一种情况发生时，会发生隐式回滚</p>\\n<ul>\\n<li>从SQL*Plus中强行退出</li>\\n<li>客户端连接到服务器端异常中断</li>\\n<li>系统崩溃</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>事务开启</p>\\n<ul>\\n<li>事务自动开启于上一个事务结束后，执行的第一个DML语句。</li>\\n<li>例如：\\n<ul>\\n<li>….</li>\\n<li>COMMIT;    --结束一个事务；</li>\\n<li>SELECT….</li>\\n<li>INSERT….  --开启一个事务</li>\\n<li>UPDATE….</li>\\n<li>DELETE….</li>\\n<li>SELECT….</li>\\n<li>INSERT…</li>\\n<li>COMMIT;    --结束一个事务</li>\\n<li>UPDATE…   --开启一个事务</li>\\n<li>DELETE….</li>\\n<li>ROLLBACK… ;--结束一个事务</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>设置保存点</p>\\n<ul>\\n<li>设置保存点：如果在一个事务内，想要回滚到指定位置，不是回滚到事务的起始点，可以通过保存点(SAVEPOINT)来实现。\\n<ul>\\n<li>SAVEPOINT savepointname；--定义一个保存点语句；</li>\\n<li>ROLLBACK TO savepointname;--回滚到指定保存点</li>\\n<li>注意：如上两条语句不结束事务的执行。</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{n as data};
