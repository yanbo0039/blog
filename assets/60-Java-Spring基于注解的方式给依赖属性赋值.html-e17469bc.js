const e=JSON.parse('{"key":"v-daff8362","path":"/zh/programBlog/ServerSideLanguage/Java/60-Java-Spring%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%E6%96%B9%E5%BC%8F%E7%BB%99%E4%BE%9D%E8%B5%96%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC.html","title":"Java-Spring基于注解的方式给依赖属性赋值","lang":"zh-CN","frontmatter":{"title":"Java-Spring基于注解的方式给依赖属性赋值","icon":"page","order":60,"author":"涎涎","date":"2019-06-20T21:56:29.000Z","isOriginal":true,"category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-Spring基于注解的方式给依赖属性赋值"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/60-Java-Spring%E5%9F%BA%E4%BA%8E%E6%B3%A8%E8%A7%A3%E7%9A%84%E6%96%B9%E5%BC%8F%E7%BB%99%E4%BE%9D%E8%B5%96%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-Spring基于注解的方式给依赖属性赋值"}],["meta",{"property":"og:description","content":"Java-Spring基于注解的方式给依赖属性赋值 沿用上一个项目 注释掉属性的set/get方法，并运行测试，如图所示测试失败 结论： 根据类型自动装配还是需要配置属性的get/set方法 还原被注释掉的属性的set/get方法 新建一个Java Project命名为 demo_spring05_di_annotation 导入对应的jar包"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-21T20:37:04.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-06-20T21:56:29.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T20:37:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-Spring基于注解的方式给依赖属性赋值\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-20T21:56:29.000Z\\",\\"dateModified\\":\\"2023-05-21T20:37:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"Java-Spring基于注解的方式给依赖属性赋值 沿用上一个项目 注释掉属性的set/get方法，并运行测试，如图所示测试失败 结论： 根据类型自动装配还是需要配置属性的get/set方法 还原被注释掉的属性的set/get方法 新建一个Java Project命名为 demo_spring05_di_annotation 导入对应的jar包"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1684701424000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":4.57,"words":1371},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/60-Java-Spring基于注解的方式给依赖属性赋值.md","localizedDate":"2019年6月20日","excerpt":"<!-- more -->\\n<h1> Java-Spring基于注解的方式给依赖属性赋值</h1>\\n<p><em>沿用上一个项目</em></p>\\n<ol>\\n<li>注释掉属性的set/get方法，并运行测试，如图所示测试失败</li>\\n</ol>\\n<figure><img src=\\"/assets/Java_60_1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p><strong>结论：</strong> 根据类型自动装配还是需要配置属性的get/set方法</p>\\n<ol start=\\"2\\">\\n<li>\\n<p>还原被注释掉的属性的set/get方法</p>\\n</li>\\n<li>\\n<p>新建一个Java Project命名为 demo_spring05_di_annotation</p>\\n</li>\\n<li>\\n<p>导入对应的jar包</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
