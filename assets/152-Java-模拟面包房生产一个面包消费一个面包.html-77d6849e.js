const t=JSON.parse('{"key":"v-3a03803f","path":"/zh/programBlog/ServerSideLanguage/Java/152-Java-%E6%A8%A1%E6%8B%9F%E9%9D%A2%E5%8C%85%E6%88%BF%E7%94%9F%E4%BA%A7%E4%B8%80%E4%B8%AA%E9%9D%A2%E5%8C%85%E6%B6%88%E8%B4%B9%E4%B8%80%E4%B8%AA%E9%9D%A2%E5%8C%85.html","title":"Java-模拟面包房生产一个面包消费一个面包","lang":"zh-CN","frontmatter":{"title":"Java-模拟面包房生产一个面包消费一个面包","icon":"page","order":152,"author":"涎涎","date":"2019-07-18T10:18:48.000Z","isOriginal":true,"category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-模拟面包房生产一个面包消费一个面包"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/152-Java-%E6%A8%A1%E6%8B%9F%E9%9D%A2%E5%8C%85%E6%88%BF%E7%94%9F%E4%BA%A7%E4%B8%80%E4%B8%AA%E9%9D%A2%E5%8C%85%E6%B6%88%E8%B4%B9%E4%B8%80%E4%B8%AA%E9%9D%A2%E5%8C%85.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-模拟面包房生产一个面包消费一个面包"}],["meta",{"property":"og:description","content":"152-Java-模拟面包房生产一个面包消费一个面包.md package 线程的通信; public class Bread { \\t \\tprivate boolean flag = false;//默认没有面包 \\t//生产面包的方法 \\tpublic synchronized void produce(int i) { \\t\\t//如果没有面包那么就生产面包，生产完后通知所有线程 \\t\\tif(!flag) { \\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i +\\" 生产面包\\"); \\t\\t\\tflag = true; \\t\\t\\tthis.notifyAll();//生产完后通知所有监视当前对象的线程 \\t\\t}else { \\t\\t\\t//如果有面包，就等待 \\t\\t\\ttry { \\t\\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 阻塞\\"); \\t\\t\\t\\tthis.wait(); \\t\\t\\t} catch (InterruptedException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t} \\t} \\t//消费面包的方法 \\tpublic synchronized void consumer(int i) { \\t\\t//如果有面包那么就消费面包，消费完后通知所有线程，消费面包 \\t\\tif(flag) { \\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 消费面包\\"); \\t\\t\\tflag = false; \\t\\t\\tthis.notifyAll();//消费完后通知所有监视当前对象的线程 \\t\\t}else { \\t\\t\\t//如果没有面包，就等待 \\t\\t\\ttry { \\t\\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 阻塞\\"); \\t\\t\\t\\tthis.wait(); \\t\\t\\t} catch (InterruptedException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t} \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-21T20:37:04.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-07-18T10:18:48.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T20:37:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-模拟面包房生产一个面包消费一个面包\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-18T10:18:48.000Z\\",\\"dateModified\\":\\"2023-05-21T20:37:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"152-Java-模拟面包房生产一个面包消费一个面包.md package 线程的通信; public class Bread { \\t \\tprivate boolean flag = false;//默认没有面包 \\t//生产面包的方法 \\tpublic synchronized void produce(int i) { \\t\\t//如果没有面包那么就生产面包，生产完后通知所有线程 \\t\\tif(!flag) { \\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i +\\" 生产面包\\"); \\t\\t\\tflag = true; \\t\\t\\tthis.notifyAll();//生产完后通知所有监视当前对象的线程 \\t\\t}else { \\t\\t\\t//如果有面包，就等待 \\t\\t\\ttry { \\t\\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 阻塞\\"); \\t\\t\\t\\tthis.wait(); \\t\\t\\t} catch (InterruptedException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t} \\t} \\t//消费面包的方法 \\tpublic synchronized void consumer(int i) { \\t\\t//如果有面包那么就消费面包，消费完后通知所有线程，消费面包 \\t\\tif(flag) { \\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 消费面包\\"); \\t\\t\\tflag = false; \\t\\t\\tthis.notifyAll();//消费完后通知所有监视当前对象的线程 \\t\\t}else { \\t\\t\\t//如果没有面包，就等待 \\t\\t\\ttry { \\t\\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 阻塞\\"); \\t\\t\\t\\tthis.wait(); \\t\\t\\t} catch (InterruptedException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t} \\t} }"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1684701424000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":2.04,"words":611},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/152-Java-模拟面包房生产一个面包消费一个面包.md","localizedDate":"2019年7月18日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--152-Java--375na71cb06oe56adac1721e2qcy98c26ogm3bz31ik72bgaf.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">152-Java-模拟面包房生产一个面包消费一个面包.md</a></h1>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>package 线程的通信;\\n\\npublic class Bread {\\n\\t\\n\\tprivate boolean flag = false;//默认没有面包\\n\\t//生产面包的方法\\n\\tpublic synchronized void produce(int i) {\\n\\t\\t//如果没有面包那么就生产面包，生产完后通知所有线程\\n\\t\\tif(!flag) {\\n\\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i +\\" 生产面包\\");\\n\\t\\t\\tflag = true;\\n\\t\\t\\tthis.notifyAll();//生产完后通知所有监视当前对象的线程\\n\\t\\t}else {\\n\\t\\t\\t//如果有面包，就等待\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 阻塞\\");\\n\\t\\t\\t\\tthis.wait();\\n\\t\\t\\t} catch (InterruptedException e) {\\n\\t\\t\\t\\te.printStackTrace();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t//消费面包的方法\\n\\tpublic synchronized void consumer(int i) {\\n\\t\\t//如果有面包那么就消费面包，消费完后通知所有线程，消费面包\\n\\t\\tif(flag) {\\n\\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 消费面包\\");\\n\\t\\t\\tflag = false;\\n\\t\\t\\tthis.notifyAll();//消费完后通知所有监视当前对象的线程\\n\\t\\t}else {\\n\\t\\t\\t//如果没有面包，就等待\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tSystem.out.println(Thread.currentThread().getName() + i + \\" 阻塞\\");\\n\\t\\t\\t\\tthis.wait();\\n\\t\\t\\t} catch (InterruptedException e) {\\n\\t\\t\\t\\te.printStackTrace();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
