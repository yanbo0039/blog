const t=JSON.parse('{"key":"v-03795130","path":"/zh/programBlog/ServerSideLanguage/Java/225-Java%E9%9B%86%E5%90%88%E7%B1%BB-LinkeList%E9%9B%86%E5%90%88-%E7%BB%83%E4%B9%A0%E9%A2%98.html","title":"Java集合类-LinkeList集合-练习题","lang":"zh-CN","frontmatter":{"title":"Java集合类-LinkeList集合-练习题","icon":"page","order":225,"author":"涎涎","date":"2023-01-12T18:40:41.000Z","isOriginal":true,"category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java集合类-LinkeList集合-练习题"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/225-Java%E9%9B%86%E5%90%88%E7%B1%BB-LinkeList%E9%9B%86%E5%90%88-%E7%BB%83%E4%B9%A0%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java集合类-LinkeList集合-练习题"}],["meta",{"property":"og:description","content":"225-Java集合类-LinkeList集合-练习题.md 请使用LinkedList来模拟一个队列(先进先出的特性) package com.tencent.chapter02.练习; import java.util.LinkedList; /** * 1、请使用LinkedList来模拟一个队列(先进先出的特性): [必做题] \\t\\t1.1 拥有放入对象的方法void put(Object o) \\t\\t1.2 取出对象的方法Object get() \\t\\t1.3 判断队列当中是否为空的方法boolean isEmpty()； \\t\\t \\t\\t并且，编写测试代码，验证你的队列是否正确。 */ public class Queue { \\tLinkedList list = new LinkedList(); \\t//1.1 拥有放入对象的方法void put(Object o) \\tpublic void put(Object o) \\t{ \\t\\tlist.addLast(o); \\t} \\t \\t//1.2 取出对象的方法Object get() \\tpublic Object get() \\t{ \\t\\treturn list.removeFirst(); \\t} \\t \\t//1.3 判断队列当中是否为空的方法boolean isEmpty()； \\tpublic boolean isEmpty() \\t{ \\t\\treturn list.isEmpty(); \\t} \\t \\t//并且，编写测试代码，验证你的队列是否正确。 \\tpublic static void main(String[] args) { \\t\\tQueue queue = new Queue(); \\t\\t \\t\\t//存值 \\t\\tqueue.put(1); \\t\\tqueue.put(2); \\t\\tqueue.put(3); \\t\\tqueue.put(4); \\t\\tqueue.put(5); \\t\\t \\t\\t//取值 \\t\\t/*System.out.println(queue.get()); \\t\\tSystem.out.println(queue.get()); \\t\\tSystem.out.println(queue.get()); \\t\\tSystem.out.println(queue.get()); \\t\\tSystem.out.println(queue.get()); \\t\\tSystem.out.println(queue.get());*/ \\t\\t \\t\\twhile(!queue.isEmpty()) \\t\\t{ \\t\\t\\tSystem.out.println(queue.get()); \\t\\t} \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-21T20:37:04.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-01-12T18:40:41.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T20:37:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java集合类-LinkeList集合-练习题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-12T18:40:41.000Z\\",\\"dateModified\\":\\"2023-05-21T20:37:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"225-Java集合类-LinkeList集合-练习题.md 请使用LinkedList来模拟一个队列(先进先出的特性) package com.tencent.chapter02.练习; import java.util.LinkedList; /** * 1、请使用LinkedList来模拟一个队列(先进先出的特性): [必做题] \\t\\t1.1 拥有放入对象的方法void put(Object o) \\t\\t1.2 取出对象的方法Object get() \\t\\t1.3 判断队列当中是否为空的方法boolean isEmpty()； \\t\\t \\t\\t并且，编写测试代码，验证你的队列是否正确。 */ public class Queue { \\tLinkedList list = new LinkedList(); \\t//1.1 拥有放入对象的方法void put(Object o) \\tpublic void put(Object o) \\t{ \\t\\tlist.addLast(o); \\t} \\t \\t//1.2 取出对象的方法Object get() \\tpublic Object get() \\t{ \\t\\treturn list.removeFirst(); \\t} \\t \\t//1.3 判断队列当中是否为空的方法boolean isEmpty()； \\tpublic boolean isEmpty() \\t{ \\t\\treturn list.isEmpty(); \\t} \\t \\t//并且，编写测试代码，验证你的队列是否正确。 \\tpublic static void main(String[] args) { \\t\\tQueue queue = new Queue(); \\t\\t \\t\\t//存值 \\t\\tqueue.put(1); \\t\\tqueue.put(2); \\t\\tqueue.put(3); \\t\\tqueue.put(4); \\t\\tqueue.put(5); \\t\\t \\t\\t//取值 \\t\\t/*System.out.println(queue.get()); \\t\\tSystem.out.println(queue.get()); \\t\\tSystem.out.println(queue.get()); \\t\\tSystem.out.println(queue.get()); \\t\\tSystem.out.println(queue.get()); \\t\\tSystem.out.println(queue.get());*/ \\t\\t \\t\\twhile(!queue.isEmpty()) \\t\\t{ \\t\\t\\tSystem.out.println(queue.get()); \\t\\t} \\t} }"},"headers":[],"git":{"createdTime":1684701424000,"updatedTime":1684701424000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":1.4,"words":420},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/225-Java集合类-LinkeList集合-练习题.md","localizedDate":"2023年1月12日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--225-Java-LinkeList--tr93aq60fka8629u2plakk0mma007j.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">225-Java集合类-LinkeList集合-练习题.md</a></h1>\\n<h4> 请使用LinkedList来模拟一个队列(先进先出的特性)</h4>\\n<div class=\\"language-Java line-numbers-mode\\" data-ext=\\"Java\\"><pre class=\\"language-Java\\"><code>package com.tencent.chapter02.练习;\\n\\nimport java.util.LinkedList;\\n\\n/**\\n * 1、请使用LinkedList来模拟一个队列(先进先出的特性): [必做题]\\n\\t\\t1.1 拥有放入对象的方法void put(Object o)\\n\\t\\t1.2 取出对象的方法Object get()\\n\\t\\t1.3 判断队列当中是否为空的方法boolean isEmpty()；\\n\\t\\t\\n\\t\\t并且，编写测试代码，验证你的队列是否正确。\\n */\\npublic class Queue {\\n\\tLinkedList list = new LinkedList();\\n\\n\\t//1.1 拥有放入对象的方法void put(Object o)\\n\\tpublic void put(Object o)\\n\\t{\\n\\t\\tlist.addLast(o);\\n\\t}\\n\\t\\n\\t//1.2 取出对象的方法Object get()\\n\\tpublic Object get()\\n\\t{\\n\\t\\treturn list.removeFirst();\\n\\t}\\n\\t\\n\\t//1.3 判断队列当中是否为空的方法boolean isEmpty()；\\n\\tpublic boolean isEmpty()\\n\\t{\\n\\t\\treturn list.isEmpty();\\n\\t}\\n\\t\\n\\t//并且，编写测试代码，验证你的队列是否正确。\\n\\tpublic static void main(String[] args) {\\n\\t\\tQueue queue = new Queue();\\n\\t\\t\\n\\t\\t//存值\\n\\t\\tqueue.put(1);\\n\\t\\tqueue.put(2);\\n\\t\\tqueue.put(3);\\n\\t\\tqueue.put(4);\\n\\t\\tqueue.put(5);\\n\\t\\t\\n\\t\\t//取值\\n\\t\\t/*System.out.println(queue.get());\\n\\t\\tSystem.out.println(queue.get());\\n\\t\\tSystem.out.println(queue.get());\\n\\t\\tSystem.out.println(queue.get());\\n\\t\\tSystem.out.println(queue.get());\\n\\t\\tSystem.out.println(queue.get());*/\\n\\t\\t\\n\\t\\twhile(!queue.isEmpty())\\n\\t\\t{\\n\\t\\t\\tSystem.out.println(queue.get());\\n\\t\\t}\\n\\t}\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
