const t=JSON.parse('{"key":"v-b7146b08","path":"/zh/programBlog/ServerSideLanguage/Java/133-Java-Collections%E9%9B%86%E5%90%88%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%BB%8B%E7%BB%8D.html","title":"Java-Collections集合工具类介绍","lang":"zh-CN","frontmatter":{"title":"Java-Collections集合工具类介绍","icon":"page","order":133,"author":"涎涎","date":"2019-07-15T00:00:00.000Z","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-Collections集合工具类介绍"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/133-Java-Collections%E9%9B%86%E5%90%88%E5%B7%A5%E5%85%B7%E7%B1%BB%E4%BB%8B%E7%BB%8D.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-Collections集合工具类介绍"}],["meta",{"property":"og:description","content":"133-Java-Collections集合工具类介绍.md Collections 是类 Collection 是接口（单例集合祖宗） 示例代码： List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();//前面声明咯类型后面也要这样写，然后构造方法一组圆括号 list.add(123); //\\t\\tlist.add(null); list.add(234); list.add(123); list.add(678); Collections.sort(list); System.out.println(\\"Collections.sort(list): \\" + list.toString()); Collections.shuffle(list); System.out.println(\\"Collections.shuffle(list): \\" + list.toString());//打乱顺序 List&lt;Integer&gt; dest_list = new ArrayList&lt;&gt;(10); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); Collections.copy(dest_list,list); System.out.println(\\"dest_list: \\" + dest_list); for (int i = 0; i &lt; list.size(); i++) { System.out.println(list.get(i)); } System.out.println(\\"list.contains(123): \\" + list.contains(123));"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-07-15T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-Collections集合工具类介绍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-15T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"133-Java-Collections集合工具类介绍.md Collections 是类 Collection 是接口（单例集合祖宗） 示例代码： List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();//前面声明咯类型后面也要这样写，然后构造方法一组圆括号 list.add(123); //\\t\\tlist.add(null); list.add(234); list.add(123); list.add(678); Collections.sort(list); System.out.println(\\"Collections.sort(list): \\" + list.toString()); Collections.shuffle(list); System.out.println(\\"Collections.shuffle(list): \\" + list.toString());//打乱顺序 List&lt;Integer&gt; dest_list = new ArrayList&lt;&gt;(10); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); dest_list.add(1); Collections.copy(dest_list,list); System.out.println(\\"dest_list: \\" + dest_list); for (int i = 0; i &lt; list.size(); i++) { System.out.println(list.get(i)); } System.out.println(\\"list.contains(123): \\" + list.contains(123));"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{},"readingTime":{"minutes":1.04,"words":313},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/133-Java-Collections集合工具类介绍.md","localizedDate":"2019年7月15日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--133-Java-Collections-nv75a670bzlopv1d517jkvmady1n.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">133-Java-Collections集合工具类介绍.md</a></h1>\\n<ul>\\n<li>Collections 是类</li>\\n<li>Collection 是接口（单例集合祖宗）</li>\\n</ul>\\n<p><strong>示例代码：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();//前面声明咯类型后面也要这样写，然后构造方法一组圆括号\\n    list.add(123);\\n//\\t\\tlist.add(null);\\n    list.add(234);\\n    list.add(123);\\n    list.add(678);\\n    \\n    Collections.sort(list);\\n    System.out.println(\\"Collections.sort(list): \\" + list.toString());\\n    \\n    \\n    Collections.shuffle(list);\\n    System.out.println(\\"Collections.shuffle(list): \\" + list.toString());//打乱顺序\\n    \\n    List&lt;Integer&gt; dest_list = new ArrayList&lt;&gt;(10);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    dest_list.add(1);\\n    Collections.copy(dest_list,list);\\n    System.out.println(\\"dest_list: \\" + dest_list);\\n    \\n    \\n    for (int i = 0; i &lt; list.size(); i++) {\\n        System.out.println(list.get(i));\\n    }\\n    System.out.println(\\"list.contains(123): \\" + list.contains(123));\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
