const e=JSON.parse('{"key":"v-db1e7dba","path":"/zh/programBlog/ServerSideLanguage/Java/java9.html","title":"Java基础应用编程—— 面向对象高级特性","lang":"zh-CN","frontmatter":{"title":"Java基础应用编程—— 面向对象高级特性","icon":"page","order":9,"author":"涎涎","date":"2019-06-16T22:00:31.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java9.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java基础应用编程—— 面向对象高级特性"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java9.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java基础应用编程—— 面向对象高级特性"}],["meta",{"property":"og:description","content":"Java基础应用编程—— 面向对象高级特性 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 本章内容"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-02T09:56:49.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-06-16T22:00:31.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-02T09:56:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java基础应用编程—— 面向对象高级特性\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-16T22:00:31.000Z\\",\\"dateModified\\":\\"2023-06-02T09:56:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"Java基础应用编程—— 面向对象高级特性 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 本章内容"},"headers":[{"level":2,"title":"本章内容","slug":"本章内容","link":"#本章内容","children":[]},{"level":2,"title":"类的继承","slug":"类的继承","link":"#类的继承","children":[{"level":3,"title":"理解继承的含义","slug":"理解继承的含义","link":"#理解继承的含义","children":[]},{"level":3,"title":"继承的语法和规则","slug":"继承的语法和规则","link":"#继承的语法和规则","children":[]},{"level":3,"title":"☻  练习    Officer.java       TestOfficer.java","slug":"☻-练习-officer-java-testofficer-java","link":"#☻-练习-officer-java-testofficer-java","children":[]},{"level":3,"title":"继承的好处","slug":"继承的好处","link":"#继承的好处","children":[]},{"level":3,"title":"子类实例化的过程","slug":"子类实例化的过程","link":"#子类实例化的过程","children":[]},{"level":3,"title":"super和this关键字","slug":"super和this关键字","link":"#super和this关键字","children":[]},{"level":3,"title":"子类实例化的过程","slug":"子类实例化的过程-1","link":"#子类实例化的过程-1","children":[]}]},{"level":2,"title":"Java包的概念","slug":"java包的概念","link":"#java包的概念","children":[{"level":3,"title":"包的概念及应用","slug":"包的概念及应用","link":"#包的概念及应用","children":[]},{"level":3,"title":"Java类库中常用的包","slug":"java类库中常用的包","link":"#java类库中常用的包","children":[]}]},{"level":2,"title":"权限访问操作符","slug":"权限访问操作符","link":"#权限访问操作符","children":[{"level":3,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":3,"title":"访问权限修饰符","slug":"访问权限修饰符","link":"#访问权限修饰符","children":[]}]},{"level":2,"title":"方法的覆盖","slug":"方法的覆盖","link":"#方法的覆盖","children":[{"level":3,"title":"方法的覆盖（override)","slug":"方法的覆盖-override","link":"#方法的覆盖-override","children":[]},{"level":3,"title":"方法覆盖的规则","slug":"方法覆盖的规则","link":"#方法覆盖的规则","children":[]},{"level":3,"title":"☻  练习","slug":"☻-练习","link":"#☻-练习","children":[]},{"level":3,"title":"☻  练习","slug":"☻-练习-1","link":"#☻-练习-1","children":[]}]},{"level":2,"title":"引用数据类型的转换","slug":"引用数据类型的转换","link":"#引用数据类型的转换","children":[{"level":3,"title":"上溯造型","slug":"上溯造型","link":"#上溯造型","children":[]},{"level":3,"title":"下溯造型      示例：TestStudent.java","slug":"下溯造型-示例-teststudent-java","link":"#下溯造型-示例-teststudent-java","children":[]},{"level":3,"title":"instanceof 运算符","slug":"instanceof-运算符","link":"#instanceof-运算符","children":[]}]},{"level":2,"title":"多态","slug":"多态","link":"#多态","children":[{"level":3,"title":"多态","slug":"多态-1","link":"#多态-1","children":[]},{"level":3,"title":"多态（动态绑定、Polymorphism )","slug":"多态-动态绑定、polymorphism","link":"#多态-动态绑定、polymorphism","children":[]},{"level":3,"title":"多态的优点","slug":"多态的优点","link":"#多态的优点","children":[]},{"level":3,"title":"☻  示例     Parker.java Vehicle.java   Bus.java   Truck.java   Car.java","slug":"☻-示例-parker-java-vehicle-java-bus-java-truck-java-car-java","link":"#☻-示例-parker-java-vehicle-java-bus-java-truck-java-car-java","children":[]}]},{"level":2,"title":"static关键字","slug":"static关键字","link":"#static关键字","children":[{"level":3,"title":"静态变量","slug":"静态变量","link":"#静态变量","children":[]},{"level":3,"title":"静态方法","slug":"静态方法","link":"#静态方法","children":[]}]},{"level":2,"title":"静态代码块","slug":"静态代码块","link":"#静态代码块","children":[{"level":3,"title":"☻  练习","slug":"☻-练习-2","link":"#☻-练习-2","children":[]},{"level":3,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]}]},{"level":2,"title":"final关键字","slug":"final关键字","link":"#final关键字","children":[{"level":3,"title":"final关键字","slug":"final关键字-1","link":"#final关键字-1","children":[]}]},{"level":2,"title":"练习","slug":"练习","link":"#练习","children":[]},{"level":2,"title":"抽象类","slug":"抽象类","link":"#抽象类","children":[{"level":3,"title":"抽象类和抽象方法的概念","slug":"抽象类和抽象方法的概念","link":"#抽象类和抽象方法的概念","children":[]},{"level":3,"title":"抽象类和抽象方法的概念","slug":"抽象类和抽象方法的概念-1","link":"#抽象类和抽象方法的概念-1","children":[]},{"level":3,"title":"抽象类的规则","slug":"抽象类的规则","link":"#抽象类的规则","children":[]},{"level":3,"title":"☻  练习","slug":"☻-练习-3","link":"#☻-练习-3","children":[]}]},{"level":2,"title":"接 口（interface）","slug":"接-口-interface","link":"#接-口-interface","children":[{"level":3,"title":"接口的概念    示例   AudioDevice.java    VideoDevice.java","slug":"接口的概念-示例-audiodevice-java-videodevice-java","link":"#接口的概念-示例-audiodevice-java-videodevice-java","children":[]},{"level":3,"title":"☻  练习","slug":"☻-练习-4","link":"#☻-练习-4","children":[]},{"level":3,"title":"☻  练习","slug":"☻-练习-5","link":"#☻-练习-5","children":[]},{"level":3,"title":"接口的概念","slug":"接口的概念","link":"#接口的概念","children":[]},{"level":3,"title":"接口和类的关系","slug":"接口和类的关系","link":"#接口和类的关系","children":[]},{"level":3,"title":"接口和类的关系","slug":"接口和类的关系-1","link":"#接口和类的关系-1","children":[]},{"level":3,"title":"☻  示例    Student.java     Consumer.java     Person.java","slug":"☻-示例-student-java-consumer-java-person-java","link":"#☻-示例-student-java-consumer-java-person-java","children":[]},{"level":3,"title":"接口与抽象类的对比","slug":"接口与抽象类的对比","link":"#接口与抽象类的对比","children":[]}]},{"level":2,"title":"内部类","slug":"内部类","link":"#内部类","children":[{"level":3,"title":"内部类特性","slug":"内部类特性","link":"#内部类特性","children":[]},{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]},{"level":3,"title":"内部类特性","slug":"内部类特性-1","link":"#内部类特性-1","children":[]},{"level":3,"title":"内部类特性","slug":"内部类特性-2","link":"#内部类特性-2","children":[]},{"level":3,"title":"静态内部类","slug":"静态内部类","link":"#静态内部类","children":[]},{"level":3,"title":"局部内部类","slug":"局部内部类","link":"#局部内部类","children":[]}]},{"level":2,"title":"本章重点总结","slug":"本章重点总结","link":"#本章重点总结","children":[{"level":3,"title":"课后作业","slug":"课后作业","link":"#课后作业","children":[]},{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}]}],"git":{"createdTime":1684701424000,"updatedTime":1685699809000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":7}]},"readingTime":{"minutes":22.19,"words":6658},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/9-Java基础应用编程—— 面向对象高级特性.md","localizedDate":"2019年6月16日","excerpt":"<!-- more -->\\n<h1> Java基础应用编程—— 面向对象高级特性</h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<h2> 本章内容</h2>\\n<figure><img src=\\"/assets/Java_9_1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}');export{e as data};
