import{_ as a,X as n,Y as d,a1 as s,Z as e,$ as i,a2 as t,a0 as r,F as u}from"./framework-68dd73a2.js";const c="/blog/assets/Oracle_33_1.png",v="/blog/assets/Oracle_33_2.png",m="/blog/assets/Oracle_33_3.png",E="/blog/assets/Oracle_33_4.png",o={},h={id:"_33-oracle-序列、索引、同义词-md",tabindex:"-1"},A=e("a",{class:"header-anchor",href:"#_33-oracle-序列、索引、同义词-md","aria-hidden":"true"},"#",-1),b={href:"http://xn--7iq43lp98c.md",target:"_blank",rel:"noopener noreferrer"},x=r('<div class="hint-container warning"><p class="hint-container-title">注意</p><p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p></div><h4 id="章节目标" tabindex="-1"><a class="header-anchor" href="#章节目标" aria-hidden="true">#</a> 章节目标</h4><ul><li>通过本章学习，学员应达到如下目标： <ul><li>理解序列、索引对象的作用及概念；</li><li>掌握序列的创建及使用方法；</li><li>掌握索引的创建及使用方法；</li><li>掌握何时应该创建索引；</li><li>了解同义词的概念；</li></ul></li></ul><h4 id="本章内容" tabindex="-1"><a class="header-anchor" href="#本章内容" aria-hidden="true">#</a> 本章内容</h4><figure><img src="'+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="序列的概念" tabindex="-1"><a class="header-anchor" href="#序列的概念" aria-hidden="true">#</a> 序列的概念</h4><ul><li>序列（SEQUENCE） <ul><li>序列是按照一定规则能自动增加/减少数字的一种数据库对象。</li><li>通常可以使用序列自动地生成主键值。</li></ul></li></ul><h4 id="创建序列" tabindex="-1"><a class="header-anchor" href="#创建序列" aria-hidden="true">#</a> 创建序列</h4><ul><li>语法：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE SEQUENCE [schema.] sequencename
[INCREMENT BY n]
[START WITH n]
[MAXVALUE n | NOMAXVALUE]
[MINVALUE n | NOMINVALUE]
[CYCLE | NOCYCLE]
[CACHE n | NOCACHE];
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>sequencename:序列对象的名字</p></li><li><p>INCREMENT BY n：序列连续两个值之间的间隔n，默认为1。</p></li><li><p>START WITH n ：序列起始值n，该项省略，起始值为1</p></li><li><p>MAXVALUE n ：序列最大值；NOMAXVALUE ：指定序列无最大值</p></li><li><p>MINVALUE n ：序列最小值；NOMINVALUE ：指定序列无最小值</p></li><li><p>CYCLE|NOCYCLE：表示序列在达到最大值或最小值之后是否继续产生序列值，NOCYLE表示不再产生，NOCYLE是默认选项。</p></li><li><p>CACHE n|NOCACHE:表示序列值被服务器预先分配并存储在内存中，NOCACHE表示不预先分配并存储，CACHE 20是默认选项</p></li><li><p>例：创建序列test_seq，起始值为10，每次增长2，最大值100，最小值9，循环序列，每次缓存10</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE SEQUENCE test_seq
START WITH 10        --序列从10开始
INCREMENT BY 2     --序列每次增加2
MAXVALUE 100        --序列最大值100
MINVALUE 9          --序列最小值9
CYCLE             --序列循环,每次增加2,一直到100后回到9从新开始
CACHE 10；         --缓存中序列值个数为10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="序列属性" tabindex="-1"><a class="header-anchor" href="#序列属性" aria-hidden="true">#</a> 序列属性</h4><ul><li>NEXTVAL和CURRVAL伪列 <ul><li>CURRVAL：表示序列返回的当前值；</li><li>NEXTVAL：表示序列返回的下一个值；</li><li>CURRVAL在被引用之前，必须先使用NEXTVAL来产生一个序列值；</li><li>可用语句 序列名.CURRVAL或 序列名.NEXTVAL来访问序列;</li></ul></li><li>NEXTVAL和CURRVAL伪列 <ul><li>您可以在下列情况使用NEXTVAL 和 CURRVAL： <ul><li>SELECT 语句的SELECT列表中，但不包括子查询中的SELECT语句</li><li>INSERT 语句中的子查询SELECT列表中</li><li>INSERT 语句的VALUES子句中</li><li>UPDATE 语句的SET子句中</li></ul></li><li>下列情况不能使用 NEXTVAL 和 CURRVAL： <ul><li>在视图的SELECT列表中</li><li>包含DISTINCT关键字的 SELECT语句中</li><li>含有 GROUP BY, HAVING, ORDER BY子句的SELECT语句中</li><li>SELECT, DELETE, UPDATE 语句的子查询中</li><li>含有 DEFAULT表达式的 CREATE TABLE、 ALTER TABLE 语句中</li></ul></li></ul></li></ul><h4 id="使用序列" tabindex="-1"><a class="header-anchor" href="#使用序列" aria-hidden="true">#</a> 使用序列</h4><ul><li>序列的使用 <ul><li>创建序列student_seq：</li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE SEQUENCE student_seq
START WITH 10000 
INCREMENT BY 1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用序列student_seq生成student表中sid列插入值：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>INSERT INTO student 
VALUES (student_seq.NEXTVAL, &#39;Scott&#39;, &#39;Computer Science&#39;, 11);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看student_seq序列当前值：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT student_seq.CURRVAL FROM dual;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="修序序列" tabindex="-1"><a class="header-anchor" href="#修序序列" aria-hidden="true">#</a> 修序序列</h4><ul><li>修改序列的语法如下：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ALTER  SEQUENCE  [schema.]sequencename
        [INCREMENT BY n]
        [MAXVALUE n | NOMAXVALUE]
        [MINVALUE n | NOMINVALUE]
        [CYCLE | NOCYCLE]
        [CACHE n | NOCACHE];
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>修改序列的语法没有START WITH子句。</p></li><li><p>修改序列</p><ul><li>正确修改</li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ALTER SEQUENCE test_seq
INCREMENT BY 4    ——序列每次增加4
MAXVALUE 1000     ——序列最大值1000
NOCACHE；         ——不设定缓存
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>错误修改</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ALTER SEQUENCE test_seq
INCREMENT BY 4    
MAXVALUE 100       ——最大值100小于已经分配的序列值200
NOCACHE； 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除序列" tabindex="-1"><a class="header-anchor" href="#删除序列" aria-hidden="true">#</a> 删除序列</h4><ul><li>删除序列的语法如下：</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DROP SEQUENCE [schema.]sequencename；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>例：删除序列student_seq</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DROP SEQUENCE student_seq;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="rowid" tabindex="-1"><a class="header-anchor" href="#rowid" aria-hidden="true">#</a> ROWID</h4><ul><li>ROWID <ul><li>是一个伪列，系统自动产生。</li><li>ROWID能唯一标示每一条数据库行记录的物理地址，通过 ROWID 能快速定位到一条行记录。</li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT rowid,ename
FROM emp;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>ROWID</th><th>ENAME</th></tr></thead><tbody><tr><td>AAAMfPAAEAAAAAgAAA</td><td>SMITH</td></tr><tr><td>AAAMfPAAEAAAAAgAAB</td><td>ALLEN</td></tr></tbody></table><ul><li>ROWID的格式</li></ul><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>例： AAAHjXAAOAAAADaAAA
数据对象编号 	文件编号 	块编号       行编号
AAAHjX         AAO    	AAAADa       AAA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>ROWID</th><th>ENAME</th></tr></thead><tbody><tr><td>AAAHjXAAOAAAADaAAA</td><td>SMITH</td></tr><tr><td>AAAHjXAAOAAAADaAAC</td><td>ALLEN</td></tr></tbody></table><ul><li>ROWID的应用 <ul><li>快速定位记录，使用ROWID检索及操作数据，效率最快</li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>例:使用ROWID修改数据
    UPDATE emp
    SET    ename = ename || &#39;*&#39;
    WHERE ROWID = &#39;AAAMg6AAFAAAABUAAA&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="索引概念" tabindex="-1"><a class="header-anchor" href="#索引概念" aria-hidden="true">#</a> 索引概念</h4><ul><li>索引( INDEX ): <ul><li>是对数据库表中一个或多个列的值进行排序的一种数据库对象。</li><li>在数据库中,通过索引可以加速对表的查询速度;</li></ul></li></ul><figure><img src="'+E+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="索引类别" tabindex="-1"><a class="header-anchor" href="#索引类别" aria-hidden="true">#</a> 索引类别</h4><ul><li>单列索引: <ul><li>索引建立在表中的某一列上</li></ul></li><li>复合索引: <ul><li>索引建立在表中某几列的组合上</li></ul></li></ul><h4 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引" aria-hidden="true">#</a> 创建索引</h4><ul><li><p>两种方式：</p><ul><li>自动创建: 当有 PRIMARY KEY 或者 UNIQUE 约束时，数据库会自动创建一个索引；</li><li>手动创建: 用户使用创建索引语法来进行创建； <ul><li>创建索引语法：</li></ul></li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE INDEX indexname
ON table (column[, column]...);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>建议索引命名格式:idx_tablename_columnname</p></li><li><p>例：在emp表的ename字段上创建索引.</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE INDEX 	idx_emp_ename
ON  emp (ename);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>例：在emp表的deptno和job的组合上创建索引</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE INDEX 	idx_emp_deptnojob
ON  emp (deptno,job);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="测试索引" tabindex="-1"><a class="header-anchor" href="#测试索引" aria-hidden="true">#</a> 测试索引</h4><ul><li>创建测试环境表</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE TABLE e1 AS SELECT * FROM emp;
INSERT INTO e1 SELECT * FROM e1;--多次运行 
UPDATE e1 SET empno=ROWNUM;  --更新所有记录的empno，
					--以使其数值唯一
commit;--提交
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试无索引检索时间。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SELECT ename,sal FROM e1
WHERE empno=210000; 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试建索引后检索时间。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE INDEX e1_id ON e1(empno); --创建索引
SELECT ename,sal FROM e1
WHERE empno=210000; --再次在有索引的情况下做测试
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="适合创建索引情况" tabindex="-1"><a class="header-anchor" href="#适合创建索引情况" aria-hidden="true">#</a> 适合创建索引情况</h4><ul><li>表数据量很大</li><li>要查询的结果集在2%-4%左右</li><li>经常用来做WHERE条件中的列或者多表连接的列</li><li>查询列的数据范围分布很广</li><li>查询列中包含大量的NULL值,因为空值不包含在索引中</li></ul><h4 id="不适合创建索引情况" tabindex="-1"><a class="header-anchor" href="#不适合创建索引情况" aria-hidden="true">#</a> 不适合创建索引情况</h4><ul><li>数据量很小的表</li><li>在查询中不常用来作为查询条件的列</li><li>频繁更新的表</li><li>索引列作为表达式的一部分被使用时，比如常查询的条件是SALARY*12，此时在SALARY列上创建索引是没有效果的</li><li>查询条件中有单行函数时，用不上索引</li></ul><h4 id="索引缺点" tabindex="-1"><a class="header-anchor" href="#索引缺点" aria-hidden="true">#</a> 索引缺点</h4><ul><li>占用空间；</li><li>降低DML的操作速度；</li></ul><h4 id="删除索引" tabindex="-1"><a class="header-anchor" href="#删除索引" aria-hidden="true">#</a> 删除索引</h4><ul><li>删除索引的语法</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DROP INDEX index;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>删除索引后，索引中的数据及定义被删除，索引所占的数据空间被释放，但表中的数据仍然存在。</li></ul><h4 id="相关数据字典" tabindex="-1"><a class="header-anchor" href="#相关数据字典" aria-hidden="true">#</a> 相关数据字典</h4><ul><li>USER_INDEXES 数据字典视图包含索引的名称及其唯一性；</li><li>USER_IND_COLUMNS数据字典视图包含索引名称、表名以及列名；</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SQL&gt; SELECT	ic.index_name, ic.column_name,
  2		ic.column_position col_pos,ix.uniqueness
  3  FROM	user_indexes ix, user_ind_columns ic
  4  WHERE	ic.index_name = ix.index_name
  5  AND		ic.table_name = &#39;EMP&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="同义词" tabindex="-1"><a class="header-anchor" href="#同义词" aria-hidden="true">#</a> 同义词</h4><ul><li>同义词的概念 <ul><li><p>同义词（ SYNONYM ）</p><ul><li>是指向数据库对象（如：表、视图、序列、存储过程等）的数据库指针。</li></ul></li><li><p>使用同义词好处：</p><ul><li>可以简化对数据库对象的访问;</li><li>方便对其他用户表的访问;</li><li>简化过长的对象名称;</li><li>节省大量的数据库空间，对不同用户的操作同一张表没有多少差别;</li><li>扩展的数据库的使用范围，能够在不同的数据库用户之间实现无缝交互;</li><li>同义词可以创建在不同一个数据库服务器上，通过网络实现连接;</li></ul></li></ul></li><li>创建同义词 <ul><li>创建同义词的语法如下：</li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE [PUBLIC] SYNONYM 同义词 
FOR  [schema.]对象名；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>同义词两种类型：</p><ul><li>私有（PRIVATE）。是在指定的方案中创建的，并且只允许拥有它的方案访问</li><li>公有（PUBLIC）。由PUBLIC方案所拥有，所有的数据库方案都可以引用他们。</li></ul></li><li><p>删除同义词</p><ul><li>创建employees表的别名。</li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE SYNONYM  s_emp
FOR  hr.employees;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>删除同义词。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DROP SYNONYM s_emp;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>只有数据库管理员才拥有公有同义词的创建和删除权限。</li></ul><h4 id="本章重点总结" tabindex="-1"><a class="header-anchor" href="#本章重点总结" aria-hidden="true">#</a> 本章重点总结</h4><ul><li>理解序列、索引对象的作用及概念；</li><li>掌握序列的创建及使用方法；</li><li>掌握索引的创建及使用方法；</li><li>掌握何时应该创建索引；</li><li>了解同义词的概念；</li></ul><hr><h3 id="分割线" tabindex="-1"><a class="header-anchor" href="#分割线" aria-hidden="true">#</a> 分割线</h3><hr><p><strong>博主为咯学编程：父母不同意学编程，现已断绝关系;恋人不同意学编程，现已分手;亲戚不同意学编程，现已断绝来往;老板不同意学编程,现已失业三十年。。。。。。如果此博文有帮到你欢迎打赏，金额不限。。。</strong></p>`,90);function p(g,C){const l=u("ExternalLinkIcon");return n(),d("div",null,[s(" more "),e("h1",h,[A,i(" 33-Oracle-序列、索引、"),e("a",b,[i("同义词.md"),t(l)])]),x])}const R=a(o,[["render",p],["__file","oracle33.html.vue"]]);export{R as default};
