const t=JSON.parse('{"key":"v-2d9e96d8","path":"/zh/programBlog/ServerSideLanguage/Java/108-Java-%E5%86%85%E9%83%A8%E7%B1%BB%E5%9C%A8%E8%BF%AD%E4%BB%A3%E6%A8%A1%E5%BC%8F%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html","title":"Java-内部类在迭代模式中的运用","lang":"zh-CN","frontmatter":{"title":"Java-内部类在迭代模式中的运用","icon":"page","order":108,"author":"涎涎","date":"2019-07-09T00:00:00.000Z","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-内部类在迭代模式中的运用"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/108-Java-%E5%86%85%E9%83%A8%E7%B1%BB%E5%9C%A8%E8%BF%AD%E4%BB%A3%E6%A8%A1%E5%BC%8F%E4%B8%AD%E7%9A%84%E8%BF%90%E7%94%A8.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-内部类在迭代模式中的运用"}],["meta",{"property":"og:description","content":"108-Java-内部类在迭代模式中的运用.md 注：本例中用中文作为包名是不规范的写法，仅方便中国大陆同胞更好的理解包的作用，实际开发中均用英文。 package 内部类.现象一; import java.util.ArrayList; import java.util.Iterator; import java.util.List; public class Test { \\tpublic static void main(String[] args) { \\t\\tList&lt;String&gt; list = new ArrayList&lt;&gt;(); \\t\\t \\t\\t//MyList list = new MyList(); \\t\\t/** \\t\\t * list.add(\\"\\"); \\t\\t * \\t\\t * MyIterator it = list.iterator(); \\t\\t */ \\t\\t \\t\\t \\t\\tlist.add(\\"zhangsan\\"); \\t\\tlist.add(\\"lisi\\"); \\t\\tlist.add(\\"wangwu\\"); \\t\\t \\t\\tIterator&lt;String&gt; it = list.iterator(); \\t\\t \\t\\twhile(it.hasNext()) { \\t\\t\\tSystem.out.println(it.next()); \\t\\t} \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T10:10:00.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-07-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-15T10:10:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-内部类在迭代模式中的运用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-15T10:10:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"108-Java-内部类在迭代模式中的运用.md 注：本例中用中文作为包名是不规范的写法，仅方便中国大陆同胞更好的理解包的作用，实际开发中均用英文。 package 内部类.现象一; import java.util.ArrayList; import java.util.Iterator; import java.util.List; public class Test { \\tpublic static void main(String[] args) { \\t\\tList&lt;String&gt; list = new ArrayList&lt;&gt;(); \\t\\t \\t\\t//MyList list = new MyList(); \\t\\t/** \\t\\t * list.add(\\"\\"); \\t\\t * \\t\\t * MyIterator it = list.iterator(); \\t\\t */ \\t\\t \\t\\t \\t\\tlist.add(\\"zhangsan\\"); \\t\\tlist.add(\\"lisi\\"); \\t\\tlist.add(\\"wangwu\\"); \\t\\t \\t\\tIterator&lt;String&gt; it = list.iterator(); \\t\\t \\t\\twhile(it.hasNext()) { \\t\\t\\tSystem.out.println(it.next()); \\t\\t} \\t} }"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684145400000,"updatedTime":1684145400000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":1.51,"words":452},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/108-Java-内部类在迭代模式中的运用.md","localizedDate":"2019年7月9日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--108-Java--yl6nr6dcxn8wti8zt00bu4zb92ef94a147foqa33o.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">108-Java-内部类在迭代模式中的运用.md</a></h1>\\n<p>注：<em>本例中用中文作为包名是不规范的写法，仅方便中国大陆同胞更好的理解包的作用，实际开发中均用英文。</em></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>package 内部类.现象一;\\n\\nimport java.util.ArrayList;\\nimport java.util.Iterator;\\nimport java.util.List;\\n\\npublic class Test {\\n\\n\\tpublic static void main(String[] args) {\\n\\t\\tList&lt;String&gt; list = new ArrayList&lt;&gt;();\\n\\t\\t\\n\\t\\t//MyList list = new MyList();\\n\\t\\t/**\\n\\t\\t * list.add(\\"\\");\\n\\t\\t * \\n\\t\\t * MyIterator it = list.iterator();\\n\\t\\t */\\n\\t\\t\\n\\t\\t\\n\\t\\tlist.add(\\"zhangsan\\");\\n\\t\\tlist.add(\\"lisi\\");\\n\\t\\tlist.add(\\"wangwu\\");\\n\\t\\t\\n\\t\\tIterator&lt;String&gt; it = list.iterator();\\n\\t\\t\\n\\t\\twhile(it.hasNext()) {\\n\\t\\t\\tSystem.out.println(it.next());\\n\\t\\t}\\n\\t}\\n\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
