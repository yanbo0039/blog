const t=JSON.parse('{"key":"v-5c0732a6","path":"/zh/programBlog/LittleBlogs/JavaScript/8-JavaScript%E5%AE%9E%E8%B7%B5%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.html","title":"JavaScript实践数据结构和算法——归并排序","lang":"zh-CN","frontmatter":{"title":"JavaScript实践数据结构和算法——归并排序","icon":"page","order":8,"author":"涎涎","date":"2019-06-16T00:00:00.000Z","category":["JavaScript"],"tag":["JavaScript"],"head":[["meta",{"name":"keywords","content":"JavaScript实践数据结构和算法——归并排序"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/LittleBlogs/JavaScript/8-JavaScript%E5%AE%9E%E8%B7%B5%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"JavaScript实践数据结构和算法——归并排序"}],["meta",{"property":"og:description","content":"JavaScript实践数据结构和算法——归并排序 &lt;!DOCTYPE html&gt; &lt;html lang=\\"en\\"&gt; &lt;head&gt; &lt;meta charset=\\"UTF-8\\"&gt; &lt;title&gt;归并排序&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script&gt; function mergeSort(arr) { if(arr.length&lt;2){ return } var step = 1; var left,right; while (step&lt;arr.length){ left = 0; right = step; while (right+step&lt;=arr.length){ mergeArrays(arr,left,left+step,right,right+step); left = right + step; right = left + step; } if(right&lt;arr.length){ mergeArrays(arr,left,left+step,right,arr.length); } step *= 2; } } function mergeArrays(arr,startLeft,stopLeft,startRight,stopRight) { var rightArr = new Array(stopRight - startRight + 1); var leftArr = new Array(stopLeft - startLeft +1); k = startRight; for(var i = 0;i&lt;(rightArr.length - 1);i++){ rightArr[i] = arr[k]; ++k; } k = startLeft; for(var i=0;i&lt;(leftArr.length-1);i++){ leftArr[i] = arr[k]; ++k; } rightArr[rightArr.length-1] = Infinity; leftArr[leftArr.length-1] = Infinity; var m = 0; var n = 0; for(var k = startLeft;k&lt;stopRight;k++){ if(leftArr[m]&lt;=rightArr[n]){ arr[k] = leftArr[m]; m++; }else { arr[k] = rightArr[n]; n++; } } } var arr = [23,45,19,98,32,67,12,3,9]; mergeSort(arr); console.log(arr); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T10:10:00.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2019-06-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-15T10:10:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript实践数据结构和算法——归并排序\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-15T10:10:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"JavaScript实践数据结构和算法——归并排序 &lt;!DOCTYPE html&gt; &lt;html lang=\\"en\\"&gt; &lt;head&gt; &lt;meta charset=\\"UTF-8\\"&gt; &lt;title&gt;归并排序&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script&gt; function mergeSort(arr) { if(arr.length&lt;2){ return } var step = 1; var left,right; while (step&lt;arr.length){ left = 0; right = step; while (right+step&lt;=arr.length){ mergeArrays(arr,left,left+step,right,right+step); left = right + step; right = left + step; } if(right&lt;arr.length){ mergeArrays(arr,left,left+step,right,arr.length); } step *= 2; } } function mergeArrays(arr,startLeft,stopLeft,startRight,stopRight) { var rightArr = new Array(stopRight - startRight + 1); var leftArr = new Array(stopLeft - startLeft +1); k = startRight; for(var i = 0;i&lt;(rightArr.length - 1);i++){ rightArr[i] = arr[k]; ++k; } k = startLeft; for(var i=0;i&lt;(leftArr.length-1);i++){ leftArr[i] = arr[k]; ++k; } rightArr[rightArr.length-1] = Infinity; leftArr[leftArr.length-1] = Infinity; var m = 0; var n = 0; for(var k = startLeft;k&lt;stopRight;k++){ if(leftArr[m]&lt;=rightArr[n]){ arr[k] = leftArr[m]; m++; }else { arr[k] = rightArr[n]; n++; } } } var arr = [23,45,19,98,32,67,12,3,9]; mergeSort(arr); console.log(arr); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684145400000,"updatedTime":1684145400000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":1.09,"words":328},"filePathRelative":"zh/programBlog/LittleBlogs/JavaScript/8-JavaScript实践数据结构和算法——归并排序.md","localizedDate":"2019年6月16日","excerpt":"<!-- more -->\\n<h1> JavaScript实践数据结构和算法——归并排序</h1>\\n<figure><img src=\\"/assets/JavaScript_8_1.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<figure><img src=\\"/assets/JavaScript_8_1.gif\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>&lt;!DOCTYPE html&gt;\\n&lt;html lang=\\"en\\"&gt;\\n&lt;head&gt;\\n    &lt;meta charset=\\"UTF-8\\"&gt;\\n    &lt;title&gt;归并排序&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n&lt;script&gt;\\n    function mergeSort(arr) {\\n        if(arr.length&lt;2){\\n            return\\n        }\\n        var step = 1;\\n        var left,right;\\n        while (step&lt;arr.length){\\n            left = 0;\\n            right = step;\\n            while (right+step&lt;=arr.length){\\n                mergeArrays(arr,left,left+step,right,right+step);\\n                left = right + step;\\n                right = left + step;\\n            }\\n            if(right&lt;arr.length){\\n                mergeArrays(arr,left,left+step,right,arr.length);\\n            }\\n            step *= 2;\\n        }\\n    }\\n    function mergeArrays(arr,startLeft,stopLeft,startRight,stopRight) {\\n        var rightArr = new Array(stopRight - startRight + 1);\\n        var leftArr = new Array(stopLeft - startLeft +1);\\n        k = startRight;\\n        for(var i = 0;i&lt;(rightArr.length - 1);i++){\\n            rightArr[i] = arr[k];\\n            ++k;\\n        }\\n        k = startLeft;\\n        for(var i=0;i&lt;(leftArr.length-1);i++){\\n            leftArr[i] = arr[k];\\n            ++k;\\n        }\\n        rightArr[rightArr.length-1] = Infinity;\\n        leftArr[leftArr.length-1] = Infinity;\\n        var m = 0;\\n        var n = 0;\\n        for(var k = startLeft;k&lt;stopRight;k++){\\n            if(leftArr[m]&lt;=rightArr[n]){\\n                arr[k] = leftArr[m];\\n                m++;\\n            }else {\\n                arr[k] = rightArr[n];\\n                n++;\\n            }\\n        }\\n\\n    }\\n    var arr = [23,45,19,98,32,67,12,3,9];\\n    mergeSort(arr);\\n    console.log(arr);\\n&lt;/script&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
