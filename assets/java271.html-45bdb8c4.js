const e=JSON.parse('{"key":"v-5c7dcdf0","path":"/zh/programBlog/ServerSideLanguage/Java/java271.html","title":"Java锁的简单介绍","lang":"zh-CN","frontmatter":{"title":"Java锁的简单介绍","icon":"page","sticky":20230618220649,"order":271,"author":"涎涎","date":"2023-06-18T22:06:49.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java271.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java锁的简单介绍"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java271.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java锁的简单介绍"}],["meta",{"property":"og:description","content":"Java锁的简单介绍 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 概念 在Java中，锁（Lock）是一种同步机制，用于控制多个线程对共享资源的访问。 锁可以确保在同一时间只有一个线程可以访问被锁定的代码块或资源， 从而避免多个线程同时修改数据而引发的数据不一致性或并发冲突的问题。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-21T09:54:48.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-06-18T22:06:49.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-21T09:54:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java锁的简单介绍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-18T22:06:49.000Z\\",\\"dateModified\\":\\"2024-02-21T09:54:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"Java锁的简单介绍 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 概念 在Java中，锁（Lock）是一种同步机制，用于控制多个线程对共享资源的访问。 锁可以确保在同一时间只有一个线程可以访问被锁定的代码块或资源， 从而避免多个线程同时修改数据而引发的数据不一致性或并发冲突的问题。"},"headers":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1708509288000,"updatedTime":1708509288000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":2.99,"words":897},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/271-Java锁的简单介绍.md","localizedDate":"2023年6月18日","excerpt":"<!-- more -->\\n<!-- sticky -->\\n<h1> Java锁的简单介绍</h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<h3> 概念</h3>\\n<blockquote>\\n<p>在Java中，锁（Lock）是一种同步机制，用于控制多个线程对共享资源的访问。\\n锁可以确保在同一时间只有一个线程可以访问被锁定的代码块或资源，\\n从而避免多个线程同时修改数据而引发的数据不一致性或并发冲突的问题。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
