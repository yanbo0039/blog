const t=JSON.parse('{"key":"v-3e01f6c8","path":"/zh/programBlog/ServerSideLanguage/Java/144-Java-%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%AF%BB%E4%B8%8E%E5%86%99%E4%BB%A5%E5%8F%8A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html","title":"Java-对象的读与写以及对象的序列化和反序列化","lang":"zh-CN","frontmatter":{"title":"Java-对象的读与写以及对象的序列化和反序列化","icon":"page","order":144,"author":"涎涎","date":"2019-07-17T09:05:21.000Z","isOriginal":true,"category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-对象的读与写以及对象的序列化和反序列化"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/144-Java-%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%AF%BB%E4%B8%8E%E5%86%99%E4%BB%A5%E5%8F%8A%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-对象的读与写以及对象的序列化和反序列化"}],["meta",{"property":"og:description","content":"144-Java-对象的读与写以及对象的序列化和反序列化.md 写对象： package 对象流; import java.io.File; import java.io.FileOutputStream; import java.io.IOException; import java.io.ObjectOutputStream; public class TestWriteObject { \\tpublic static void main(String[] args) { \\t\\t/** \\t\\t * 写对象的套路： \\t\\t * 1. 要有对象 \\t\\t * 2. 把对象输出实例化 \\t\\t * 3. 写 \\t\\t */ \\t\\t \\t\\tStudent stu = new Student(100,\\"sunwukong\\",\\"huaguoshan\\"); \\t\\tFile file = new File(\\"E:\\\\\\\\stu.txt\\"); \\t\\tif(!file.exists()) { \\t\\t\\ttry { \\t\\t\\t\\tfile.createNewFile(); \\t\\t\\t} catch (IOException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t} \\t\\ttry ( \\t\\t\\t\\tObjectOutputStream os = new ObjectOutputStream(new FileOutputStream(file)) \\t\\t\\t\\t) \\t\\t{ \\t\\t\\tos.writeObject(stu); \\t\\t\\t \\t\\t} catch (Exception e) { \\t\\t\\te.printStackTrace(); \\t\\t} \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-21T20:37:04.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-07-17T09:05:21.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-21T20:37:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-对象的读与写以及对象的序列化和反序列化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-17T09:05:21.000Z\\",\\"dateModified\\":\\"2023-05-21T20:37:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"144-Java-对象的读与写以及对象的序列化和反序列化.md 写对象： package 对象流; import java.io.File; import java.io.FileOutputStream; import java.io.IOException; import java.io.ObjectOutputStream; public class TestWriteObject { \\tpublic static void main(String[] args) { \\t\\t/** \\t\\t * 写对象的套路： \\t\\t * 1. 要有对象 \\t\\t * 2. 把对象输出实例化 \\t\\t * 3. 写 \\t\\t */ \\t\\t \\t\\tStudent stu = new Student(100,\\"sunwukong\\",\\"huaguoshan\\"); \\t\\tFile file = new File(\\"E:\\\\\\\\stu.txt\\"); \\t\\tif(!file.exists()) { \\t\\t\\ttry { \\t\\t\\t\\tfile.createNewFile(); \\t\\t\\t} catch (IOException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t} \\t\\ttry ( \\t\\t\\t\\tObjectOutputStream os = new ObjectOutputStream(new FileOutputStream(file)) \\t\\t\\t\\t) \\t\\t{ \\t\\t\\tos.writeObject(stu); \\t\\t\\t \\t\\t} catch (Exception e) { \\t\\t\\te.printStackTrace(); \\t\\t} \\t} }"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1684701424000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":2.04,"words":613},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/144-Java-对象的读与写以及对象的序列化和反序列化.md","localizedDate":"2019年7月17日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--144-Java--3c6n37ei7m3tba839aba071avb24vdp5cea876lea5928lfa8793lwicha.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">144-Java-对象的读与写以及对象的序列化和反序列化.md</a></h1>\\n<p><strong>写对象：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>package 对象流;\\n\\nimport java.io.File;\\nimport java.io.FileOutputStream;\\nimport java.io.IOException;\\nimport java.io.ObjectOutputStream;\\n\\npublic class TestWriteObject {\\n\\n\\tpublic static void main(String[] args) {\\n\\n\\t\\t/**\\n\\t\\t * 写对象的套路：\\n\\t\\t * 1. 要有对象\\n\\t\\t * 2. 把对象输出实例化\\n\\t\\t * 3. 写\\n\\t\\t */\\n\\t\\t\\n\\t\\tStudent stu = new Student(100,\\"sunwukong\\",\\"huaguoshan\\");\\n\\t\\tFile file = new File(\\"E:\\\\\\\\stu.txt\\");\\n\\t\\tif(!file.exists()) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tfile.createNewFile();\\n\\t\\t\\t} catch (IOException e) {\\n\\t\\t\\t\\te.printStackTrace();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\ttry (\\n\\t\\t\\t\\tObjectOutputStream os = new ObjectOutputStream(new FileOutputStream(file))\\n\\t\\t\\t\\t)\\n\\t\\t{\\n\\t\\t\\tos.writeObject(stu);\\n\\t\\t\\t\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\te.printStackTrace();\\n\\t\\t}\\n\\t}\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
