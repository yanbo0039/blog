const e=JSON.parse('{"key":"v-8e27d3ac","path":"/zh/programBlog/ServerSideLanguage/Java/java112.html","title":"Java-异常处理之方法调用堆栈","lang":"zh-CN","frontmatter":{"title":"Java-异常处理之方法调用堆栈","icon":"page","order":112,"author":"涎涎","date":"2019-07-10T13:49:46.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java112.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-异常处理之方法调用堆栈"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java112.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-异常处理之方法调用堆栈"}],["meta",{"property":"og:description","content":"112-Java-异常处理之方法调用堆栈.md 方法调用堆栈 后进先出：方法A调用方法B的时候，只有方法B先完成后，方法A才完成。先执行的方法总是后完成，后执行的方法先完成，类似于数据结构中的堆栈－－后进先出，我们称之为方法调用堆栈。 如示例，仅有一条语句抛出异常，会导致所有的方法都不能正常结束。如果不想出现这样的情况，我们就要使用java的异常处理机制－抓抛模型。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-28T07:02:16.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-07-10T13:49:46.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-28T07:02:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-异常处理之方法调用堆栈\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-10T13:49:46.000Z\\",\\"dateModified\\":\\"2023-05-28T07:02:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"112-Java-异常处理之方法调用堆栈.md 方法调用堆栈 后进先出：方法A调用方法B的时候，只有方法B先完成后，方法A才完成。先执行的方法总是后完成，后执行的方法先完成，类似于数据结构中的堆栈－－后进先出，我们称之为方法调用堆栈。 如示例，仅有一条语句抛出异常，会导致所有的方法都不能正常结束。如果不想出现这样的情况，我们就要使用java的异常处理机制－抓抛模型。"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1685257336000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":3}]},"readingTime":{"minutes":1.37,"words":410},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/112-Java-异常处理之方法调用堆栈.md","localizedDate":"2019年7月10日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--112-Java--ju6nj07fbvcztz1sc271bhoi5ivzs3asreo52l.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">112-Java-异常处理之方法调用堆栈.md</a></h1>\\n<ul>\\n<li>方法调用堆栈\\n<ul>\\n<li>后进先出：方法A调用方法B的时候，只有方法B先完成后，方法A才完成。先执行的方法总是后完成，后执行的方法先完成，类似于数据结构中的堆栈－－后进先出，我们称之为方法调用堆栈。</li>\\n<li>如示例，仅有一条语句抛出异常，会导致所有的方法都不能正常结束。如果不想出现这样的情况，我们就要使用java的异常处理机制－抓抛模型。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
