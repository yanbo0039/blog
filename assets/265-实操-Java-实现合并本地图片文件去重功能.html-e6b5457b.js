const t=JSON.parse('{"key":"v-9ae80c02","path":"/zh/programBlog/ServerSideLanguage/Java/265-%E5%AE%9E%E6%93%8D-Java-%E5%AE%9E%E7%8E%B0%E5%90%88%E5%B9%B6%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6%E5%8E%BB%E9%87%8D%E5%8A%9F%E8%83%BD.html","title":"实操-Java-实现合并本地图片文件去重功能","lang":"zh-CN","frontmatter":{"title":"实操-Java-实现合并本地图片文件去重功能","icon":"page","order":265,"author":"涎涎","date":"2023-01-16T00:00:00.000Z","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"实操-Java-实现合并本地图片文件去重功能"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/265-%E5%AE%9E%E6%93%8D-Java-%E5%AE%9E%E7%8E%B0%E5%90%88%E5%B9%B6%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6%E5%8E%BB%E9%87%8D%E5%8A%9F%E8%83%BD.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"实操-Java-实现合并本地图片文件去重功能"}],["meta",{"property":"og:description","content":"265-实操-Java-实现合并本地图片文件去重功能.md 示例代码 package com.tencent.chapter03.照片去重功能; import java.io.File; import java.io.IOException; import java.nio.file.Files; import java.nio.file.Paths; import java.nio.file.StandardCopyOption; /** * &lt;p&gt;Title: Photoquchong&lt;/p&gt; * &lt;p&gt; * Description: * &lt;/p&gt; * @author xianxian * @date 2023年1月15日 */ public class Photoquchong { \\tpublic static void main(String[] args) { \\t\\tFile file_a = new File(\\"F:\\\\\\\\Java测试文件夹\\\\\\\\新建文件夹\\"), \\t\\t\\t\\tfile_b = new File(\\"F:\\\\\\\\Java测试文件夹\\\\\\\\合并文件汇总\\"); \\t\\tString file_c = \\"F:\\\\\\\\Java测试文件夹\\\\\\\\c相同照片质量较小\\", \\t\\t\\t\\tfile_d = \\"F:\\\\\\\\Java测试文件夹\\\\\\\\d相同质量相等照片\\"; \\t\\thbFiles(file_a,file_b,file_c,file_d); \\t} \\t \\t/** \\t * &lt;p&gt;Title: compareString&lt;/p&gt; \\t * &lt;p&gt; \\t * Description: \\t * 比较 destStr 字符串 是否 包含 srcStr 字符串 \\t * &lt;/p&gt; \\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt; \\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt; \\t * @param srcStr \\t * @param destStr \\t * @param headortail 从头或者尾截取 destStr 字符串进行比较 从头传参为 0 尾部 为 -1 \\t * @return \\t * @author xianxian \\t * @date 2023年1月16日 \\t * @version 1.0 \\t */ \\tprivate static Boolean compareString(String srcStr,String destStr,int headortail) { \\t\\tif(destStr.length() &gt; srcStr.length()) { \\t\\t\\tif(headortail == 0) {//如果为0则从开始截取字符串相比较 \\t\\t\\t\\treturn destStr.substring(0, srcStr.length()).equals(srcStr); \\t\\t\\t}else {//否则从尾部截取比较 \\t\\t\\t\\treturn destStr.substring(destStr.length() - srcStr.length()).equals(srcStr); \\t\\t\\t} \\t\\t}else { \\t\\t\\treturn false ; \\t\\t} \\t} \\t/** \\t * &lt;p&gt;Title: hbFiles&lt;/p&gt; \\t * &lt;p&gt; \\t * Description: \\t * 实现图片的两文件夹合并去重功能 \\t * 例a 文件夹 与 b 文件夹中 有很多同名文件 该方法将 a 文件夹合并到b文件夹中 \\t * 同名文件 内存较小存放c文件夹 \\t * 内存相同存放d文件夹 \\t * 内存较大的存放b文件夹 \\t * 最终清空a文件夹为目的 \\t * &lt;/p&gt; \\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt; \\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt; \\t * @param file_a 源文件夹 \\t * @param file_b 目标文件夹 \\t * @param file_c 存放 相同照片质量较小 文件夹 \\t * @param file_d 存放 相同质量相等照片 文件夹 \\t * @author xianxian \\t * @date 2023年1月15日 \\t * @version 1.0 \\t */ \\tprivate static void hbFiles(File file_a, File file_b, String file_c, String file_d) { \\t\\tFile[] fileas = file_a.listFiles(), filebs = file_b.listFiles(); \\t\\tfor (File file_a_iteam : fileas) { \\t\\t\\tBoolean result = false;// 是否有重复 默认没有重复 \\t\\t\\tif(file_a_iteam.isFile() &amp;&amp; compareString(\\"\\", file_a_iteam.getName(), 0)) { \\t\\t\\t\\t// 将a文件夹中的元素与b文件夹中的每一个元素相比较 \\t\\t\\t\\tfor (File file_b_iteam : filebs) {// 如果目标文件为空进不了这个循环 \\t\\t\\t\\t\\tif (file_b_iteam.isFile()) { \\t\\t\\t\\t\\t\\t/** \\t\\t\\t\\t\\t\\t * 1. 如果 a文件夹中元素 与 与 b文件夹中的任意一个元素 名字相同 则 比较 它们的大小 否则 将 其移动到对应的文件夹 \\t\\t\\t\\t\\t\\t */ \\t\\t\\t\\t\\t\\tif (file_a_iteam.getName().equals(file_b_iteam.getName())) { \\t\\t\\t\\t\\t\\t\\tresult = true;// 名字相同了 表示有复复的了 更改为true \\t\\t\\t\\t\\t\\t\\tif (file_a_iteam.length() &gt; file_b_iteam.length()) { \\t\\t\\t\\t\\t\\t\\t\\t// b元素应该先移动至 F:\\\\Java测试文件夹\\\\相同照片质量较小 文件夹 \\t\\t\\t\\t\\t\\t\\t\\t// 如果a无互比b元素大 则 将大的元素 移动至 F:\\\\Java测试文件夹\\\\相同照片质量较大 文件夹 \\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_b_iteam.getAbsolutePath(), file_c); \\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_b_iteam.getParent()); \\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println(file_b.getAbsolutePath() + \\" 移动至了 \\" + file_c + \\" NO.149 result: 1 \\"); \\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println(file_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_b.getAbsolutePath() \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t+ \\" NO.150 result:1 \\"); \\t\\t\\t\\t\\t\\t\\t\\tbreak; \\t\\t\\t\\t\\t\\t\\t} else { \\t\\t\\t\\t\\t\\t\\t\\t// 否则将其再进行比较 \\t\\t\\t\\t\\t\\t\\t\\tif (file_a_iteam.length() == file_b_iteam.length()) { \\t\\t\\t\\t\\t\\t\\t\\t\\t// 如果质量相同则将其移动至 F:\\\\Java测试文件夹\\\\相同照片质量相等 文件夹 \\t\\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_d); \\t\\t\\t\\t\\t\\t\\t\\t\\tSystem.err.println( \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_d + \\" NO.155 result:2 \\"); \\t\\t\\t\\t\\t\\t\\t\\t\\tbreak; \\t\\t\\t\\t\\t\\t\\t\\t} else { \\t\\t\\t\\t\\t\\t\\t\\t\\t// 否则将其移动至 F:\\\\Java测试文件夹\\\\相同照片质量较小 文件夹 \\t\\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_c); \\t\\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println( \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_c + \\" NO.159 result:3 \\"); \\t\\t\\t\\t\\t\\t\\t\\t\\tbreak; \\t\\t\\t\\t\\t\\t\\t\\t} \\t\\t\\t\\t\\t\\t\\t} \\t\\t\\t\\t\\t\\t} \\t\\t\\t\\t\\t} \\t\\t\\t\\t} \\t\\t\\t\\tif (!result) {// 无重复时 将aitem 直接 存入到 b文件夹 \\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_b.getAbsolutePath()); \\t\\t\\t\\t\\tSystem.out.println( \\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_b.getAbsolutePath() + \\" NO.163 result:4 \\"); \\t\\t\\t\\t} \\t\\t\\t} \\t\\t} \\t} \\t/** \\t * &lt;p&gt;Title: moveFile&lt;/p&gt; \\t * &lt;p&gt; \\t * Description: 移动文件 \\t * &lt;/p&gt; \\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt; \\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt; \\t * @param src \\t * @param dest \\t * @author xianxian \\t * @date 2023年1月15日 \\t * @version 1.0 \\t */ \\tprivate static void moveFile(String src, String dest) { \\t\\tFile targetPart = new File(dest); \\t\\tif (!targetPart.exists()) { \\t\\t\\ttargetPart.mkdirs();//创建此抽象路径名指定的目录。 \\t\\t} \\t\\t// 以src的最后一个\\"\\\\\\"取其下标 截取字符从 最后一个 \\"\\\\\\" 到结束 得到 src 的文件全名 再将其 拼接到目标文件名中 \\t\\tdest = dest + File.separator + src.substring(src.lastIndexOf(File.separator) + 1, src.length()); \\t\\ttry { \\t\\t\\tFiles.move(Paths.get(src), Paths.get(dest),StandardCopyOption.ATOMIC_MOVE); \\t\\t\\tSystem.out.println(\\"成功了\\"); \\t\\t} catch (IOException e) { \\t\\t\\tSystem.out.println(\\"失败了，失败信息： \\" + e.getMessage()); \\t\\t\\te.printStackTrace(); \\t\\t} \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-01-16T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"实操-Java-实现合并本地图片文件去重功能\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-16T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"265-实操-Java-实现合并本地图片文件去重功能.md 示例代码 package com.tencent.chapter03.照片去重功能; import java.io.File; import java.io.IOException; import java.nio.file.Files; import java.nio.file.Paths; import java.nio.file.StandardCopyOption; /** * &lt;p&gt;Title: Photoquchong&lt;/p&gt; * &lt;p&gt; * Description: * &lt;/p&gt; * @author xianxian * @date 2023年1月15日 */ public class Photoquchong { \\tpublic static void main(String[] args) { \\t\\tFile file_a = new File(\\"F:\\\\\\\\Java测试文件夹\\\\\\\\新建文件夹\\"), \\t\\t\\t\\tfile_b = new File(\\"F:\\\\\\\\Java测试文件夹\\\\\\\\合并文件汇总\\"); \\t\\tString file_c = \\"F:\\\\\\\\Java测试文件夹\\\\\\\\c相同照片质量较小\\", \\t\\t\\t\\tfile_d = \\"F:\\\\\\\\Java测试文件夹\\\\\\\\d相同质量相等照片\\"; \\t\\thbFiles(file_a,file_b,file_c,file_d); \\t} \\t \\t/** \\t * &lt;p&gt;Title: compareString&lt;/p&gt; \\t * &lt;p&gt; \\t * Description: \\t * 比较 destStr 字符串 是否 包含 srcStr 字符串 \\t * &lt;/p&gt; \\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt; \\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt; \\t * @param srcStr \\t * @param destStr \\t * @param headortail 从头或者尾截取 destStr 字符串进行比较 从头传参为 0 尾部 为 -1 \\t * @return \\t * @author xianxian \\t * @date 2023年1月16日 \\t * @version 1.0 \\t */ \\tprivate static Boolean compareString(String srcStr,String destStr,int headortail) { \\t\\tif(destStr.length() &gt; srcStr.length()) { \\t\\t\\tif(headortail == 0) {//如果为0则从开始截取字符串相比较 \\t\\t\\t\\treturn destStr.substring(0, srcStr.length()).equals(srcStr); \\t\\t\\t}else {//否则从尾部截取比较 \\t\\t\\t\\treturn destStr.substring(destStr.length() - srcStr.length()).equals(srcStr); \\t\\t\\t} \\t\\t}else { \\t\\t\\treturn false ; \\t\\t} \\t} \\t/** \\t * &lt;p&gt;Title: hbFiles&lt;/p&gt; \\t * &lt;p&gt; \\t * Description: \\t * 实现图片的两文件夹合并去重功能 \\t * 例a 文件夹 与 b 文件夹中 有很多同名文件 该方法将 a 文件夹合并到b文件夹中 \\t * 同名文件 内存较小存放c文件夹 \\t * 内存相同存放d文件夹 \\t * 内存较大的存放b文件夹 \\t * 最终清空a文件夹为目的 \\t * &lt;/p&gt; \\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt; \\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt; \\t * @param file_a 源文件夹 \\t * @param file_b 目标文件夹 \\t * @param file_c 存放 相同照片质量较小 文件夹 \\t * @param file_d 存放 相同质量相等照片 文件夹 \\t * @author xianxian \\t * @date 2023年1月15日 \\t * @version 1.0 \\t */ \\tprivate static void hbFiles(File file_a, File file_b, String file_c, String file_d) { \\t\\tFile[] fileas = file_a.listFiles(), filebs = file_b.listFiles(); \\t\\tfor (File file_a_iteam : fileas) { \\t\\t\\tBoolean result = false;// 是否有重复 默认没有重复 \\t\\t\\tif(file_a_iteam.isFile() &amp;&amp; compareString(\\"\\", file_a_iteam.getName(), 0)) { \\t\\t\\t\\t// 将a文件夹中的元素与b文件夹中的每一个元素相比较 \\t\\t\\t\\tfor (File file_b_iteam : filebs) {// 如果目标文件为空进不了这个循环 \\t\\t\\t\\t\\tif (file_b_iteam.isFile()) { \\t\\t\\t\\t\\t\\t/** \\t\\t\\t\\t\\t\\t * 1. 如果 a文件夹中元素 与 与 b文件夹中的任意一个元素 名字相同 则 比较 它们的大小 否则 将 其移动到对应的文件夹 \\t\\t\\t\\t\\t\\t */ \\t\\t\\t\\t\\t\\tif (file_a_iteam.getName().equals(file_b_iteam.getName())) { \\t\\t\\t\\t\\t\\t\\tresult = true;// 名字相同了 表示有复复的了 更改为true \\t\\t\\t\\t\\t\\t\\tif (file_a_iteam.length() &gt; file_b_iteam.length()) { \\t\\t\\t\\t\\t\\t\\t\\t// b元素应该先移动至 F:\\\\Java测试文件夹\\\\相同照片质量较小 文件夹 \\t\\t\\t\\t\\t\\t\\t\\t// 如果a无互比b元素大 则 将大的元素 移动至 F:\\\\Java测试文件夹\\\\相同照片质量较大 文件夹 \\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_b_iteam.getAbsolutePath(), file_c); \\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_b_iteam.getParent()); \\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println(file_b.getAbsolutePath() + \\" 移动至了 \\" + file_c + \\" NO.149 result: 1 \\"); \\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println(file_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_b.getAbsolutePath() \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t+ \\" NO.150 result:1 \\"); \\t\\t\\t\\t\\t\\t\\t\\tbreak; \\t\\t\\t\\t\\t\\t\\t} else { \\t\\t\\t\\t\\t\\t\\t\\t// 否则将其再进行比较 \\t\\t\\t\\t\\t\\t\\t\\tif (file_a_iteam.length() == file_b_iteam.length()) { \\t\\t\\t\\t\\t\\t\\t\\t\\t// 如果质量相同则将其移动至 F:\\\\Java测试文件夹\\\\相同照片质量相等 文件夹 \\t\\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_d); \\t\\t\\t\\t\\t\\t\\t\\t\\tSystem.err.println( \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_d + \\" NO.155 result:2 \\"); \\t\\t\\t\\t\\t\\t\\t\\t\\tbreak; \\t\\t\\t\\t\\t\\t\\t\\t} else { \\t\\t\\t\\t\\t\\t\\t\\t\\t// 否则将其移动至 F:\\\\Java测试文件夹\\\\相同照片质量较小 文件夹 \\t\\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_c); \\t\\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println( \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_c + \\" NO.159 result:3 \\"); \\t\\t\\t\\t\\t\\t\\t\\t\\tbreak; \\t\\t\\t\\t\\t\\t\\t\\t} \\t\\t\\t\\t\\t\\t\\t} \\t\\t\\t\\t\\t\\t} \\t\\t\\t\\t\\t} \\t\\t\\t\\t} \\t\\t\\t\\tif (!result) {// 无重复时 将aitem 直接 存入到 b文件夹 \\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_b.getAbsolutePath()); \\t\\t\\t\\t\\tSystem.out.println( \\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_b.getAbsolutePath() + \\" NO.163 result:4 \\"); \\t\\t\\t\\t} \\t\\t\\t} \\t\\t} \\t} \\t/** \\t * &lt;p&gt;Title: moveFile&lt;/p&gt; \\t * &lt;p&gt; \\t * Description: 移动文件 \\t * &lt;/p&gt; \\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt; \\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt; \\t * @param src \\t * @param dest \\t * @author xianxian \\t * @date 2023年1月15日 \\t * @version 1.0 \\t */ \\tprivate static void moveFile(String src, String dest) { \\t\\tFile targetPart = new File(dest); \\t\\tif (!targetPart.exists()) { \\t\\t\\ttargetPart.mkdirs();//创建此抽象路径名指定的目录。 \\t\\t} \\t\\t// 以src的最后一个\\"\\\\\\"取其下标 截取字符从 最后一个 \\"\\\\\\" 到结束 得到 src 的文件全名 再将其 拼接到目标文件名中 \\t\\tdest = dest + File.separator + src.substring(src.lastIndexOf(File.separator) + 1, src.length()); \\t\\ttry { \\t\\t\\tFiles.move(Paths.get(src), Paths.get(dest),StandardCopyOption.ATOMIC_MOVE); \\t\\t\\tSystem.out.println(\\"成功了\\"); \\t\\t} catch (IOException e) { \\t\\t\\tSystem.out.println(\\"失败了，失败信息： \\" + e.getMessage()); \\t\\t\\te.printStackTrace(); \\t\\t} \\t} }"},"headers":[],"git":{},"readingTime":{"minutes":4.22,"words":1265},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/265-实操-Java-实现合并本地图片文件去重功能.md","localizedDate":"2023年1月16日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--265--Java--bn4pm56aqsd04a483a3wa579cga749kg14a6gdt7llu0enchp33ghmxe.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">265-实操-Java-实现合并本地图片文件去重功能.md</a></h1>\\n<h4> 示例代码</h4>\\n<div class=\\"language-Java line-numbers-mode\\" data-ext=\\"Java\\"><pre class=\\"language-Java\\"><code>package com.tencent.chapter03.照片去重功能;\\n\\nimport java.io.File;\\nimport java.io.IOException;\\nimport java.nio.file.Files;\\nimport java.nio.file.Paths;\\nimport java.nio.file.StandardCopyOption;\\n/**\\n * &lt;p&gt;Title: Photoquchong&lt;/p&gt;  \\n * &lt;p&gt;\\n *    Description: \\n * &lt;/p&gt;  \\n * @author xianxian \\n * @date 2023年1月15日\\n */\\npublic class Photoquchong {\\n\\tpublic static void main(String[] args) {\\n\\n\\t\\tFile file_a = new File(\\"F:\\\\\\\\Java测试文件夹\\\\\\\\新建文件夹\\"),\\n\\t\\t\\t\\tfile_b = new File(\\"F:\\\\\\\\Java测试文件夹\\\\\\\\合并文件汇总\\");\\n\\t\\tString file_c = \\"F:\\\\\\\\Java测试文件夹\\\\\\\\c相同照片质量较小\\",\\n\\t\\t\\t\\tfile_d =  \\"F:\\\\\\\\Java测试文件夹\\\\\\\\d相同质量相等照片\\";\\n\\t\\thbFiles(file_a,file_b,file_c,file_d);\\n\\t}\\n\\t\\n\\t/**\\n\\t * &lt;p&gt;Title: compareString&lt;/p&gt;  \\n\\t * &lt;p&gt;\\n\\t *    Description: \\n\\t *    比较 destStr 字符串 是否 包含 srcStr 字符串\\n\\t * &lt;/p&gt;  \\n\\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt;  \\n\\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt;  \\n\\t * @param srcStr\\n\\t * @param destStr\\n\\t * @param headortail 从头或者尾截取 destStr 字符串进行比较 从头传参为 0 尾部 为 -1\\n\\t * @return  \\n\\t * @author xianxian\\n\\t * @date 2023年1月16日  \\n\\t * @version 1.0\\n\\t */\\n\\tprivate static Boolean compareString(String srcStr,String destStr,int headortail) {\\n\\t\\tif(destStr.length() &gt; srcStr.length()) {\\n\\t\\t\\tif(headortail == 0) {//如果为0则从开始截取字符串相比较\\n\\t\\t\\t\\treturn destStr.substring(0, srcStr.length()).equals(srcStr);\\n\\t\\t\\t}else {//否则从尾部截取比较\\n\\t\\t\\t\\treturn destStr.substring(destStr.length() -  srcStr.length()).equals(srcStr);\\n\\t\\t\\t}\\n\\t\\t}else {\\n\\t\\t\\treturn false ;\\n\\t\\t}\\n\\t}\\n\\t/**\\n\\t * &lt;p&gt;Title: hbFiles&lt;/p&gt;  \\n\\t * &lt;p&gt;\\n\\t *    Description: \\n\\t *    实现图片的两文件夹合并去重功能\\n\\t *    例a 文件夹 与 b 文件夹中 有很多同名文件 该方法将 a 文件夹合并到b文件夹中\\n\\t *    同名文件 内存较小存放c文件夹\\n\\t *          内存相同存放d文件夹\\n\\t *          内存较大的存放b文件夹\\n\\t *          最终清空a文件夹为目的\\n\\t * &lt;/p&gt;  \\n\\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt;  \\n\\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt;  \\n\\t * @param file_a 源文件夹\\n\\t * @param file_b 目标文件夹\\n\\t * @param file_c 存放 相同照片质量较小 文件夹\\n\\t * @param file_d 存放 相同质量相等照片 文件夹\\n\\t * @author xianxian\\n\\t * @date 2023年1月15日  \\n\\t * @version 1.0\\n\\t */\\n\\tprivate static void hbFiles(File file_a, File file_b, String file_c, String file_d) {\\n\\t\\tFile[] fileas = file_a.listFiles(), filebs = file_b.listFiles();\\n\\t\\tfor (File file_a_iteam : fileas) {\\n\\t\\t\\tBoolean result = false;// 是否有重复 默认没有重复\\n\\t\\t\\tif(file_a_iteam.isFile() &amp;&amp; compareString(\\"\\", file_a_iteam.getName(), 0)) {\\n\\t\\t\\t\\t// 将a文件夹中的元素与b文件夹中的每一个元素相比较\\n\\t\\t\\t\\tfor (File file_b_iteam : filebs) {// 如果目标文件为空进不了这个循环\\n\\t\\t\\t\\t\\tif (file_b_iteam.isFile()) {\\n\\t\\t\\t\\t\\t\\t/**\\n\\t\\t\\t\\t\\t\\t * 1. 如果 a文件夹中元素 与 与 b文件夹中的任意一个元素 名字相同 则 比较 它们的大小 否则 将 其移动到对应的文件夹\\n\\t\\t\\t\\t\\t\\t */\\n\\t\\t\\t\\t\\t\\tif (file_a_iteam.getName().equals(file_b_iteam.getName())) {\\n\\t\\t\\t\\t\\t\\t\\tresult = true;// 名字相同了 表示有复复的了 更改为true\\n\\t\\t\\t\\t\\t\\t\\tif (file_a_iteam.length() &gt; file_b_iteam.length()) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// b元素应该先移动至 F:\\\\Java测试文件夹\\\\相同照片质量较小 文件夹\\n\\t\\t\\t\\t\\t\\t\\t\\t// 如果a无互比b元素大 则 将大的元素 移动至 F:\\\\Java测试文件夹\\\\相同照片质量较大 文件夹\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_b_iteam.getAbsolutePath(), file_c);\\n\\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_b_iteam.getParent());\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println(file_b.getAbsolutePath() + \\" 移动至了 \\" + file_c + \\" NO.149 result: 1 \\");\\n\\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println(file_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_b.getAbsolutePath()\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t+ \\" NO.150 result:1 \\");\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t// 否则将其再进行比较\\n\\t\\t\\t\\t\\t\\t\\t\\tif (file_a_iteam.length() == file_b_iteam.length()) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// 如果质量相同则将其移动至 F:\\\\Java测试文件夹\\\\相同照片质量相等 文件夹\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_d);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tSystem.err.println(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_d + \\" NO.155 result:2 \\");\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// 否则将其移动至 F:\\\\Java测试文件夹\\\\相同照片质量较小 文件夹\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_c);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tSystem.out.println(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_c + \\" NO.159 result:3 \\");\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (!result) {// 无重复时 将aitem 直接 存入到 b文件夹\\n\\t\\t\\t\\t\\tmoveFile(file_a_iteam.getAbsolutePath(), file_b.getAbsolutePath());\\n\\t\\t\\t\\t\\tSystem.out.println(\\n\\t\\t\\t\\t\\t\\t\\tfile_a_iteam.getAbsolutePath() + \\" 移动至了 \\" + file_b.getAbsolutePath() + \\" NO.163 result:4 \\");\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t}\\n\\t/**\\n\\t * &lt;p&gt;Title: moveFile&lt;/p&gt;  \\n\\t * &lt;p&gt;\\n\\t *    Description: 移动文件\\n\\t * &lt;/p&gt;  \\n\\t * &lt;p&gt;Copyright: Copyright (c) 2017&lt;/p&gt;  \\n\\t * &lt;p&gt;Company: www.baidudu.com&lt;/p&gt;  \\n\\t * @param src\\n\\t * @param dest  \\n\\t * @author xianxian\\n\\t * @date 2023年1月15日  \\n\\t * @version 1.0\\n\\t */\\n\\tprivate static void moveFile(String src, String dest) {\\n\\t\\tFile targetPart = new File(dest);\\n\\t\\tif (!targetPart.exists()) {\\n\\t\\t\\ttargetPart.mkdirs();//创建此抽象路径名指定的目录。\\n\\t\\t}\\n\\t\\t// 以src的最后一个\\"\\\\\\"取其下标 截取字符从 最后一个 \\"\\\\\\" 到结束 得到 src 的文件全名 再将其 拼接到目标文件名中\\n\\t\\tdest = dest + File.separator + src.substring(src.lastIndexOf(File.separator) + 1, src.length());\\n\\t\\ttry {\\n\\t\\t\\tFiles.move(Paths.get(src), Paths.get(dest),StandardCopyOption.ATOMIC_MOVE);\\n\\t\\t\\tSystem.out.println(\\"成功了\\");\\n\\t\\t} catch (IOException e) {\\n\\t\\t\\tSystem.out.println(\\"失败了，失败信息： \\" + e.getMessage());\\n\\t\\t\\te.printStackTrace();\\n\\t\\t}\\n\\t}\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
