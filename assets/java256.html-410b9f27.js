const t=JSON.parse('{"key":"v-098cdaee","path":"/zh/programBlog/ServerSideLanguage/Java/java256.html","title":"Java-JDBC与java数据库编程-CallableStatement","lang":"zh-CN","frontmatter":{"title":"Java-JDBC与java数据库编程-CallableStatement","icon":"page","order":256,"author":"涎涎","date":"2023-01-22T16:27:26.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java256.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-JDBC与java数据库编程-CallableStatement"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java256.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-JDBC与java数据库编程-CallableStatement"}],["meta",{"property":"og:description","content":"256-Java-JDBC与java数据库编程-CallableStatement.md 示例代码 package com.tencent.chapter07.jdbc; import java.sql.CallableStatement; import java.sql.Connection; import java.sql.DriverManager; import java.sql.ResultSet; import java.sql.SQLException; import java.sql.Types; public class EmpCallableStatementDao { \\t/** \\t\\t创建JDBC应用程序的步骤: \\t\\t\\t0.项目右键-新建lib文件夹-将classes12.jar或者ojdbc14.jar复制到文件夹-classes12.jar右键-build path - add to build path \\t\\t\\t1.载入JDBC驱动程序 \\t\\t\\t2.定义连接URL \\t\\t\\t3.建立连接 \\t\\t\\t4.创建Statement对象 \\t\\t\\t5.执行查询或更新 \\t\\t\\t6.结果处理 \\t\\t\\t7.关闭连接 \\t\\t\\t \\t\\tStatement: \\t\\t\\t1.执行静态SQL语句 \\t\\t\\t2.有SQL注入风险 \\t\\t\\t \\t\\tPreparedStatement: \\t\\t\\t1.预编译SQL语句 \\t\\t\\t2.解决SQL注入风险 \\t\\t\\t \\t\\tCallableStatement: \\t\\t\\t1.执行存储过程 \\t */ \\tpublic static void main(String[] args) { \\t\\tEmpCallableStatementDao dao = new EmpCallableStatementDao(); \\t\\t \\t\\t//查询 \\t\\tdao.selectEmps(); \\t} \\t/** \\t * 查询所有的员工信息 \\t * @return \\t */ \\tpublic void selectEmps() { \\t\\tConnection conn = null; \\t\\tCallableStatement stat = null; \\t\\tResultSet rs = null; \\t\\ttry { \\t\\t\\t//1.载入JDBC驱动程序 \\t\\t\\tClass.forName(\\"oracle.jdbc.driver.OracleDriver\\");//驱动描述符 oracle.jdbc.driver.OracleDriver \\t\\t\\t \\t\\t\\t//2.定义连接URL jdbc:oracle:thin:@&lt;主机IP&gt;:1521:&lt;数据库服务名&gt; \\t\\t\\tString url = \\"jdbc:oracle:thin:@localhost:1521:orcl\\"; \\t\\t\\t \\t\\t\\t//3.建立连接 \\t\\t\\tconn = DriverManager.getConnection(url, \\"scott\\", \\"scott123\\"); \\t\\t\\tSystem.out.println(conn); \\t\\t\\t \\t\\t\\t/** \\t\\t\\t * 4.创建CallableStatement对象 \\t\\t\\t * \\t\\tcreate or replace procedure my_pro(p_empno in emp.empno%type,p_ename out emp.ename%type) \\t\\t\\t\\t\\tas \\t\\t\\t\\t\\tbegin \\t\\t\\t\\t\\t select ename into p_ename from emp where empno = p_empno; \\t\\t\\t\\t\\tend; \\t\\t\\t */ \\t\\t\\tstat = conn.prepareCall(\\"{call my_pro(?,?)}\\");//语法\\"{call 存储过程名称(参数列表....)}\\" \\t\\t\\t \\t\\t\\t//-------4.1 ORA-01008: 并非所有变量都已绑定 \\t\\t\\tstat.setInt(1, 6666);//索引从1开始，给第一个问号赋值 传入入参 \\t\\t\\tstat.registerOutParameter(2, Types.VARCHAR);//注册出参 \\t\\t\\t \\t\\t\\t//5.执行查询或更新 \\t\\t\\trs = stat.executeQuery(); \\t\\t\\t \\t\\t\\t//6.结果处理 \\t\\t\\t//System.out.println(rs.getString(2)); //not ok \\t\\t\\t//System.out.println(stat.getString(\\"p_ename\\"));//not ok \\t\\t\\tSystem.out.println(stat.getString(2));//ok 通过列索引获取出参，且只能调用stat中的方法，不能使用rs直接获取结果 \\t\\t\\t \\t\\t} catch (ClassNotFoundException e) { \\t\\t\\te.printStackTrace(); \\t\\t} catch (SQLException e) { \\t\\t\\te.printStackTrace(); \\t\\t} finally { \\t\\t\\t//7.关闭连接 \\t\\t\\t//使用顺序：Connection -&gt; Statement -&gt; ResultSet \\t\\t\\t//关闭顺序：ResultSet -&gt; Statement -&gt; Connection \\t\\t\\ttry { \\t\\t\\t\\tif(rs != null) \\t\\t\\t\\t{ \\t\\t\\t\\t\\trs.close(); \\t\\t\\t\\t} \\t\\t\\t} catch (SQLException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t\\ttry { \\t\\t\\t\\tif(stat != null) \\t\\t\\t\\t{ \\t\\t\\t\\t\\tstat.close(); \\t\\t\\t\\t} \\t\\t\\t} catch (SQLException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t\\ttry { \\t\\t\\t\\tif(conn != null) \\t\\t\\t\\t{ \\t\\t\\t\\t\\tconn.close(); \\t\\t\\t\\t} \\t\\t\\t} catch (SQLException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t} \\t\\t \\t\\t//return null; \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-30T04:53:46.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2023-01-22T16:27:26.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-30T04:53:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-JDBC与java数据库编程-CallableStatement\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-22T16:27:26.000Z\\",\\"dateModified\\":\\"2023-05-30T04:53:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"256-Java-JDBC与java数据库编程-CallableStatement.md 示例代码 package com.tencent.chapter07.jdbc; import java.sql.CallableStatement; import java.sql.Connection; import java.sql.DriverManager; import java.sql.ResultSet; import java.sql.SQLException; import java.sql.Types; public class EmpCallableStatementDao { \\t/** \\t\\t创建JDBC应用程序的步骤: \\t\\t\\t0.项目右键-新建lib文件夹-将classes12.jar或者ojdbc14.jar复制到文件夹-classes12.jar右键-build path - add to build path \\t\\t\\t1.载入JDBC驱动程序 \\t\\t\\t2.定义连接URL \\t\\t\\t3.建立连接 \\t\\t\\t4.创建Statement对象 \\t\\t\\t5.执行查询或更新 \\t\\t\\t6.结果处理 \\t\\t\\t7.关闭连接 \\t\\t\\t \\t\\tStatement: \\t\\t\\t1.执行静态SQL语句 \\t\\t\\t2.有SQL注入风险 \\t\\t\\t \\t\\tPreparedStatement: \\t\\t\\t1.预编译SQL语句 \\t\\t\\t2.解决SQL注入风险 \\t\\t\\t \\t\\tCallableStatement: \\t\\t\\t1.执行存储过程 \\t */ \\tpublic static void main(String[] args) { \\t\\tEmpCallableStatementDao dao = new EmpCallableStatementDao(); \\t\\t \\t\\t//查询 \\t\\tdao.selectEmps(); \\t} \\t/** \\t * 查询所有的员工信息 \\t * @return \\t */ \\tpublic void selectEmps() { \\t\\tConnection conn = null; \\t\\tCallableStatement stat = null; \\t\\tResultSet rs = null; \\t\\ttry { \\t\\t\\t//1.载入JDBC驱动程序 \\t\\t\\tClass.forName(\\"oracle.jdbc.driver.OracleDriver\\");//驱动描述符 oracle.jdbc.driver.OracleDriver \\t\\t\\t \\t\\t\\t//2.定义连接URL jdbc:oracle:thin:@&lt;主机IP&gt;:1521:&lt;数据库服务名&gt; \\t\\t\\tString url = \\"jdbc:oracle:thin:@localhost:1521:orcl\\"; \\t\\t\\t \\t\\t\\t//3.建立连接 \\t\\t\\tconn = DriverManager.getConnection(url, \\"scott\\", \\"scott123\\"); \\t\\t\\tSystem.out.println(conn); \\t\\t\\t \\t\\t\\t/** \\t\\t\\t * 4.创建CallableStatement对象 \\t\\t\\t * \\t\\tcreate or replace procedure my_pro(p_empno in emp.empno%type,p_ename out emp.ename%type) \\t\\t\\t\\t\\tas \\t\\t\\t\\t\\tbegin \\t\\t\\t\\t\\t select ename into p_ename from emp where empno = p_empno; \\t\\t\\t\\t\\tend; \\t\\t\\t */ \\t\\t\\tstat = conn.prepareCall(\\"{call my_pro(?,?)}\\");//语法\\"{call 存储过程名称(参数列表....)}\\" \\t\\t\\t \\t\\t\\t//-------4.1 ORA-01008: 并非所有变量都已绑定 \\t\\t\\tstat.setInt(1, 6666);//索引从1开始，给第一个问号赋值 传入入参 \\t\\t\\tstat.registerOutParameter(2, Types.VARCHAR);//注册出参 \\t\\t\\t \\t\\t\\t//5.执行查询或更新 \\t\\t\\trs = stat.executeQuery(); \\t\\t\\t \\t\\t\\t//6.结果处理 \\t\\t\\t//System.out.println(rs.getString(2)); //not ok \\t\\t\\t//System.out.println(stat.getString(\\"p_ename\\"));//not ok \\t\\t\\tSystem.out.println(stat.getString(2));//ok 通过列索引获取出参，且只能调用stat中的方法，不能使用rs直接获取结果 \\t\\t\\t \\t\\t} catch (ClassNotFoundException e) { \\t\\t\\te.printStackTrace(); \\t\\t} catch (SQLException e) { \\t\\t\\te.printStackTrace(); \\t\\t} finally { \\t\\t\\t//7.关闭连接 \\t\\t\\t//使用顺序：Connection -&gt; Statement -&gt; ResultSet \\t\\t\\t//关闭顺序：ResultSet -&gt; Statement -&gt; Connection \\t\\t\\ttry { \\t\\t\\t\\tif(rs != null) \\t\\t\\t\\t{ \\t\\t\\t\\t\\trs.close(); \\t\\t\\t\\t} \\t\\t\\t} catch (SQLException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t\\ttry { \\t\\t\\t\\tif(stat != null) \\t\\t\\t\\t{ \\t\\t\\t\\t\\tstat.close(); \\t\\t\\t\\t} \\t\\t\\t} catch (SQLException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t\\ttry { \\t\\t\\t\\tif(conn != null) \\t\\t\\t\\t{ \\t\\t\\t\\t\\tconn.close(); \\t\\t\\t\\t} \\t\\t\\t} catch (SQLException e) { \\t\\t\\t\\te.printStackTrace(); \\t\\t\\t} \\t\\t} \\t\\t \\t\\t//return null; \\t} }"},"headers":[],"git":{"createdTime":1684701424000,"updatedTime":1685422426000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":4}]},"readingTime":{"minutes":2.16,"words":648},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/256-Java-JDBC与java数据库编程-CallableStatement.md","localizedDate":"2023年1月22日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--256-Java-JDBCjava-CallableStatement-wq79c1401astqbzmqwo8qkhsb.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">256-Java-JDBC与java数据库编程-CallableStatement.md</a></h1>\\n<h4> 示例代码</h4>\\n<div class=\\"language-Java line-numbers-mode\\" data-ext=\\"Java\\"><pre class=\\"language-Java\\"><code>package com.tencent.chapter07.jdbc;\\n\\nimport java.sql.CallableStatement;\\nimport java.sql.Connection;\\nimport java.sql.DriverManager;\\nimport java.sql.ResultSet;\\nimport java.sql.SQLException;\\nimport java.sql.Types;\\n\\npublic class EmpCallableStatementDao {\\n\\n\\t/**\\n\\t\\t创建JDBC应用程序的步骤:\\n\\t\\t\\t0.项目右键-新建lib文件夹-将classes12.jar或者ojdbc14.jar复制到文件夹-classes12.jar右键-build path - add to build path\\n\\t\\t\\t1.载入JDBC驱动程序\\n\\t\\t\\t2.定义连接URL\\n\\t\\t\\t3.建立连接\\n\\t\\t\\t4.创建Statement对象\\n\\t\\t\\t5.执行查询或更新\\n\\t\\t\\t6.结果处理\\n\\t\\t\\t7.关闭连接\\n\\t\\t\\t\\n\\t\\tStatement:\\n\\t\\t\\t1.执行静态SQL语句\\n\\t\\t\\t2.有SQL注入风险\\n\\t\\t\\t\\n\\t\\tPreparedStatement:\\n\\t\\t\\t1.预编译SQL语句\\n\\t\\t\\t2.解决SQL注入风险\\n\\t\\t\\t\\n\\t\\tCallableStatement:\\n\\t\\t\\t1.执行存储过程\\n\\t */\\n\\tpublic static void main(String[] args) {\\n\\t\\tEmpCallableStatementDao dao = new EmpCallableStatementDao();\\n\\t\\t\\n\\t\\t//查询\\n\\t\\tdao.selectEmps();\\n\\t}\\n\\t/**\\n\\t * 查询所有的员工信息\\n\\t * @return\\n\\t */\\n\\tpublic void selectEmps() {\\n\\t\\tConnection conn = null;\\n\\t\\tCallableStatement stat = null;\\n\\t\\tResultSet rs = null;\\n\\t\\ttry {\\n\\t\\t\\t//1.载入JDBC驱动程序\\n\\t\\t\\tClass.forName(\\"oracle.jdbc.driver.OracleDriver\\");//驱动描述符  oracle.jdbc.driver.OracleDriver\\n\\t\\t\\t\\n\\t\\t\\t//2.定义连接URL  jdbc:oracle:thin:@&lt;主机IP&gt;:1521:&lt;数据库服务名&gt;\\n\\t\\t\\tString url = \\"jdbc:oracle:thin:@localhost:1521:orcl\\";\\n\\t\\t\\t\\n\\t\\t\\t//3.建立连接\\n\\t\\t\\tconn = DriverManager.getConnection(url, \\"scott\\", \\"scott123\\");\\n\\t\\t\\tSystem.out.println(conn);\\n\\t\\t\\t\\n\\t\\t\\t/**\\n\\t\\t\\t * 4.创建CallableStatement对象\\n\\t\\t\\t * \\t\\tcreate or replace procedure my_pro(p_empno in emp.empno%type,p_ename out emp.ename%type)\\n\\t\\t\\t\\t\\tas\\n\\t\\t\\t\\t\\tbegin\\n\\t\\t\\t\\t\\t       select ename into p_ename from emp where empno = p_empno;\\n\\t\\t\\t\\t\\tend;\\n\\t\\t\\t */\\n\\t\\t\\tstat = conn.prepareCall(\\"{call my_pro(?,?)}\\");//语法\\"{call 存储过程名称(参数列表....)}\\"\\n\\t\\t\\t\\n\\t\\t\\t//-------4.1 ORA-01008: 并非所有变量都已绑定\\n\\t\\t\\tstat.setInt(1, 6666);//索引从1开始，给第一个问号赋值  传入入参\\n\\t\\t\\tstat.registerOutParameter(2, Types.VARCHAR);//注册出参\\n\\t\\t\\t\\n\\t\\t\\t//5.执行查询或更新\\n\\t\\t\\trs = stat.executeQuery();\\n\\t\\t\\t\\n\\t\\t\\t//6.结果处理\\n\\t\\t\\t//System.out.println(rs.getString(2));  //not ok\\n\\t\\t\\t//System.out.println(stat.getString(\\"p_ename\\"));//not ok\\n\\t\\t\\tSystem.out.println(stat.getString(2));//ok 通过列索引获取出参，且只能调用stat中的方法，不能使用rs直接获取结果\\n\\t\\t\\t\\n\\t\\t} catch (ClassNotFoundException e) {\\n\\t\\t\\te.printStackTrace();\\n\\t\\t} catch (SQLException e) {\\n\\t\\t\\te.printStackTrace();\\n\\t\\t} finally {\\n\\t\\t\\t//7.关闭连接\\n\\t\\t\\t//使用顺序：Connection -&gt; Statement -&gt; ResultSet\\n\\t\\t\\t//关闭顺序：ResultSet -&gt; Statement -&gt; Connection\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif(rs != null)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\trs.close();\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch (SQLException e) {\\n\\t\\t\\t\\te.printStackTrace();\\n\\t\\t\\t}\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif(stat != null)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tstat.close();\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch (SQLException e) {\\n\\t\\t\\t\\te.printStackTrace();\\n\\t\\t\\t}\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tif(conn != null)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tconn.close();\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch (SQLException e) {\\n\\t\\t\\t\\te.printStackTrace();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\t\\n\\t\\t//return null;\\n\\t}\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
