const e=JSON.parse('{"key":"v-83eabff2","path":"/zh/programBlog/ServerSideLanguage/Java/java115.html","title":"Java-equals()与 等于等于 的区别","lang":"zh-CN","frontmatter":{"title":"Java-equals()与 等于等于 的区别","icon":"page","order":115,"author":"涎涎","date":"2019-07-11T09:28:04.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java115.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-equals()与 等于等于 的区别"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java115.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-equals()与 等于等于 的区别"}],["meta",{"property":"og:description","content":"115-Java-equals()与==的区别.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 理解equals()方法和==运算符的区别是非常重要的。 默认情况下（即没有被重写时）equals()只能比较引用类型，\\"==\\"既能比较引用类型又能比较基本类型。 equals()方法从Object类继承，即比较对象引用的值 一般都被子类方法覆盖，不再比较引用的值 \\"==\\"运算符: 比较基本数据类型：相当于算术等号 比较引用数据类型：比较引用的值，不能被覆盖。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-02T09:56:49.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-07-11T09:28:04.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-02T09:56:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-equals()与 等于等于 的区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-11T09:28:04.000Z\\",\\"dateModified\\":\\"2023-06-02T09:56:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"115-Java-equals()与==的区别.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 理解equals()方法和==运算符的区别是非常重要的。 默认情况下（即没有被重写时）equals()只能比较引用类型，\\"==\\"既能比较引用类型又能比较基本类型。 equals()方法从Object类继承，即比较对象引用的值 一般都被子类方法覆盖，不再比较引用的值 \\"==\\"运算符: 比较基本数据类型：相当于算术等号 比较引用数据类型：比较引用的值，不能被覆盖。"},"headers":[{"level":3,"title":"关于此知识点比较优秀的博文","slug":"关于此知识点比较优秀的博文","link":"#关于此知识点比较优秀的博文","children":[]},{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1685699809000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":5}]},"readingTime":{"minutes":2.55,"words":765},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/115-Java-equals()与 等于等于 的区别.md","localizedDate":"2019年7月11日","excerpt":"<!-- more -->\\n<h1> 115-Java-equals()<a href=\\"http://%E4%B8%8E==%E7%9A%84%E5%8C%BA%E5%88%AB.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">与==的区别.md</a></h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<ul>\\n<li>理解equals()方法和==运算符的区别是非常重要的。\\n<ul>\\n<li>默认情况下（即没有被重写时）equals()只能比较引用类型，\\"==\\"既能比较引用类型又能比较基本类型。</li>\\n<li>equals()方法从Object类继承，即比较对象引用的值</li>\\n<li>一般都被子类方法覆盖，不再比较引用的值</li>\\n</ul>\\n</li>\\n<li>\\"==\\"运算符:\\n<ul>\\n<li>比较基本数据类型：相当于算术等号</li>\\n<li>比较引用数据类型：比较引用的值，不能被覆盖。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
