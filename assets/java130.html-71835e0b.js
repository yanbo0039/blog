const t=JSON.parse('{"key":"v-1f4edb6e","path":"/zh/programBlog/ServerSideLanguage/Java/java130.html","title":"Java-Vector集合介绍","lang":"zh-CN","frontmatter":{"title":"Java-Vector集合介绍","icon":"page","order":130,"author":"涎涎","date":"2019-07-13T14:59:45.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java130.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-Vector集合介绍"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java130.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-Vector集合介绍"}],["meta",{"property":"og:description","content":"130-Java-Vector集合介绍.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 package List集合; import java.util.ArrayList; import java.util.List; import java.util.Vector; public class TestVector { \\tpublic static void main(String[] args) { \\t\\t/** \\t\\t * Vector是同步的，性能较差。 \\t\\t * Vector类中的方法都是synchronized的 \\t\\t * 如果一个不需要线程安全的实现 \\t\\t * 建议在使用Vector的地方使用ArrayList \\t\\t */ \\t\\tList&lt;String&gt; list = new ArrayList&lt;&gt;(); \\t\\tlist.add(\\"abc\\"); \\t\\tlist.add(\\"777c\\"); \\t\\tlist.add(\\"123\\"); \\t\\tlist.add(\\"456\\"); \\t\\tlist.add(\\"456\\"); \\t\\tlist.add(\\"aqqc\\"); \\t\\tlist.add(null); \\t\\tlist.add(null); \\t\\t \\t\\tVector&lt;String&gt; v = new Vector&lt;&gt;(list); \\t\\t \\t\\tSystem.out.println(v.toString()); \\t\\t \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-13T03:33:51.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-07-13T14:59:45.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-13T03:33:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-Vector集合介绍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-13T14:59:45.000Z\\",\\"dateModified\\":\\"2023-06-13T03:33:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"130-Java-Vector集合介绍.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 package List集合; import java.util.ArrayList; import java.util.List; import java.util.Vector; public class TestVector { \\tpublic static void main(String[] args) { \\t\\t/** \\t\\t * Vector是同步的，性能较差。 \\t\\t * Vector类中的方法都是synchronized的 \\t\\t * 如果一个不需要线程安全的实现 \\t\\t * 建议在使用Vector的地方使用ArrayList \\t\\t */ \\t\\tList&lt;String&gt; list = new ArrayList&lt;&gt;(); \\t\\tlist.add(\\"abc\\"); \\t\\tlist.add(\\"777c\\"); \\t\\tlist.add(\\"123\\"); \\t\\tlist.add(\\"456\\"); \\t\\tlist.add(\\"456\\"); \\t\\tlist.add(\\"aqqc\\"); \\t\\tlist.add(null); \\t\\tlist.add(null); \\t\\t \\t\\tVector&lt;String&gt; v = new Vector&lt;&gt;(list); \\t\\t \\t\\tSystem.out.println(v.toString()); \\t\\t \\t} }"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1686627231000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":7}]},"readingTime":{"minutes":0.76,"words":229},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/130-Java-Vector集合介绍.md","localizedDate":"2019年7月13日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--130-Java-Vector-715xl56d749opgxd.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">130-Java-Vector集合介绍.md</a></h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>package List集合;\\n\\nimport java.util.ArrayList;\\nimport java.util.List;\\nimport java.util.Vector;\\n\\npublic class TestVector {\\n\\n\\tpublic static void main(String[] args) {\\n\\n\\t\\t/**\\n\\t\\t * Vector是同步的，性能较差。\\n\\t\\t * Vector类中的方法都是synchronized的\\n\\t\\t * 如果一个不需要线程安全的实现\\n\\t\\t * 建议在使用Vector的地方使用ArrayList\\n\\t\\t */\\n\\t\\tList&lt;String&gt; list = new ArrayList&lt;&gt;();\\n\\t\\tlist.add(\\"abc\\");\\n\\t\\tlist.add(\\"777c\\");\\n\\t\\tlist.add(\\"123\\");\\n\\t\\tlist.add(\\"456\\");\\n\\t\\tlist.add(\\"456\\");\\n\\t\\tlist.add(\\"aqqc\\");\\n\\t\\tlist.add(null);\\n\\t\\tlist.add(null);\\n\\t\\t\\n\\t\\tVector&lt;String&gt; v = new Vector&lt;&gt;(list);\\n\\t\\t\\n\\t\\tSystem.out.println(v.toString());\\n\\t\\t\\n\\t}\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
