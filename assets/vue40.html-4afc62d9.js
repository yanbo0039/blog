const e=JSON.parse('{"key":"v-d661b4f8","path":"/zh/programBlog/ClientSideLanguage/Vue/vue40.html","title":"前端浅拷贝和深拷贝的区别","lang":"zh-CN","frontmatter":{"title":"前端浅拷贝和深拷贝的区别","icon":"page","sticky":20230701034236,"order":40,"author":"涎涎","date":"2023-07-01T03:42:36.000Z","isOriginal":true,"permalinkPattern":"programBlog/ClientSideLanguage/Vue/vue40.html","category":["Vue"],"tag":["Vue"],"head":[["meta",{"name":"keywords","content":"前端浅拷贝和深拷贝的区别"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ClientSideLanguage/Vue/vue40.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"前端浅拷贝和深拷贝的区别"}],["meta",{"property":"og:description","content":"前端浅拷贝和深拷贝的区别 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 概念 浅拷贝和深拷贝都是指在将一个对象复制到另一个对象时所采用的不同策略。 浅拷贝是指创建一个新的对象，这个对象有着原始对象属性值的一份精确拷贝， 但是这些属性值所引用的对象并没有被拷贝，而是仍然指向原始对象中相应的属性值 。因此，如果原始对象中的某个属性值所引用的对象发生了变化， 那么浅拷贝对象中相应的属性值也会发生变化。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-21T09:54:48.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2023-07-01T03:42:36.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-21T09:54:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端浅拷贝和深拷贝的区别\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-01T03:42:36.000Z\\",\\"dateModified\\":\\"2024-02-21T09:54:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"前端浅拷贝和深拷贝的区别 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 概念 浅拷贝和深拷贝都是指在将一个对象复制到另一个对象时所采用的不同策略。 浅拷贝是指创建一个新的对象，这个对象有着原始对象属性值的一份精确拷贝， 但是这些属性值所引用的对象并没有被拷贝，而是仍然指向原始对象中相应的属性值 。因此，如果原始对象中的某个属性值所引用的对象发生了变化， 那么浅拷贝对象中相应的属性值也会发生变化。"},"headers":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1708509288000,"updatedTime":1708509288000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":2.31,"words":692},"filePathRelative":"zh/programBlog/ClientSideLanguage/Vue/40-前端浅拷贝和深拷贝的区别.md","localizedDate":"2023年7月1日","excerpt":"<!-- more -->\\n<!-- sticky -->\\n<h1> 前端浅拷贝和深拷贝的区别</h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<h3> 概念</h3>\\n<ul>\\n<li>浅拷贝和深拷贝都是指在将一个对象复制到另一个对象时所采用的不同策略。</li>\\n</ul>\\n<blockquote>\\n<p>浅拷贝是指创建一个新的对象，这个对象有着原始对象属性值的一份精确拷贝，\\n但是这些属性值所引用的对象并没有被拷贝，而是仍然指向原始对象中相应的属性值\\n。因此，如果原始对象中的某个属性值所引用的对象发生了变化，\\n那么浅拷贝对象中相应的属性值也会发生变化。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
