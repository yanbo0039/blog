import{_ as i,X as t,Y as l,a1 as s,Z as e,$ as a,a2 as r,a0 as d,F as c}from"./framework-68dd73a2.js";const o={},v=d(`<h1 id="_109-java-final-finally-finalize有什么区别-md" tabindex="-1"><a class="header-anchor" href="#_109-java-final-finally-finalize有什么区别-md" aria-hidden="true">#</a> 109-Java-final,finally,finalize有什么区别？.md</h1><div class="hint-container warning"><p class="hint-container-title">注意</p><p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p></div><p><strong>final</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>final修饰类，表示该类不可以被继承
final修饰方法，表示该方法不可以被重写
final修饰变量，表示该变量不可以被修改，只允许赋值一次(即为常量)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>finally</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>finally是java保证代码一定要被执行的一种机制。
比如try-finally或try-catch-finally，
用来关闭JDBC连接资源，用来解锁等等
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>finalize</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>finalize是Object的一个方法，它的目的是保证对象在被垃圾收集前完成特定资源的回收。
不过finalize已经不推荐使用，JDK9已经标记为过时。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="分割线" tabindex="-1"><a class="header-anchor" href="#分割线" aria-hidden="true">#</a> 分割线</h3><hr>`,11),f={class:"hint-container info"},m=e("p",{class:"hint-container-title"},"相关信息",-1),u=e("em",null,"109-Java-final,finally,finalize有什么区别？",-1),h={href:"https://github.com/javaobjects/demo515",target:"_blank",rel:"noopener noreferrer"};function _(p,g){const n=c("ExternalLinkIcon");return t(),l("div",null,[s(" more "),v,e("div",f,[m,e("p",null,[e("strong",null,[a("以上就是我关于 "),u,a(" 知识点的整理与总结的全部内容，"),e("a",h,[a("另附源码"),r(n)])])])])])}const x=i(o,[["render",_],["__file","java109.html.vue"]]);export{x as default};
