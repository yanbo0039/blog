const e=JSON.parse('{"key":"v-224f528f","path":"/zh/programBlog/ServerSideLanguage/Java/java18.html","title":"Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException","lang":"zh-CN","frontmatter":{"title":"Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException","icon":"page","order":18,"author":"涎涎","date":"2019-06-16T22:06:46.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java18.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java18.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException"}],["meta",{"property":"og:description","content":"Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 编写一个检查给定的数字的数据类型是否为byte的程序，如果此数字超出byte数据类型表示的数的范围，则引发用户自定义的异常ByteSizeException,并显示相应的错误信息（知识点：自定义异常） [选作题] 步骤1：创建用户自定义异常类ByteSizeException 步骤2：在main方法中编写逻辑代码 步骤3：运行并测试"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-13T03:33:51.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-06-16T22:06:46.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-13T03:33:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-16T22:06:46.000Z\\",\\"dateModified\\":\\"2023-06-13T03:33:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 编写一个检查给定的数字的数据类型是否为byte的程序，如果此数字超出byte数据类型表示的数的范围，则引发用户自定义的异常ByteSizeException,并显示相应的错误信息（知识点：自定义异常） [选作题] 步骤1：创建用户自定义异常类ByteSizeException 步骤2：在main方法中编写逻辑代码 步骤3：运行并测试"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1686627231000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":7}]},"readingTime":{"minutes":1.53,"words":460},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/18-Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException.md","localizedDate":"2019年6月16日","excerpt":"<!-- more -->\\n<h1> Java-编写一个检查给定的数字的数据XXXX则引发用户自定义的异常ByteSizeException</h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<p>编写一个检查给定的数字的数据类型是否为byte的程序，如果此数字超出byte数据类型表示的数的范围，则引发用户自定义的异常ByteSizeException,并显示相应的错误信息（知识点：自定义异常） [选作题]\\n步骤1：创建用户自定义异常类ByteSizeException\\n步骤2：在main方法中编写逻辑代码\\n步骤3：运行并测试</p>","autoDesc":true}');export{e as data};
