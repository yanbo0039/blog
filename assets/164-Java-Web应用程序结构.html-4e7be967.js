import{_ as p,X as o,Y as c,a1 as u,Z as a,$ as t,a2 as s,a0 as n,F as e}from"./framework-68dd73a2.js";const r="/blog/assets/Java_164_1.png",d="/blog/assets/Java_164_2.png",g="/blog/assets/Java_164_3.png",m="/blog/assets/Java_164_4.png",v={},k={id:"_164-java-web应用程序结构-md",tabindex:"-1"},b=a("a",{class:"header-anchor",href:"#_164-java-web应用程序结构-md","aria-hidden":"true"},"#",-1),_={href:"http://xn--164-Java-Web-8s9w8b613rkv9bwmrsvt.md",target:"_blank",rel:"noopener noreferrer"},x=n('<ul><li><p>Tomcat简介</p><ul><li>免费的开放源代码的Java Web 应用服务器</li><li>一种Servlet&amp;JSP的容器</li><li>Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人支持。</li></ul></li><li><p>Tomcat作用</p><ul><li>Servlet容器：处理客户的HTTP请求，把请求传给Servlet，并把结果返回给客户。</li></ul></li><li><p>Tomcat配置</p></li></ul><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>Tomcat目录结构</li></ul><figure><img src="'+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>文件名</th><th>说明</th></tr></thead><tbody><tr><td>/bin</td><td>存放tomcat的脚本文件和tomcat运行必须的核心文件</td></tr><tr><td>/lib</td><td>存放tomcat服务器所需的各种jar文件</td></tr><tr><td>/conf</td><td>存放tomcat的各种配置文件</td></tr><tr><td>/logs</td><td>存放tomcat的日志文件</td></tr><tr><td>/temp</td><td>Java虚拟机处理临时文件用的文件夹</td></tr><tr><td>/webapps</td><td>所有Web应用，或者说是一个个的WEB网站</td></tr><tr><td>/work</td><td>存放由JSP生成的servlet</td></tr></tbody></table><ul><li>修改用户名和密码 <ul><li>编辑CATALINA_HOME/conf/tomcat-users.xml ，在 &lt;tomcat-users&gt; 元素中加入</li></ul></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>role</span> <span class="token attr-name">rolename</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager-gui<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">username</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tomcat<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>s3cret<span class="token punctuation">&quot;</span></span> <span class="token attr-name">roles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager-gui<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修改tomcat服务器的端口号 <ul><li>编辑CATALINA_HOME/conf/server.xml ，修改&lt;Connector port=“8080” protocol=“HTTP/1.1” &gt;元素，如下</li></ul></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>&lt;Connector port=&quot;8888&quot; protocol=&quot;HTTP/1.1&quot; 
 connectionTimeout=&quot;20000&quot; 
 redirectPort=&quot;8443“
 /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),h=a("li",null,"当用户请求的URI地址与ContextRoot匹配时，对应客户请求缺省的Web资源",-1),f=n(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=“UTF-8”?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">…</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Java Web应用的组成</p><ul><li>Java Web应用由一组HTML页面、Servlet、JSP和其它相关的Java类组成：</li><li>HTML等静态内容文件</li><li>通常可以被用户直接访问</li><li>Java字节码文件（.class文件）</li><li>应用程序代码，包括Servlet <ul><li>底层的支持库文件 <ul><li>jar文件</li></ul></li><li>JSP <ul><li>应用程序代码，通常用于生成页面</li></ul></li><li>配置文件 <ul><li>部署描述符（web.xml）及其它</li></ul></li></ul></li></ul></li><li><p>Web应用标准目录结构</p></li></ul><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td>/app_name</td><td>Web应用的根目录，所有HTML和 JSP文件都存放于此目录下</td></tr><tr><td>/app_name/WEB-INF</td><td>存放web应用的发布描述文件 web.xml受保护的目录：里面的 文件不能被客户直接访问</td></tr><tr><td>/app_name/WEB-INF/classes</td><td>存放web应用中的java字节码文件</td></tr><tr><td>/app_name/WEB-INF/lib</td><td>存放web应用所需的各种jar文件</td></tr><tr><td>/app_name/META-INF</td><td>用来配置应用程序、扩展程序、类 加载器和服务mainfest.mf文件</td></tr></tbody></table>`,3),S=n(`<li><p>Web应用的编写、部署和访问基本步骤</p><ul><li>构建Web应用目录</li><li>编写相关文件： <ul><li>HTML/JSP</li><li>Servlet</li><li>web.xml</li></ul></li><li>部署</li><li>测试</li></ul></li><li><p>Web应用的ContextRoot</p><ul><li>Web应用的Context Root是URI的第一级逻辑路径</li><li>在部署时设置</li></ul></li><li><p>确定Web资源的URL</p><ul><li>HTML文件</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://主机名:端口号/&lt;Context root&gt;/Web应用中的相对路径如：http://localhost:8080/ums/index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>JSP <ul><li>与静态文件相同</li></ul></li><li>Servlet <ul><li>在web.xml文件中分配 &lt; Context root &gt;…</li></ul></li></ul></li><li><p>创建Servlet文件</p><ul><li>继承 java.servlet.http.HttpServlet</li><li>覆盖父类的doXxx方法，在方法内完成处理代码</li><li>HttpServlet的doXxx方法 <ul><li>doGet</li><li>doPost</li></ul></li><li>HttpServlet doXxx方法的参数 <ul><li>javax.servlet.http.HttpServletRequest（请求对象）</li><li>javax.servlet.http.HttpServletResponse（响应对象）</li></ul></li></ul></li>`,4),w=a("p",null,"配置Servlet文件",-1),q=a("li",null,"Web应用的部署描述符文件（DD, Deployment Descriptor） web.xml",-1),J=a("li",null,"<servlet-mapping>元素",-1),T=n(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=“UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">…</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>com.neuedu.servlet.HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>使用集成开发工具</p><ul><li>编辑</li><li>自动代码生成</li><li>编译(编译成.class文件)</li><li>打包</li><li>与应用服务器的集成</li><li>自动部署</li><li>调试</li></ul></li><li><p>自动部署</p><ul><li>默认位置workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp0</li><li>可以通过修改配置部署到Tomcat/webapps目录下</li></ul></li><li><p>MVC（Model-View-Controller）</p><ul><li>MVC是一种软件设计模式，它把系统分为3个模块： <ul><li>模型 (Model)</li><li>视图 (View)</li><li>控制器 (Controller)</li></ul></li></ul></li></ul><figure><img src="`+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>分层结构 <ul><li>1.表现层：负责用户与系统的交互 <ul><li>其中控制组件在C/S中的GUI中表现为Listener、B/S中通过Servlet/JSP实现。</li></ul></li><li>2.业务层：维护逻辑业务，系统的核心部分 <ul><li>一般命名为xxxService</li></ul></li><li>3.数据访问层（持久层）：负责与数据库的操作 <ul><li>一般命名为xxxDAO</li></ul></li></ul></li></ul><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>以上就是我关于 <em>Java-Web应用程序结构</em> 知识点整理与总结的全部内容，希望对你有帮助。。。。。。。</strong></p><hr><h3 id="分割线" tabindex="-1"><a class="header-anchor" href="#分割线" aria-hidden="true">#</a> 分割线</h3><hr><p><strong>博主为咯学编程：父母不同意学编程，现已断绝关系;恋人不同意学编程，现已分手;亲戚不同意学编程，现已断绝来往;老板不同意学编程,现已失业三十年。。。。。。如果此博文有帮到你欢迎打赏，金额不限。。。</strong></p>',10);function W(H,C){const i=e("ExternalLinkIcon"),l=e("web-app");return o(),c("div",null,[u(" more "),a("h1",k,[b,t(),a("a",_,[t("164-Java-Web应用程序结构.md"),s(i)])]),x,a("ul",null,[a("li",null,[t("配置欢迎页面 "),a("ul",null,[h,a("li",null,[t("配置：在DD文件的根元素"),s(l),t("中添加子元素")])])])]),f,a("ul",null,[S,a("li",null,[w,a("ul",null,[q,a("li",null,[t("把URL映射到Servlet，在web.xml文件的"),s(l),t("元素中添加• <servlet>元素")]),J])])]),T])}const L=p(v,[["render",W],["__file","164-Java-Web应用程序结构.html.vue"]]);export{L as default};
