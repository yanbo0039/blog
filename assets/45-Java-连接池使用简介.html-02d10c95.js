const e=JSON.parse('{"key":"v-1705caa0","path":"/zh/programBlog/ServerSideLanguage/Java/45-Java-%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B.html","title":"Java-连接池使用简介","lang":"zh-CN","frontmatter":{"title":"Java-连接池使用简介","icon":"page","order":45,"author":"涎涎","date":"2019-06-16T00:00:00.000Z","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-连接池使用简介"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/45-Java-%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-连接池使用简介"}],["meta",{"property":"og:description","content":"Java-连接池使用简介 连接池简介 连接池 是为了解决资源的频繁分配﹑释放所造成的问题而采用的技术。数据库连接池的基本思想就是为数据库连接建立一个“缓冲池”。预先在缓冲池中放入一定数量的连接，当需要建立数据库连接时，只需从“缓冲池”中取出一个，使用完毕之后再放回去。我们可以通过设定连接池最大连接数来防止系统无尽的与数据库连接。更为重要的是我们可以通过连接池的管理机制监视数据库的连接的数量﹑使用情况，为系统开发﹑测试及性能调整提供依据。 连接池技术在项目中的使用"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-15T10:10:00.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-06-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-15T10:10:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-连接池使用简介\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-15T10:10:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"Java-连接池使用简介 连接池简介 连接池 是为了解决资源的频繁分配﹑释放所造成的问题而采用的技术。数据库连接池的基本思想就是为数据库连接建立一个“缓冲池”。预先在缓冲池中放入一定数量的连接，当需要建立数据库连接时，只需从“缓冲池”中取出一个，使用完毕之后再放回去。我们可以通过设定连接池最大连接数来防止系统无尽的与数据库连接。更为重要的是我们可以通过连接池的管理机制监视数据库的连接的数量﹑使用情况，为系统开发﹑测试及性能调整提供依据。 连接池技术在项目中的使用"},"headers":[{"level":3,"title":"连接池简介","slug":"连接池简介","link":"#连接池简介","children":[]},{"level":3,"title":"连接池技术在项目中的使用","slug":"连接池技术在项目中的使用","link":"#连接池技术在项目中的使用","children":[]},{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]},{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684145400000,"updatedTime":1684145400000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":1}]},"readingTime":{"minutes":2.45,"words":734},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/45-Java-连接池使用简介.md","localizedDate":"2019年6月16日","excerpt":"<!-- more -->\\n<h1> Java-连接池使用简介</h1>\\n<h3> 连接池简介</h3>\\n<p><strong>连接池</strong> 是为了解决资源的频繁分配﹑释放所造成的问题而采用的技术。数据库连接池的基本思想就是为数据库连接建立一个“缓冲池”。预先在缓冲池中放入一定数量的连接，当需要建立数据库连接时，只需从“缓冲池”中取出一个，使用完毕之后再放回去。我们可以通过设定连接池最大连接数来防止系统无尽的与数据库连接。更为重要的是我们可以通过连接池的管理机制监视数据库的连接的数量﹑使用情况，为系统开发﹑测试及性能调整提供依据。</p>\\n<h3> 连接池技术在项目中的使用</h3>","autoDesc":true}');export{e as data};
