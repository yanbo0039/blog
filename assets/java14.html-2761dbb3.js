const e=JSON.parse('{"key":"v-1b7bf013","path":"/zh/programBlog/ServerSideLanguage/Java/java14.html","title":"Java--单例模式","lang":"zh-CN","frontmatter":{"title":"Java--单例模式","icon":"page","order":14,"author":"涎涎","date":"2019-06-16T22:03:30.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java14.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java--单例模式"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java14.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java--单例模式"}],["meta",{"property":"og:description","content":"14-Java--单例模式.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 单例模式（singleton）：保证一个类仅有一个实例，并提供一个访问它的全局访问点 单例模式要点： 某个类只能有一个实例 它必须自行创建这个示例 必须自行向整个系统提供这个实例 单例模式实现： 拥有一个私有构造器 提供一个自身静态私有的成员变量 提供一个公有的静态公有的方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-02T05:58:29.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-06-16T22:03:30.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-02T05:58:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java--单例模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-16T22:03:30.000Z\\",\\"dateModified\\":\\"2023-06-02T05:58:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"14-Java--单例模式.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 单例模式（singleton）：保证一个类仅有一个实例，并提供一个访问它的全局访问点 单例模式要点： 某个类只能有一个实例 它必须自行创建这个示例 必须自行向整个系统提供这个实例 单例模式实现： 拥有一个私有构造器 提供一个自身静态私有的成员变量 提供一个公有的静态公有的方法"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1685685509000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":4}]},"readingTime":{"minutes":1.85,"words":556},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/14-Java--单例模式.md","localizedDate":"2019年6月16日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--14-Java---yg9nn74ako9avc4a.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">14-Java--单例模式.md</a></h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<ul>\\n<li>\\n<p>单例模式（singleton）：保证一个类仅有一个实例，并提供一个访问它的全局访问点</p>\\n</li>\\n<li>\\n<p>单例模式要点：</p>\\n<ul>\\n<li>某个类只能有一个实例</li>\\n<li>它必须自行创建这个示例</li>\\n<li>必须自行向整个系统提供这个实例</li>\\n</ul>\\n</li>\\n<li>\\n<p>单例模式实现：</p>\\n<ul>\\n<li>拥有一个私有构造器</li>\\n<li>提供一个自身静态私有的成员变量</li>\\n<li>提供一个公有的静态公有的方法</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
