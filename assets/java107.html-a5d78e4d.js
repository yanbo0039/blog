const e=JSON.parse('{"key":"v-e6e3d3f8","path":"/zh/programBlog/ServerSideLanguage/Java/java107.html","title":"Java-内部类","lang":"zh-CN","frontmatter":{"title":"Java-内部类","icon":"page","order":107,"author":"涎涎","date":"2019-07-09T15:28:04.000Z","isOriginal":true,"permalinkPattern":"programBlog/ServerSideLanguage/Java/java107.html","category":["Java"],"tag":["Java"],"head":[["meta",{"name":"keywords","content":"Java-内部类"}],["meta",{"property":"og:url","content":"https://yanbo0039.github.io/blog/blog/zh/programBlog/ServerSideLanguage/Java/java107.html"}],["meta",{"property":"og:site_name","content":"涎涎的博客"}],["meta",{"property":"og:title","content":"Java-内部类"}],["meta",{"property":"og:description","content":"107-Java-内部类.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 内部类特性 内部类就是定义在另一个类内部的类。 内部类对于同一包中的其它类来说，内部类能够隐藏起来。 注意 内部类可以访问其外部类中所有的属性和方法 无需创建外部类的对象，即可从内部类访问外部类的变量和方法。 必须创建内部类的对象，否则无法从外部类访问内部类的变量和方法。 如果内部类中有和外部类同名的变量或方法，则内部类的变量和方法将获得比外部类的变量和方法更高的优先级。 不能定义static变量 内部类特性 一个类只会被这个类所调用，其他类不会使用他，你可以把它定义成一内部类，这样可以隐藏实现细节，避免错误的调用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-03T23:41:08.000Z"}],["meta",{"property":"article:author","content":"涎涎"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2019-07-09T15:28:04.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-03T23:41:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java-内部类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-07-09T15:28:04.000Z\\",\\"dateModified\\":\\"2023-06-03T23:41:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"涎涎\\"}]}"]],"description":"107-Java-内部类.md 注意 本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。 内部类特性 内部类就是定义在另一个类内部的类。 内部类对于同一包中的其它类来说，内部类能够隐藏起来。 注意 内部类可以访问其外部类中所有的属性和方法 无需创建外部类的对象，即可从内部类访问外部类的变量和方法。 必须创建内部类的对象，否则无法从外部类访问内部类的变量和方法。 如果内部类中有和外部类同名的变量或方法，则内部类的变量和方法将获得比外部类的变量和方法更高的优先级。 不能定义static变量 内部类特性 一个类只会被这个类所调用，其他类不会使用他，你可以把它定义成一内部类，这样可以隐藏实现细节，避免错误的调用。"},"headers":[{"level":3,"title":"分割线","slug":"分割线","link":"#分割线","children":[]}],"git":{"createdTime":1684701424000,"updatedTime":1685835668000,"contributors":[{"name":"涎涎","email":"yanbo0039@yeah.net","commits":6}]},"readingTime":{"minutes":2.54,"words":763},"filePathRelative":"zh/programBlog/ServerSideLanguage/Java/107-Java-内部类.md","localizedDate":"2019年7月9日","excerpt":"<!-- more -->\\n<h1> <a href=\\"http://xn--107-Java--jl3os498a1h5b.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">107-Java-内部类.md</a></h1>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>本博文仅供学术研究和交流参考，严禁将其用于商业用途。如因违规使用产生的任何法律问题，使用者需自行负责。</p>\\n</div>\\n<ul>\\n<li>内部类特性\\n<ul>\\n<li>内部类就是定义在另一个类内部的类。</li>\\n<li>内部类对于同一包中的其它类来说，内部类能够隐藏起来。</li>\\n</ul>\\n</li>\\n<li>注意\\n<ul>\\n<li>内部类可以访问其外部类中所有的属性和方法</li>\\n<li>无需创建外部类的对象，即可从内部类访问外部类的变量和方法。</li>\\n<li>必须创建内部类的对象，否则无法从外部类访问内部类的变量和方法。</li>\\n<li>如果内部类中有和外部类同名的变量或方法，则内部类的变量和方法将获得比外部类的变量和方法更高的优先级。</li>\\n<li>不能定义static变量</li>\\n</ul>\\n</li>\\n<li>内部类特性\\n<ul>\\n<li>一个类只会被这个类所调用，其他类不会使用他，你可以把它定义成一内部类，这样可以隐藏实现细节，避免错误的调用。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
